
11-SpecialRegisters.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000af8  080001f0  080001f0  000011f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000060  08000ce8  08000ce8  00001ce8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000d48  08000d48  0000205c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000d48  08000d48  0000205c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000d48  08000d48  0000205c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d48  08000d48  00001d48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000d4c  08000d4c  00001d4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08000d50  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08000dac  0000205c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08000dac  000021c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000205c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001b5e  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000604  00000000  00000000  00003bea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00000393  00000000  00000000  000041ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000148  00000000  00000000  00004588  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000107  00000000  00000000  000046d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002e7c  00000000  00000000  000047d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001adc  00000000  00000000  00007653  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000a243  00000000  00000000  0000912f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00013372  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000008d8  00000000  00000000  000133b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000060  00000000  00000000  00013c90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f0 <__do_global_dtors_aux>:
 80001f0:	b510      	push	{r4, lr}
 80001f2:	4c05      	ldr	r4, [pc, #20]	@ (8000208 <__do_global_dtors_aux+0x18>)
 80001f4:	7823      	ldrb	r3, [r4, #0]
 80001f6:	b933      	cbnz	r3, 8000206 <__do_global_dtors_aux+0x16>
 80001f8:	4b04      	ldr	r3, [pc, #16]	@ (800020c <__do_global_dtors_aux+0x1c>)
 80001fa:	b113      	cbz	r3, 8000202 <__do_global_dtors_aux+0x12>
 80001fc:	4804      	ldr	r0, [pc, #16]	@ (8000210 <__do_global_dtors_aux+0x20>)
 80001fe:	f3af 8000 	nop.w
 8000202:	2301      	movs	r3, #1
 8000204:	7023      	strb	r3, [r4, #0]
 8000206:	bd10      	pop	{r4, pc}
 8000208:	2000005c 	.word	0x2000005c
 800020c:	00000000 	.word	0x00000000
 8000210:	08000cd0 	.word	0x08000cd0

08000214 <frame_dummy>:
 8000214:	b508      	push	{r3, lr}
 8000216:	4b03      	ldr	r3, [pc, #12]	@ (8000224 <frame_dummy+0x10>)
 8000218:	b11b      	cbz	r3, 8000222 <frame_dummy+0xe>
 800021a:	4903      	ldr	r1, [pc, #12]	@ (8000228 <frame_dummy+0x14>)
 800021c:	4803      	ldr	r0, [pc, #12]	@ (800022c <frame_dummy+0x18>)
 800021e:	f3af 8000 	nop.w
 8000222:	bd08      	pop	{r3, pc}
 8000224:	00000000 	.word	0x00000000
 8000228:	20000060 	.word	0x20000060
 800022c:	08000cd0 	.word	0x08000cd0

08000230 <_write>:
int _write(int file, char *ptr, int len)
{
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000230:	1e10      	subs	r0, r2, #0
 8000232:	dd1b      	ble.n	800026c <_write+0x3c>
    DEMCR |= (1 << 24);
 8000234:	f04f 2ce0 	mov.w	ip, #3758153728	@ 0xe000e000
    ITM_TRACE_EN |= (1 << 0);
 8000238:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
{
 800023c:	b510      	push	{r4, lr}
 800023e:	eb01 0e00 	add.w	lr, r1, r0
    DEMCR |= (1 << 24);
 8000242:	f8dc 3dfc 	ldr.w	r3, [ip, #3580]	@ 0xdfc
  {
	  ITM_SendChar(*ptr++);
 8000246:	f811 4b01 	ldrb.w	r4, [r1], #1
    DEMCR |= (1 << 24);
 800024a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800024e:	f8cc 3dfc 	str.w	r3, [ip, #3580]	@ 0xdfc
    ITM_TRACE_EN |= (1 << 0);
 8000252:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 8000256:	f043 0301 	orr.w	r3, r3, #1
 800025a:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
    while (!(ITM_STIMULUS_PORT0 & 1));
 800025e:	6813      	ldr	r3, [r2, #0]
 8000260:	07db      	lsls	r3, r3, #31
 8000262:	d5fc      	bpl.n	800025e <_write+0x2e>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000264:	458e      	cmp	lr, r1
    ITM_STIMULUS_PORT0 = ch;
 8000266:	6014      	str	r4, [r2, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000268:	d1eb      	bne.n	8000242 <_write+0x12>
  }
  return len;
}
 800026a:	bd10      	pop	{r4, pc}
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
	//generate an interrupt from software for IRQ3
	*pSTIR = (2 & 0x1FF);
}

int main(void)
{
 8000270:	b508      	push	{r3, lr}
	printf("In thread mode : before interrupt\n");
 8000272:	4809      	ldr	r0, [pc, #36]	@ (8000298 <main+0x28>)
 8000274:	f000 f99c 	bl	80005b0 <puts>
	*pNVIC_ISER0 |= (1 << 2);
 8000278:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
	*pSTIR = (2 & 0x1FF);
 800027c:	2102      	movs	r1, #2
	*pNVIC_ISER0 |= (1 << 2);
 800027e:	f8d3 2100 	ldr.w	r2, [r3, #256]	@ 0x100

	generate_interrupt();

	printf("In thread mode : after interrupt\n");
 8000282:	4806      	ldr	r0, [pc, #24]	@ (800029c <main+0x2c>)
	*pNVIC_ISER0 |= (1 << 2);
 8000284:	f042 0204 	orr.w	r2, r2, #4
	*pSTIR = (2 & 0x1FF);
 8000288:	f8c3 1f00 	str.w	r1, [r3, #3840]	@ 0xf00
	*pNVIC_ISER0 |= (1 << 2);
 800028c:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
	printf("In thread mode : after interrupt\n");
 8000290:	f000 f98e 	bl	80005b0 <puts>

	for (;;);
 8000294:	e7fe      	b.n	8000294 <main+0x24>
 8000296:	bf00      	nop
 8000298:	08000ce8 	.word	0x08000ce8
 800029c:	08000d0c 	.word	0x08000d0c

080002a0 <RTC_IRQHandler>:
}

/* This function(ISR) executes in HANDLER MODE of the processor */
void RTC_IRQHandler(void)
{
	printf("In handler mode : ISR\n");
 80002a0:	4801      	ldr	r0, [pc, #4]	@ (80002a8 <RTC_IRQHandler+0x8>)
 80002a2:	f000 b985 	b.w	80005b0 <puts>
 80002a6:	bf00      	nop
 80002a8:	08000d30 	.word	0x08000d30

080002ac <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002ac:	b570      	push	{r4, r5, r6, lr}
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ae:	1e16      	subs	r6, r2, #0
 80002b0:	dd07      	ble.n	80002c2 <_read+0x16>
 80002b2:	460c      	mov	r4, r1
 80002b4:	198d      	adds	r5, r1, r6
  {
    *ptr++ = __io_getchar();
 80002b6:	f3af 8000 	nop.w
 80002ba:	f804 0b01 	strb.w	r0, [r4], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002be:	42a5      	cmp	r5, r4
 80002c0:	d1f9      	bne.n	80002b6 <_read+0xa>
  }

  return len;
}
 80002c2:	4630      	mov	r0, r6
 80002c4:	bd70      	pop	{r4, r5, r6, pc}
 80002c6:	bf00      	nop

080002c8 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 80002c8:	f04f 30ff 	mov.w	r0, #4294967295
 80002cc:	4770      	bx	lr
 80002ce:	bf00      	nop

080002d0 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 80002d0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  return 0;
}
 80002d4:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 80002d6:	604b      	str	r3, [r1, #4]
}
 80002d8:	4770      	bx	lr
 80002da:	bf00      	nop

080002dc <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 80002dc:	2001      	movs	r0, #1
 80002de:	4770      	bx	lr

080002e0 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 80002e0:	2000      	movs	r0, #0
 80002e2:	4770      	bx	lr

080002e4 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002e4:	490d      	ldr	r1, [pc, #52]	@ (800031c <_sbrk+0x38>)
{
 80002e6:	4603      	mov	r3, r0
 80002e8:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002ea:	4a0d      	ldr	r2, [pc, #52]	@ (8000320 <_sbrk+0x3c>)
 80002ec:	4c0d      	ldr	r4, [pc, #52]	@ (8000324 <_sbrk+0x40>)
  if (NULL == __sbrk_heap_end)
 80002ee:	6808      	ldr	r0, [r1, #0]
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002f0:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 80002f2:	b120      	cbz	r0, 80002fe <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002f4:	4403      	add	r3, r0
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d807      	bhi.n	800030a <_sbrk+0x26>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 80002fa:	600b      	str	r3, [r1, #0]

  return (void *)prev_heap_end;
}
 80002fc:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 80002fe:	4c0a      	ldr	r4, [pc, #40]	@ (8000328 <_sbrk+0x44>)
 8000300:	4620      	mov	r0, r4
  if (__sbrk_heap_end + incr > max_heap)
 8000302:	4403      	add	r3, r0
 8000304:	4293      	cmp	r3, r2
    __sbrk_heap_end = &_end;
 8000306:	600c      	str	r4, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 8000308:	d9f7      	bls.n	80002fa <_sbrk+0x16>
    errno = ENOMEM;
 800030a:	f000 fa7f 	bl	800080c <__errno>
 800030e:	220c      	movs	r2, #12
 8000310:	4603      	mov	r3, r0
    return (void *)-1;
 8000312:	f04f 30ff 	mov.w	r0, #4294967295
    errno = ENOMEM;
 8000316:	601a      	str	r2, [r3, #0]
}
 8000318:	bd10      	pop	{r4, pc}
 800031a:	bf00      	nop
 800031c:	20000078 	.word	0x20000078
 8000320:	20030000 	.word	0x20030000
 8000324:	00000400 	.word	0x00000400
 8000328:	200001c8 	.word	0x200001c8

0800032c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800032c:	480d      	ldr	r0, [pc, #52]	@ (8000364 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800032e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000330:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000334:	480c      	ldr	r0, [pc, #48]	@ (8000368 <LoopForever+0x6>)
  ldr r1, =_edata
 8000336:	490d      	ldr	r1, [pc, #52]	@ (800036c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000338:	4a0d      	ldr	r2, [pc, #52]	@ (8000370 <LoopForever+0xe>)
  movs r3, #0
 800033a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800033c:	e002      	b.n	8000344 <LoopCopyDataInit>

0800033e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800033e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000340:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000342:	3304      	adds	r3, #4

08000344 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000344:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000346:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000348:	d3f9      	bcc.n	800033e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800034a:	4a0a      	ldr	r2, [pc, #40]	@ (8000374 <LoopForever+0x12>)
  ldr r4, =_ebss
 800034c:	4c0a      	ldr	r4, [pc, #40]	@ (8000378 <LoopForever+0x16>)
  movs r3, #0
 800034e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000350:	e001      	b.n	8000356 <LoopFillZerobss>

08000352 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000352:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000354:	3204      	adds	r2, #4

08000356 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000356:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000358:	d3fb      	bcc.n	8000352 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800035a:	f000 fa5d 	bl	8000818 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800035e:	f7ff ff87 	bl	8000270 <main>

08000362 <LoopForever>:

LoopForever:
  b LoopForever
 8000362:	e7fe      	b.n	8000362 <LoopForever>
  ldr   r0, =_estack
 8000364:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000368:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800036c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000370:	08000d50 	.word	0x08000d50
  ldr r2, =_sbss
 8000374:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000378:	200001c8 	.word	0x200001c8

0800037c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800037c:	e7fe      	b.n	800037c <ADC1_2_IRQHandler>
	...

08000380 <std>:
 8000380:	2300      	movs	r3, #0
 8000382:	b510      	push	{r4, lr}
 8000384:	4604      	mov	r4, r0
 8000386:	6083      	str	r3, [r0, #8]
 8000388:	8181      	strh	r1, [r0, #12]
 800038a:	4619      	mov	r1, r3
 800038c:	6643      	str	r3, [r0, #100]	@ 0x64
 800038e:	81c2      	strh	r2, [r0, #14]
 8000390:	2208      	movs	r2, #8
 8000392:	6183      	str	r3, [r0, #24]
 8000394:	e9c0 3300 	strd	r3, r3, [r0]
 8000398:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800039c:	305c      	adds	r0, #92	@ 0x5c
 800039e:	f000 f9e7 	bl	8000770 <memset>
 80003a2:	4b0d      	ldr	r3, [pc, #52]	@ (80003d8 <std+0x58>)
 80003a4:	6224      	str	r4, [r4, #32]
 80003a6:	6263      	str	r3, [r4, #36]	@ 0x24
 80003a8:	4b0c      	ldr	r3, [pc, #48]	@ (80003dc <std+0x5c>)
 80003aa:	62a3      	str	r3, [r4, #40]	@ 0x28
 80003ac:	4b0c      	ldr	r3, [pc, #48]	@ (80003e0 <std+0x60>)
 80003ae:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80003b0:	4b0c      	ldr	r3, [pc, #48]	@ (80003e4 <std+0x64>)
 80003b2:	6323      	str	r3, [r4, #48]	@ 0x30
 80003b4:	4b0c      	ldr	r3, [pc, #48]	@ (80003e8 <std+0x68>)
 80003b6:	429c      	cmp	r4, r3
 80003b8:	d006      	beq.n	80003c8 <std+0x48>
 80003ba:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80003be:	4294      	cmp	r4, r2
 80003c0:	d002      	beq.n	80003c8 <std+0x48>
 80003c2:	33d0      	adds	r3, #208	@ 0xd0
 80003c4:	429c      	cmp	r4, r3
 80003c6:	d105      	bne.n	80003d4 <std+0x54>
 80003c8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80003cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80003d0:	f000 ba46 	b.w	8000860 <__retarget_lock_init_recursive>
 80003d4:	bd10      	pop	{r4, pc}
 80003d6:	bf00      	nop
 80003d8:	080005c1 	.word	0x080005c1
 80003dc:	080005e3 	.word	0x080005e3
 80003e0:	0800061b 	.word	0x0800061b
 80003e4:	0800063f 	.word	0x0800063f
 80003e8:	2000007c 	.word	0x2000007c

080003ec <stdio_exit_handler>:
 80003ec:	4a02      	ldr	r2, [pc, #8]	@ (80003f8 <stdio_exit_handler+0xc>)
 80003ee:	4903      	ldr	r1, [pc, #12]	@ (80003fc <stdio_exit_handler+0x10>)
 80003f0:	4803      	ldr	r0, [pc, #12]	@ (8000400 <stdio_exit_handler+0x14>)
 80003f2:	f000 b869 	b.w	80004c8 <_fwalk_sglue>
 80003f6:	bf00      	nop
 80003f8:	20000000 	.word	0x20000000
 80003fc:	08000b59 	.word	0x08000b59
 8000400:	20000010 	.word	0x20000010

08000404 <cleanup_stdio>:
 8000404:	6841      	ldr	r1, [r0, #4]
 8000406:	4b0c      	ldr	r3, [pc, #48]	@ (8000438 <cleanup_stdio+0x34>)
 8000408:	4299      	cmp	r1, r3
 800040a:	b510      	push	{r4, lr}
 800040c:	4604      	mov	r4, r0
 800040e:	d001      	beq.n	8000414 <cleanup_stdio+0x10>
 8000410:	f000 fba2 	bl	8000b58 <_fflush_r>
 8000414:	68a1      	ldr	r1, [r4, #8]
 8000416:	4b09      	ldr	r3, [pc, #36]	@ (800043c <cleanup_stdio+0x38>)
 8000418:	4299      	cmp	r1, r3
 800041a:	d002      	beq.n	8000422 <cleanup_stdio+0x1e>
 800041c:	4620      	mov	r0, r4
 800041e:	f000 fb9b 	bl	8000b58 <_fflush_r>
 8000422:	68e1      	ldr	r1, [r4, #12]
 8000424:	4b06      	ldr	r3, [pc, #24]	@ (8000440 <cleanup_stdio+0x3c>)
 8000426:	4299      	cmp	r1, r3
 8000428:	d004      	beq.n	8000434 <cleanup_stdio+0x30>
 800042a:	4620      	mov	r0, r4
 800042c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000430:	f000 bb92 	b.w	8000b58 <_fflush_r>
 8000434:	bd10      	pop	{r4, pc}
 8000436:	bf00      	nop
 8000438:	2000007c 	.word	0x2000007c
 800043c:	200000e4 	.word	0x200000e4
 8000440:	2000014c 	.word	0x2000014c

08000444 <global_stdio_init.part.0>:
 8000444:	b510      	push	{r4, lr}
 8000446:	4b0b      	ldr	r3, [pc, #44]	@ (8000474 <global_stdio_init.part.0+0x30>)
 8000448:	2104      	movs	r1, #4
 800044a:	4c0b      	ldr	r4, [pc, #44]	@ (8000478 <global_stdio_init.part.0+0x34>)
 800044c:	4a0b      	ldr	r2, [pc, #44]	@ (800047c <global_stdio_init.part.0+0x38>)
 800044e:	4620      	mov	r0, r4
 8000450:	601a      	str	r2, [r3, #0]
 8000452:	2200      	movs	r2, #0
 8000454:	f7ff ff94 	bl	8000380 <std>
 8000458:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800045c:	2201      	movs	r2, #1
 800045e:	2109      	movs	r1, #9
 8000460:	f7ff ff8e 	bl	8000380 <std>
 8000464:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000468:	2202      	movs	r2, #2
 800046a:	2112      	movs	r1, #18
 800046c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000470:	f7ff bf86 	b.w	8000380 <std>
 8000474:	200001b4 	.word	0x200001b4
 8000478:	2000007c 	.word	0x2000007c
 800047c:	080003ed 	.word	0x080003ed

08000480 <__sfp_lock_acquire>:
 8000480:	4801      	ldr	r0, [pc, #4]	@ (8000488 <__sfp_lock_acquire+0x8>)
 8000482:	f000 b9ee 	b.w	8000862 <__retarget_lock_acquire_recursive>
 8000486:	bf00      	nop
 8000488:	200001bd 	.word	0x200001bd

0800048c <__sfp_lock_release>:
 800048c:	4801      	ldr	r0, [pc, #4]	@ (8000494 <__sfp_lock_release+0x8>)
 800048e:	f000 b9e9 	b.w	8000864 <__retarget_lock_release_recursive>
 8000492:	bf00      	nop
 8000494:	200001bd 	.word	0x200001bd

08000498 <__sinit>:
 8000498:	b510      	push	{r4, lr}
 800049a:	4604      	mov	r4, r0
 800049c:	f7ff fff0 	bl	8000480 <__sfp_lock_acquire>
 80004a0:	6a23      	ldr	r3, [r4, #32]
 80004a2:	b11b      	cbz	r3, 80004ac <__sinit+0x14>
 80004a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004a8:	f7ff bff0 	b.w	800048c <__sfp_lock_release>
 80004ac:	4b04      	ldr	r3, [pc, #16]	@ (80004c0 <__sinit+0x28>)
 80004ae:	6223      	str	r3, [r4, #32]
 80004b0:	4b04      	ldr	r3, [pc, #16]	@ (80004c4 <__sinit+0x2c>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	2b00      	cmp	r3, #0
 80004b6:	d1f5      	bne.n	80004a4 <__sinit+0xc>
 80004b8:	f7ff ffc4 	bl	8000444 <global_stdio_init.part.0>
 80004bc:	e7f2      	b.n	80004a4 <__sinit+0xc>
 80004be:	bf00      	nop
 80004c0:	08000405 	.word	0x08000405
 80004c4:	200001b4 	.word	0x200001b4

080004c8 <_fwalk_sglue>:
 80004c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80004cc:	4607      	mov	r7, r0
 80004ce:	4688      	mov	r8, r1
 80004d0:	4614      	mov	r4, r2
 80004d2:	2600      	movs	r6, #0
 80004d4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80004d8:	f1b9 0901 	subs.w	r9, r9, #1
 80004dc:	d505      	bpl.n	80004ea <_fwalk_sglue+0x22>
 80004de:	6824      	ldr	r4, [r4, #0]
 80004e0:	2c00      	cmp	r4, #0
 80004e2:	d1f7      	bne.n	80004d4 <_fwalk_sglue+0xc>
 80004e4:	4630      	mov	r0, r6
 80004e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80004ea:	89ab      	ldrh	r3, [r5, #12]
 80004ec:	2b01      	cmp	r3, #1
 80004ee:	d907      	bls.n	8000500 <_fwalk_sglue+0x38>
 80004f0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80004f4:	3301      	adds	r3, #1
 80004f6:	d003      	beq.n	8000500 <_fwalk_sglue+0x38>
 80004f8:	4629      	mov	r1, r5
 80004fa:	4638      	mov	r0, r7
 80004fc:	47c0      	blx	r8
 80004fe:	4306      	orrs	r6, r0
 8000500:	3568      	adds	r5, #104	@ 0x68
 8000502:	e7e9      	b.n	80004d8 <_fwalk_sglue+0x10>

08000504 <_puts_r>:
 8000504:	6a03      	ldr	r3, [r0, #32]
 8000506:	b570      	push	{r4, r5, r6, lr}
 8000508:	4605      	mov	r5, r0
 800050a:	460e      	mov	r6, r1
 800050c:	6884      	ldr	r4, [r0, #8]
 800050e:	b90b      	cbnz	r3, 8000514 <_puts_r+0x10>
 8000510:	f7ff ffc2 	bl	8000498 <__sinit>
 8000514:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000516:	07db      	lsls	r3, r3, #31
 8000518:	d405      	bmi.n	8000526 <_puts_r+0x22>
 800051a:	89a3      	ldrh	r3, [r4, #12]
 800051c:	0598      	lsls	r0, r3, #22
 800051e:	d402      	bmi.n	8000526 <_puts_r+0x22>
 8000520:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000522:	f000 f99e 	bl	8000862 <__retarget_lock_acquire_recursive>
 8000526:	89a3      	ldrh	r3, [r4, #12]
 8000528:	0719      	lsls	r1, r3, #28
 800052a:	d502      	bpl.n	8000532 <_puts_r+0x2e>
 800052c:	6923      	ldr	r3, [r4, #16]
 800052e:	2b00      	cmp	r3, #0
 8000530:	d135      	bne.n	800059e <_puts_r+0x9a>
 8000532:	4621      	mov	r1, r4
 8000534:	4628      	mov	r0, r5
 8000536:	f000 f8c5 	bl	80006c4 <__swsetup_r>
 800053a:	b380      	cbz	r0, 800059e <_puts_r+0x9a>
 800053c:	f04f 35ff 	mov.w	r5, #4294967295
 8000540:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000542:	07da      	lsls	r2, r3, #31
 8000544:	d405      	bmi.n	8000552 <_puts_r+0x4e>
 8000546:	89a3      	ldrh	r3, [r4, #12]
 8000548:	059b      	lsls	r3, r3, #22
 800054a:	d402      	bmi.n	8000552 <_puts_r+0x4e>
 800054c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800054e:	f000 f989 	bl	8000864 <__retarget_lock_release_recursive>
 8000552:	4628      	mov	r0, r5
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	2b00      	cmp	r3, #0
 8000558:	da04      	bge.n	8000564 <_puts_r+0x60>
 800055a:	69a2      	ldr	r2, [r4, #24]
 800055c:	429a      	cmp	r2, r3
 800055e:	dc17      	bgt.n	8000590 <_puts_r+0x8c>
 8000560:	290a      	cmp	r1, #10
 8000562:	d015      	beq.n	8000590 <_puts_r+0x8c>
 8000564:	6823      	ldr	r3, [r4, #0]
 8000566:	1c5a      	adds	r2, r3, #1
 8000568:	6022      	str	r2, [r4, #0]
 800056a:	7019      	strb	r1, [r3, #0]
 800056c:	68a3      	ldr	r3, [r4, #8]
 800056e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000572:	3b01      	subs	r3, #1
 8000574:	60a3      	str	r3, [r4, #8]
 8000576:	2900      	cmp	r1, #0
 8000578:	d1ed      	bne.n	8000556 <_puts_r+0x52>
 800057a:	2b00      	cmp	r3, #0
 800057c:	da11      	bge.n	80005a2 <_puts_r+0x9e>
 800057e:	4622      	mov	r2, r4
 8000580:	210a      	movs	r1, #10
 8000582:	4628      	mov	r0, r5
 8000584:	f000 f85f 	bl	8000646 <__swbuf_r>
 8000588:	3001      	adds	r0, #1
 800058a:	d0d7      	beq.n	800053c <_puts_r+0x38>
 800058c:	250a      	movs	r5, #10
 800058e:	e7d7      	b.n	8000540 <_puts_r+0x3c>
 8000590:	4622      	mov	r2, r4
 8000592:	4628      	mov	r0, r5
 8000594:	f000 f857 	bl	8000646 <__swbuf_r>
 8000598:	3001      	adds	r0, #1
 800059a:	d1e7      	bne.n	800056c <_puts_r+0x68>
 800059c:	e7ce      	b.n	800053c <_puts_r+0x38>
 800059e:	3e01      	subs	r6, #1
 80005a0:	e7e4      	b.n	800056c <_puts_r+0x68>
 80005a2:	6823      	ldr	r3, [r4, #0]
 80005a4:	1c5a      	adds	r2, r3, #1
 80005a6:	6022      	str	r2, [r4, #0]
 80005a8:	220a      	movs	r2, #10
 80005aa:	701a      	strb	r2, [r3, #0]
 80005ac:	e7ee      	b.n	800058c <_puts_r+0x88>
	...

080005b0 <puts>:
 80005b0:	4b02      	ldr	r3, [pc, #8]	@ (80005bc <puts+0xc>)
 80005b2:	4601      	mov	r1, r0
 80005b4:	6818      	ldr	r0, [r3, #0]
 80005b6:	f7ff bfa5 	b.w	8000504 <_puts_r>
 80005ba:	bf00      	nop
 80005bc:	2000000c 	.word	0x2000000c

080005c0 <__sread>:
 80005c0:	b510      	push	{r4, lr}
 80005c2:	460c      	mov	r4, r1
 80005c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005c8:	f000 f8fc 	bl	80007c4 <_read_r>
 80005cc:	2800      	cmp	r0, #0
 80005ce:	bfab      	itete	ge
 80005d0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80005d2:	89a3      	ldrhlt	r3, [r4, #12]
 80005d4:	181b      	addge	r3, r3, r0
 80005d6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80005da:	bfac      	ite	ge
 80005dc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80005de:	81a3      	strhlt	r3, [r4, #12]
 80005e0:	bd10      	pop	{r4, pc}

080005e2 <__swrite>:
 80005e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80005e6:	461f      	mov	r7, r3
 80005e8:	898b      	ldrh	r3, [r1, #12]
 80005ea:	4605      	mov	r5, r0
 80005ec:	460c      	mov	r4, r1
 80005ee:	05db      	lsls	r3, r3, #23
 80005f0:	4616      	mov	r6, r2
 80005f2:	d505      	bpl.n	8000600 <__swrite+0x1e>
 80005f4:	2302      	movs	r3, #2
 80005f6:	2200      	movs	r2, #0
 80005f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005fc:	f000 f8d0 	bl	80007a0 <_lseek_r>
 8000600:	89a3      	ldrh	r3, [r4, #12]
 8000602:	4632      	mov	r2, r6
 8000604:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000608:	4628      	mov	r0, r5
 800060a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800060e:	81a3      	strh	r3, [r4, #12]
 8000610:	463b      	mov	r3, r7
 8000612:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000616:	f000 b8e7 	b.w	80007e8 <_write_r>

0800061a <__sseek>:
 800061a:	b510      	push	{r4, lr}
 800061c:	460c      	mov	r4, r1
 800061e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000622:	f000 f8bd 	bl	80007a0 <_lseek_r>
 8000626:	1c43      	adds	r3, r0, #1
 8000628:	89a3      	ldrh	r3, [r4, #12]
 800062a:	bf15      	itete	ne
 800062c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800062e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000632:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000636:	81a3      	strheq	r3, [r4, #12]
 8000638:	bf18      	it	ne
 800063a:	81a3      	strhne	r3, [r4, #12]
 800063c:	bd10      	pop	{r4, pc}

0800063e <__sclose>:
 800063e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000642:	f000 b89d 	b.w	8000780 <_close_r>

08000646 <__swbuf_r>:
 8000646:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000648:	460e      	mov	r6, r1
 800064a:	4614      	mov	r4, r2
 800064c:	4605      	mov	r5, r0
 800064e:	b118      	cbz	r0, 8000658 <__swbuf_r+0x12>
 8000650:	6a03      	ldr	r3, [r0, #32]
 8000652:	b90b      	cbnz	r3, 8000658 <__swbuf_r+0x12>
 8000654:	f7ff ff20 	bl	8000498 <__sinit>
 8000658:	69a3      	ldr	r3, [r4, #24]
 800065a:	60a3      	str	r3, [r4, #8]
 800065c:	89a3      	ldrh	r3, [r4, #12]
 800065e:	071a      	lsls	r2, r3, #28
 8000660:	d501      	bpl.n	8000666 <__swbuf_r+0x20>
 8000662:	6923      	ldr	r3, [r4, #16]
 8000664:	b943      	cbnz	r3, 8000678 <__swbuf_r+0x32>
 8000666:	4621      	mov	r1, r4
 8000668:	4628      	mov	r0, r5
 800066a:	f000 f82b 	bl	80006c4 <__swsetup_r>
 800066e:	b118      	cbz	r0, 8000678 <__swbuf_r+0x32>
 8000670:	f04f 37ff 	mov.w	r7, #4294967295
 8000674:	4638      	mov	r0, r7
 8000676:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000678:	6823      	ldr	r3, [r4, #0]
 800067a:	b2f6      	uxtb	r6, r6
 800067c:	6922      	ldr	r2, [r4, #16]
 800067e:	4637      	mov	r7, r6
 8000680:	1a98      	subs	r0, r3, r2
 8000682:	6963      	ldr	r3, [r4, #20]
 8000684:	4283      	cmp	r3, r0
 8000686:	dc05      	bgt.n	8000694 <__swbuf_r+0x4e>
 8000688:	4621      	mov	r1, r4
 800068a:	4628      	mov	r0, r5
 800068c:	f000 fa64 	bl	8000b58 <_fflush_r>
 8000690:	2800      	cmp	r0, #0
 8000692:	d1ed      	bne.n	8000670 <__swbuf_r+0x2a>
 8000694:	68a3      	ldr	r3, [r4, #8]
 8000696:	3b01      	subs	r3, #1
 8000698:	60a3      	str	r3, [r4, #8]
 800069a:	6823      	ldr	r3, [r4, #0]
 800069c:	1c5a      	adds	r2, r3, #1
 800069e:	6022      	str	r2, [r4, #0]
 80006a0:	701e      	strb	r6, [r3, #0]
 80006a2:	1c43      	adds	r3, r0, #1
 80006a4:	6962      	ldr	r2, [r4, #20]
 80006a6:	429a      	cmp	r2, r3
 80006a8:	d004      	beq.n	80006b4 <__swbuf_r+0x6e>
 80006aa:	89a3      	ldrh	r3, [r4, #12]
 80006ac:	07db      	lsls	r3, r3, #31
 80006ae:	d5e1      	bpl.n	8000674 <__swbuf_r+0x2e>
 80006b0:	2e0a      	cmp	r6, #10
 80006b2:	d1df      	bne.n	8000674 <__swbuf_r+0x2e>
 80006b4:	4621      	mov	r1, r4
 80006b6:	4628      	mov	r0, r5
 80006b8:	f000 fa4e 	bl	8000b58 <_fflush_r>
 80006bc:	2800      	cmp	r0, #0
 80006be:	d0d9      	beq.n	8000674 <__swbuf_r+0x2e>
 80006c0:	e7d6      	b.n	8000670 <__swbuf_r+0x2a>
	...

080006c4 <__swsetup_r>:
 80006c4:	b538      	push	{r3, r4, r5, lr}
 80006c6:	4b29      	ldr	r3, [pc, #164]	@ (800076c <__swsetup_r+0xa8>)
 80006c8:	4605      	mov	r5, r0
 80006ca:	460c      	mov	r4, r1
 80006cc:	6818      	ldr	r0, [r3, #0]
 80006ce:	b118      	cbz	r0, 80006d8 <__swsetup_r+0x14>
 80006d0:	6a03      	ldr	r3, [r0, #32]
 80006d2:	b90b      	cbnz	r3, 80006d8 <__swsetup_r+0x14>
 80006d4:	f7ff fee0 	bl	8000498 <__sinit>
 80006d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006dc:	0719      	lsls	r1, r3, #28
 80006de:	d422      	bmi.n	8000726 <__swsetup_r+0x62>
 80006e0:	06da      	lsls	r2, r3, #27
 80006e2:	d407      	bmi.n	80006f4 <__swsetup_r+0x30>
 80006e4:	2209      	movs	r2, #9
 80006e6:	602a      	str	r2, [r5, #0]
 80006e8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80006ec:	f04f 30ff 	mov.w	r0, #4294967295
 80006f0:	81a3      	strh	r3, [r4, #12]
 80006f2:	e033      	b.n	800075c <__swsetup_r+0x98>
 80006f4:	0758      	lsls	r0, r3, #29
 80006f6:	d512      	bpl.n	800071e <__swsetup_r+0x5a>
 80006f8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80006fa:	b141      	cbz	r1, 800070e <__swsetup_r+0x4a>
 80006fc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000700:	4299      	cmp	r1, r3
 8000702:	d002      	beq.n	800070a <__swsetup_r+0x46>
 8000704:	4628      	mov	r0, r5
 8000706:	f000 f8af 	bl	8000868 <_free_r>
 800070a:	2300      	movs	r3, #0
 800070c:	6363      	str	r3, [r4, #52]	@ 0x34
 800070e:	89a3      	ldrh	r3, [r4, #12]
 8000710:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000714:	81a3      	strh	r3, [r4, #12]
 8000716:	2300      	movs	r3, #0
 8000718:	6063      	str	r3, [r4, #4]
 800071a:	6923      	ldr	r3, [r4, #16]
 800071c:	6023      	str	r3, [r4, #0]
 800071e:	89a3      	ldrh	r3, [r4, #12]
 8000720:	f043 0308 	orr.w	r3, r3, #8
 8000724:	81a3      	strh	r3, [r4, #12]
 8000726:	6923      	ldr	r3, [r4, #16]
 8000728:	b94b      	cbnz	r3, 800073e <__swsetup_r+0x7a>
 800072a:	89a3      	ldrh	r3, [r4, #12]
 800072c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000730:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000734:	d003      	beq.n	800073e <__swsetup_r+0x7a>
 8000736:	4621      	mov	r1, r4
 8000738:	4628      	mov	r0, r5
 800073a:	f000 fa5a 	bl	8000bf2 <__smakebuf_r>
 800073e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000742:	f013 0201 	ands.w	r2, r3, #1
 8000746:	d00a      	beq.n	800075e <__swsetup_r+0x9a>
 8000748:	2200      	movs	r2, #0
 800074a:	60a2      	str	r2, [r4, #8]
 800074c:	6962      	ldr	r2, [r4, #20]
 800074e:	4252      	negs	r2, r2
 8000750:	61a2      	str	r2, [r4, #24]
 8000752:	6922      	ldr	r2, [r4, #16]
 8000754:	b942      	cbnz	r2, 8000768 <__swsetup_r+0xa4>
 8000756:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800075a:	d1c5      	bne.n	80006e8 <__swsetup_r+0x24>
 800075c:	bd38      	pop	{r3, r4, r5, pc}
 800075e:	0799      	lsls	r1, r3, #30
 8000760:	bf58      	it	pl
 8000762:	6962      	ldrpl	r2, [r4, #20]
 8000764:	60a2      	str	r2, [r4, #8]
 8000766:	e7f4      	b.n	8000752 <__swsetup_r+0x8e>
 8000768:	2000      	movs	r0, #0
 800076a:	e7f7      	b.n	800075c <__swsetup_r+0x98>
 800076c:	2000000c 	.word	0x2000000c

08000770 <memset>:
 8000770:	4402      	add	r2, r0
 8000772:	4603      	mov	r3, r0
 8000774:	4293      	cmp	r3, r2
 8000776:	d100      	bne.n	800077a <memset+0xa>
 8000778:	4770      	bx	lr
 800077a:	f803 1b01 	strb.w	r1, [r3], #1
 800077e:	e7f9      	b.n	8000774 <memset+0x4>

08000780 <_close_r>:
 8000780:	b538      	push	{r3, r4, r5, lr}
 8000782:	2300      	movs	r3, #0
 8000784:	4d05      	ldr	r5, [pc, #20]	@ (800079c <_close_r+0x1c>)
 8000786:	4604      	mov	r4, r0
 8000788:	4608      	mov	r0, r1
 800078a:	602b      	str	r3, [r5, #0]
 800078c:	f7ff fd9c 	bl	80002c8 <_close>
 8000790:	1c43      	adds	r3, r0, #1
 8000792:	d102      	bne.n	800079a <_close_r+0x1a>
 8000794:	682b      	ldr	r3, [r5, #0]
 8000796:	b103      	cbz	r3, 800079a <_close_r+0x1a>
 8000798:	6023      	str	r3, [r4, #0]
 800079a:	bd38      	pop	{r3, r4, r5, pc}
 800079c:	200001b8 	.word	0x200001b8

080007a0 <_lseek_r>:
 80007a0:	b538      	push	{r3, r4, r5, lr}
 80007a2:	4604      	mov	r4, r0
 80007a4:	4d06      	ldr	r5, [pc, #24]	@ (80007c0 <_lseek_r+0x20>)
 80007a6:	4608      	mov	r0, r1
 80007a8:	4611      	mov	r1, r2
 80007aa:	2200      	movs	r2, #0
 80007ac:	602a      	str	r2, [r5, #0]
 80007ae:	461a      	mov	r2, r3
 80007b0:	f7ff fd96 	bl	80002e0 <_lseek>
 80007b4:	1c43      	adds	r3, r0, #1
 80007b6:	d102      	bne.n	80007be <_lseek_r+0x1e>
 80007b8:	682b      	ldr	r3, [r5, #0]
 80007ba:	b103      	cbz	r3, 80007be <_lseek_r+0x1e>
 80007bc:	6023      	str	r3, [r4, #0]
 80007be:	bd38      	pop	{r3, r4, r5, pc}
 80007c0:	200001b8 	.word	0x200001b8

080007c4 <_read_r>:
 80007c4:	b538      	push	{r3, r4, r5, lr}
 80007c6:	4604      	mov	r4, r0
 80007c8:	4d06      	ldr	r5, [pc, #24]	@ (80007e4 <_read_r+0x20>)
 80007ca:	4608      	mov	r0, r1
 80007cc:	4611      	mov	r1, r2
 80007ce:	2200      	movs	r2, #0
 80007d0:	602a      	str	r2, [r5, #0]
 80007d2:	461a      	mov	r2, r3
 80007d4:	f7ff fd6a 	bl	80002ac <_read>
 80007d8:	1c43      	adds	r3, r0, #1
 80007da:	d102      	bne.n	80007e2 <_read_r+0x1e>
 80007dc:	682b      	ldr	r3, [r5, #0]
 80007de:	b103      	cbz	r3, 80007e2 <_read_r+0x1e>
 80007e0:	6023      	str	r3, [r4, #0]
 80007e2:	bd38      	pop	{r3, r4, r5, pc}
 80007e4:	200001b8 	.word	0x200001b8

080007e8 <_write_r>:
 80007e8:	b538      	push	{r3, r4, r5, lr}
 80007ea:	4604      	mov	r4, r0
 80007ec:	4d06      	ldr	r5, [pc, #24]	@ (8000808 <_write_r+0x20>)
 80007ee:	4608      	mov	r0, r1
 80007f0:	4611      	mov	r1, r2
 80007f2:	2200      	movs	r2, #0
 80007f4:	602a      	str	r2, [r5, #0]
 80007f6:	461a      	mov	r2, r3
 80007f8:	f7ff fd1a 	bl	8000230 <_write>
 80007fc:	1c43      	adds	r3, r0, #1
 80007fe:	d102      	bne.n	8000806 <_write_r+0x1e>
 8000800:	682b      	ldr	r3, [r5, #0]
 8000802:	b103      	cbz	r3, 8000806 <_write_r+0x1e>
 8000804:	6023      	str	r3, [r4, #0]
 8000806:	bd38      	pop	{r3, r4, r5, pc}
 8000808:	200001b8 	.word	0x200001b8

0800080c <__errno>:
 800080c:	4b01      	ldr	r3, [pc, #4]	@ (8000814 <__errno+0x8>)
 800080e:	6818      	ldr	r0, [r3, #0]
 8000810:	4770      	bx	lr
 8000812:	bf00      	nop
 8000814:	2000000c 	.word	0x2000000c

08000818 <__libc_init_array>:
 8000818:	b570      	push	{r4, r5, r6, lr}
 800081a:	4d0d      	ldr	r5, [pc, #52]	@ (8000850 <__libc_init_array+0x38>)
 800081c:	2600      	movs	r6, #0
 800081e:	4c0d      	ldr	r4, [pc, #52]	@ (8000854 <__libc_init_array+0x3c>)
 8000820:	1b64      	subs	r4, r4, r5
 8000822:	10a4      	asrs	r4, r4, #2
 8000824:	42a6      	cmp	r6, r4
 8000826:	d109      	bne.n	800083c <__libc_init_array+0x24>
 8000828:	4d0b      	ldr	r5, [pc, #44]	@ (8000858 <__libc_init_array+0x40>)
 800082a:	2600      	movs	r6, #0
 800082c:	4c0b      	ldr	r4, [pc, #44]	@ (800085c <__libc_init_array+0x44>)
 800082e:	f000 fa4f 	bl	8000cd0 <_init>
 8000832:	1b64      	subs	r4, r4, r5
 8000834:	10a4      	asrs	r4, r4, #2
 8000836:	42a6      	cmp	r6, r4
 8000838:	d105      	bne.n	8000846 <__libc_init_array+0x2e>
 800083a:	bd70      	pop	{r4, r5, r6, pc}
 800083c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000840:	3601      	adds	r6, #1
 8000842:	4798      	blx	r3
 8000844:	e7ee      	b.n	8000824 <__libc_init_array+0xc>
 8000846:	f855 3b04 	ldr.w	r3, [r5], #4
 800084a:	3601      	adds	r6, #1
 800084c:	4798      	blx	r3
 800084e:	e7f2      	b.n	8000836 <__libc_init_array+0x1e>
 8000850:	08000d48 	.word	0x08000d48
 8000854:	08000d48 	.word	0x08000d48
 8000858:	08000d48 	.word	0x08000d48
 800085c:	08000d4c 	.word	0x08000d4c

08000860 <__retarget_lock_init_recursive>:
 8000860:	4770      	bx	lr

08000862 <__retarget_lock_acquire_recursive>:
 8000862:	4770      	bx	lr

08000864 <__retarget_lock_release_recursive>:
 8000864:	4770      	bx	lr
	...

08000868 <_free_r>:
 8000868:	b538      	push	{r3, r4, r5, lr}
 800086a:	4605      	mov	r5, r0
 800086c:	2900      	cmp	r1, #0
 800086e:	d041      	beq.n	80008f4 <_free_r+0x8c>
 8000870:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000874:	1f0c      	subs	r4, r1, #4
 8000876:	2b00      	cmp	r3, #0
 8000878:	bfb8      	it	lt
 800087a:	18e4      	addlt	r4, r4, r3
 800087c:	f000 f8e0 	bl	8000a40 <__malloc_lock>
 8000880:	4a1d      	ldr	r2, [pc, #116]	@ (80008f8 <_free_r+0x90>)
 8000882:	6813      	ldr	r3, [r2, #0]
 8000884:	b933      	cbnz	r3, 8000894 <_free_r+0x2c>
 8000886:	6063      	str	r3, [r4, #4]
 8000888:	6014      	str	r4, [r2, #0]
 800088a:	4628      	mov	r0, r5
 800088c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000890:	f000 b8dc 	b.w	8000a4c <__malloc_unlock>
 8000894:	42a3      	cmp	r3, r4
 8000896:	d908      	bls.n	80008aa <_free_r+0x42>
 8000898:	6820      	ldr	r0, [r4, #0]
 800089a:	1821      	adds	r1, r4, r0
 800089c:	428b      	cmp	r3, r1
 800089e:	bf01      	itttt	eq
 80008a0:	6819      	ldreq	r1, [r3, #0]
 80008a2:	685b      	ldreq	r3, [r3, #4]
 80008a4:	1809      	addeq	r1, r1, r0
 80008a6:	6021      	streq	r1, [r4, #0]
 80008a8:	e7ed      	b.n	8000886 <_free_r+0x1e>
 80008aa:	461a      	mov	r2, r3
 80008ac:	685b      	ldr	r3, [r3, #4]
 80008ae:	b10b      	cbz	r3, 80008b4 <_free_r+0x4c>
 80008b0:	42a3      	cmp	r3, r4
 80008b2:	d9fa      	bls.n	80008aa <_free_r+0x42>
 80008b4:	6811      	ldr	r1, [r2, #0]
 80008b6:	1850      	adds	r0, r2, r1
 80008b8:	42a0      	cmp	r0, r4
 80008ba:	d10b      	bne.n	80008d4 <_free_r+0x6c>
 80008bc:	6820      	ldr	r0, [r4, #0]
 80008be:	4401      	add	r1, r0
 80008c0:	1850      	adds	r0, r2, r1
 80008c2:	6011      	str	r1, [r2, #0]
 80008c4:	4283      	cmp	r3, r0
 80008c6:	d1e0      	bne.n	800088a <_free_r+0x22>
 80008c8:	6818      	ldr	r0, [r3, #0]
 80008ca:	685b      	ldr	r3, [r3, #4]
 80008cc:	4408      	add	r0, r1
 80008ce:	6053      	str	r3, [r2, #4]
 80008d0:	6010      	str	r0, [r2, #0]
 80008d2:	e7da      	b.n	800088a <_free_r+0x22>
 80008d4:	d902      	bls.n	80008dc <_free_r+0x74>
 80008d6:	230c      	movs	r3, #12
 80008d8:	602b      	str	r3, [r5, #0]
 80008da:	e7d6      	b.n	800088a <_free_r+0x22>
 80008dc:	6820      	ldr	r0, [r4, #0]
 80008de:	1821      	adds	r1, r4, r0
 80008e0:	428b      	cmp	r3, r1
 80008e2:	bf02      	ittt	eq
 80008e4:	6819      	ldreq	r1, [r3, #0]
 80008e6:	685b      	ldreq	r3, [r3, #4]
 80008e8:	1809      	addeq	r1, r1, r0
 80008ea:	6063      	str	r3, [r4, #4]
 80008ec:	bf08      	it	eq
 80008ee:	6021      	streq	r1, [r4, #0]
 80008f0:	6054      	str	r4, [r2, #4]
 80008f2:	e7ca      	b.n	800088a <_free_r+0x22>
 80008f4:	bd38      	pop	{r3, r4, r5, pc}
 80008f6:	bf00      	nop
 80008f8:	200001c4 	.word	0x200001c4

080008fc <sbrk_aligned>:
 80008fc:	b570      	push	{r4, r5, r6, lr}
 80008fe:	4e0f      	ldr	r6, [pc, #60]	@ (800093c <sbrk_aligned+0x40>)
 8000900:	460c      	mov	r4, r1
 8000902:	4605      	mov	r5, r0
 8000904:	6831      	ldr	r1, [r6, #0]
 8000906:	b911      	cbnz	r1, 800090e <sbrk_aligned+0x12>
 8000908:	f000 f9d2 	bl	8000cb0 <_sbrk_r>
 800090c:	6030      	str	r0, [r6, #0]
 800090e:	4621      	mov	r1, r4
 8000910:	4628      	mov	r0, r5
 8000912:	f000 f9cd 	bl	8000cb0 <_sbrk_r>
 8000916:	1c43      	adds	r3, r0, #1
 8000918:	d103      	bne.n	8000922 <sbrk_aligned+0x26>
 800091a:	f04f 34ff 	mov.w	r4, #4294967295
 800091e:	4620      	mov	r0, r4
 8000920:	bd70      	pop	{r4, r5, r6, pc}
 8000922:	1cc4      	adds	r4, r0, #3
 8000924:	f024 0403 	bic.w	r4, r4, #3
 8000928:	42a0      	cmp	r0, r4
 800092a:	d0f8      	beq.n	800091e <sbrk_aligned+0x22>
 800092c:	1a21      	subs	r1, r4, r0
 800092e:	4628      	mov	r0, r5
 8000930:	f000 f9be 	bl	8000cb0 <_sbrk_r>
 8000934:	3001      	adds	r0, #1
 8000936:	d1f2      	bne.n	800091e <sbrk_aligned+0x22>
 8000938:	e7ef      	b.n	800091a <sbrk_aligned+0x1e>
 800093a:	bf00      	nop
 800093c:	200001c0 	.word	0x200001c0

08000940 <_malloc_r>:
 8000940:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000944:	1ccd      	adds	r5, r1, #3
 8000946:	4606      	mov	r6, r0
 8000948:	f025 0503 	bic.w	r5, r5, #3
 800094c:	3508      	adds	r5, #8
 800094e:	2d0c      	cmp	r5, #12
 8000950:	bf38      	it	cc
 8000952:	250c      	movcc	r5, #12
 8000954:	2d00      	cmp	r5, #0
 8000956:	db01      	blt.n	800095c <_malloc_r+0x1c>
 8000958:	42a9      	cmp	r1, r5
 800095a:	d904      	bls.n	8000966 <_malloc_r+0x26>
 800095c:	230c      	movs	r3, #12
 800095e:	6033      	str	r3, [r6, #0]
 8000960:	2000      	movs	r0, #0
 8000962:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000966:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000a3c <_malloc_r+0xfc>
 800096a:	f000 f869 	bl	8000a40 <__malloc_lock>
 800096e:	f8d8 3000 	ldr.w	r3, [r8]
 8000972:	461c      	mov	r4, r3
 8000974:	bb44      	cbnz	r4, 80009c8 <_malloc_r+0x88>
 8000976:	4629      	mov	r1, r5
 8000978:	4630      	mov	r0, r6
 800097a:	f7ff ffbf 	bl	80008fc <sbrk_aligned>
 800097e:	1c43      	adds	r3, r0, #1
 8000980:	4604      	mov	r4, r0
 8000982:	d158      	bne.n	8000a36 <_malloc_r+0xf6>
 8000984:	f8d8 4000 	ldr.w	r4, [r8]
 8000988:	4627      	mov	r7, r4
 800098a:	2f00      	cmp	r7, #0
 800098c:	d143      	bne.n	8000a16 <_malloc_r+0xd6>
 800098e:	2c00      	cmp	r4, #0
 8000990:	d04b      	beq.n	8000a2a <_malloc_r+0xea>
 8000992:	6823      	ldr	r3, [r4, #0]
 8000994:	4639      	mov	r1, r7
 8000996:	4630      	mov	r0, r6
 8000998:	eb04 0903 	add.w	r9, r4, r3
 800099c:	f000 f988 	bl	8000cb0 <_sbrk_r>
 80009a0:	4581      	cmp	r9, r0
 80009a2:	d142      	bne.n	8000a2a <_malloc_r+0xea>
 80009a4:	6821      	ldr	r1, [r4, #0]
 80009a6:	4630      	mov	r0, r6
 80009a8:	1a6d      	subs	r5, r5, r1
 80009aa:	4629      	mov	r1, r5
 80009ac:	f7ff ffa6 	bl	80008fc <sbrk_aligned>
 80009b0:	3001      	adds	r0, #1
 80009b2:	d03a      	beq.n	8000a2a <_malloc_r+0xea>
 80009b4:	6823      	ldr	r3, [r4, #0]
 80009b6:	442b      	add	r3, r5
 80009b8:	6023      	str	r3, [r4, #0]
 80009ba:	f8d8 3000 	ldr.w	r3, [r8]
 80009be:	685a      	ldr	r2, [r3, #4]
 80009c0:	bb62      	cbnz	r2, 8000a1c <_malloc_r+0xdc>
 80009c2:	f8c8 7000 	str.w	r7, [r8]
 80009c6:	e00f      	b.n	80009e8 <_malloc_r+0xa8>
 80009c8:	6822      	ldr	r2, [r4, #0]
 80009ca:	1b52      	subs	r2, r2, r5
 80009cc:	d420      	bmi.n	8000a10 <_malloc_r+0xd0>
 80009ce:	2a0b      	cmp	r2, #11
 80009d0:	d917      	bls.n	8000a02 <_malloc_r+0xc2>
 80009d2:	1961      	adds	r1, r4, r5
 80009d4:	42a3      	cmp	r3, r4
 80009d6:	6025      	str	r5, [r4, #0]
 80009d8:	bf18      	it	ne
 80009da:	6059      	strne	r1, [r3, #4]
 80009dc:	6863      	ldr	r3, [r4, #4]
 80009de:	bf08      	it	eq
 80009e0:	f8c8 1000 	streq.w	r1, [r8]
 80009e4:	5162      	str	r2, [r4, r5]
 80009e6:	604b      	str	r3, [r1, #4]
 80009e8:	4630      	mov	r0, r6
 80009ea:	f000 f82f 	bl	8000a4c <__malloc_unlock>
 80009ee:	f104 000b 	add.w	r0, r4, #11
 80009f2:	1d23      	adds	r3, r4, #4
 80009f4:	f020 0007 	bic.w	r0, r0, #7
 80009f8:	1ac2      	subs	r2, r0, r3
 80009fa:	bf1c      	itt	ne
 80009fc:	1a1b      	subne	r3, r3, r0
 80009fe:	50a3      	strne	r3, [r4, r2]
 8000a00:	e7af      	b.n	8000962 <_malloc_r+0x22>
 8000a02:	6862      	ldr	r2, [r4, #4]
 8000a04:	42a3      	cmp	r3, r4
 8000a06:	bf0c      	ite	eq
 8000a08:	f8c8 2000 	streq.w	r2, [r8]
 8000a0c:	605a      	strne	r2, [r3, #4]
 8000a0e:	e7eb      	b.n	80009e8 <_malloc_r+0xa8>
 8000a10:	4623      	mov	r3, r4
 8000a12:	6864      	ldr	r4, [r4, #4]
 8000a14:	e7ae      	b.n	8000974 <_malloc_r+0x34>
 8000a16:	463c      	mov	r4, r7
 8000a18:	687f      	ldr	r7, [r7, #4]
 8000a1a:	e7b6      	b.n	800098a <_malloc_r+0x4a>
 8000a1c:	461a      	mov	r2, r3
 8000a1e:	685b      	ldr	r3, [r3, #4]
 8000a20:	42a3      	cmp	r3, r4
 8000a22:	d1fb      	bne.n	8000a1c <_malloc_r+0xdc>
 8000a24:	2300      	movs	r3, #0
 8000a26:	6053      	str	r3, [r2, #4]
 8000a28:	e7de      	b.n	80009e8 <_malloc_r+0xa8>
 8000a2a:	230c      	movs	r3, #12
 8000a2c:	4630      	mov	r0, r6
 8000a2e:	6033      	str	r3, [r6, #0]
 8000a30:	f000 f80c 	bl	8000a4c <__malloc_unlock>
 8000a34:	e794      	b.n	8000960 <_malloc_r+0x20>
 8000a36:	6005      	str	r5, [r0, #0]
 8000a38:	e7d6      	b.n	80009e8 <_malloc_r+0xa8>
 8000a3a:	bf00      	nop
 8000a3c:	200001c4 	.word	0x200001c4

08000a40 <__malloc_lock>:
 8000a40:	4801      	ldr	r0, [pc, #4]	@ (8000a48 <__malloc_lock+0x8>)
 8000a42:	f7ff bf0e 	b.w	8000862 <__retarget_lock_acquire_recursive>
 8000a46:	bf00      	nop
 8000a48:	200001bc 	.word	0x200001bc

08000a4c <__malloc_unlock>:
 8000a4c:	4801      	ldr	r0, [pc, #4]	@ (8000a54 <__malloc_unlock+0x8>)
 8000a4e:	f7ff bf09 	b.w	8000864 <__retarget_lock_release_recursive>
 8000a52:	bf00      	nop
 8000a54:	200001bc 	.word	0x200001bc

08000a58 <__sflush_r>:
 8000a58:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000a5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a5e:	0716      	lsls	r6, r2, #28
 8000a60:	4605      	mov	r5, r0
 8000a62:	460c      	mov	r4, r1
 8000a64:	d454      	bmi.n	8000b10 <__sflush_r+0xb8>
 8000a66:	684b      	ldr	r3, [r1, #4]
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	dc02      	bgt.n	8000a72 <__sflush_r+0x1a>
 8000a6c:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000a6e:	2b00      	cmp	r3, #0
 8000a70:	dd48      	ble.n	8000b04 <__sflush_r+0xac>
 8000a72:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000a74:	2e00      	cmp	r6, #0
 8000a76:	d045      	beq.n	8000b04 <__sflush_r+0xac>
 8000a78:	2300      	movs	r3, #0
 8000a7a:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000a7e:	682f      	ldr	r7, [r5, #0]
 8000a80:	6a21      	ldr	r1, [r4, #32]
 8000a82:	602b      	str	r3, [r5, #0]
 8000a84:	d030      	beq.n	8000ae8 <__sflush_r+0x90>
 8000a86:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000a88:	89a3      	ldrh	r3, [r4, #12]
 8000a8a:	0759      	lsls	r1, r3, #29
 8000a8c:	d505      	bpl.n	8000a9a <__sflush_r+0x42>
 8000a8e:	6863      	ldr	r3, [r4, #4]
 8000a90:	1ad2      	subs	r2, r2, r3
 8000a92:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000a94:	b10b      	cbz	r3, 8000a9a <__sflush_r+0x42>
 8000a96:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000a98:	1ad2      	subs	r2, r2, r3
 8000a9a:	2300      	movs	r3, #0
 8000a9c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000a9e:	6a21      	ldr	r1, [r4, #32]
 8000aa0:	4628      	mov	r0, r5
 8000aa2:	47b0      	blx	r6
 8000aa4:	1c43      	adds	r3, r0, #1
 8000aa6:	89a3      	ldrh	r3, [r4, #12]
 8000aa8:	d106      	bne.n	8000ab8 <__sflush_r+0x60>
 8000aaa:	6829      	ldr	r1, [r5, #0]
 8000aac:	291d      	cmp	r1, #29
 8000aae:	d82b      	bhi.n	8000b08 <__sflush_r+0xb0>
 8000ab0:	4a28      	ldr	r2, [pc, #160]	@ (8000b54 <__sflush_r+0xfc>)
 8000ab2:	40ca      	lsrs	r2, r1
 8000ab4:	07d6      	lsls	r6, r2, #31
 8000ab6:	d527      	bpl.n	8000b08 <__sflush_r+0xb0>
 8000ab8:	2200      	movs	r2, #0
 8000aba:	04d9      	lsls	r1, r3, #19
 8000abc:	6062      	str	r2, [r4, #4]
 8000abe:	6922      	ldr	r2, [r4, #16]
 8000ac0:	6022      	str	r2, [r4, #0]
 8000ac2:	d504      	bpl.n	8000ace <__sflush_r+0x76>
 8000ac4:	1c42      	adds	r2, r0, #1
 8000ac6:	d101      	bne.n	8000acc <__sflush_r+0x74>
 8000ac8:	682b      	ldr	r3, [r5, #0]
 8000aca:	b903      	cbnz	r3, 8000ace <__sflush_r+0x76>
 8000acc:	6560      	str	r0, [r4, #84]	@ 0x54
 8000ace:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000ad0:	602f      	str	r7, [r5, #0]
 8000ad2:	b1b9      	cbz	r1, 8000b04 <__sflush_r+0xac>
 8000ad4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000ad8:	4299      	cmp	r1, r3
 8000ada:	d002      	beq.n	8000ae2 <__sflush_r+0x8a>
 8000adc:	4628      	mov	r0, r5
 8000ade:	f7ff fec3 	bl	8000868 <_free_r>
 8000ae2:	2300      	movs	r3, #0
 8000ae4:	6363      	str	r3, [r4, #52]	@ 0x34
 8000ae6:	e00d      	b.n	8000b04 <__sflush_r+0xac>
 8000ae8:	2301      	movs	r3, #1
 8000aea:	4628      	mov	r0, r5
 8000aec:	47b0      	blx	r6
 8000aee:	4602      	mov	r2, r0
 8000af0:	1c50      	adds	r0, r2, #1
 8000af2:	d1c9      	bne.n	8000a88 <__sflush_r+0x30>
 8000af4:	682b      	ldr	r3, [r5, #0]
 8000af6:	2b00      	cmp	r3, #0
 8000af8:	d0c6      	beq.n	8000a88 <__sflush_r+0x30>
 8000afa:	2b1d      	cmp	r3, #29
 8000afc:	d001      	beq.n	8000b02 <__sflush_r+0xaa>
 8000afe:	2b16      	cmp	r3, #22
 8000b00:	d11c      	bne.n	8000b3c <__sflush_r+0xe4>
 8000b02:	602f      	str	r7, [r5, #0]
 8000b04:	2000      	movs	r0, #0
 8000b06:	e020      	b.n	8000b4a <__sflush_r+0xf2>
 8000b08:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000b0c:	b21b      	sxth	r3, r3
 8000b0e:	e019      	b.n	8000b44 <__sflush_r+0xec>
 8000b10:	690f      	ldr	r7, [r1, #16]
 8000b12:	2f00      	cmp	r7, #0
 8000b14:	d0f6      	beq.n	8000b04 <__sflush_r+0xac>
 8000b16:	0793      	lsls	r3, r2, #30
 8000b18:	680e      	ldr	r6, [r1, #0]
 8000b1a:	600f      	str	r7, [r1, #0]
 8000b1c:	bf0c      	ite	eq
 8000b1e:	694b      	ldreq	r3, [r1, #20]
 8000b20:	2300      	movne	r3, #0
 8000b22:	1bf6      	subs	r6, r6, r7
 8000b24:	608b      	str	r3, [r1, #8]
 8000b26:	2e00      	cmp	r6, #0
 8000b28:	ddec      	ble.n	8000b04 <__sflush_r+0xac>
 8000b2a:	4633      	mov	r3, r6
 8000b2c:	463a      	mov	r2, r7
 8000b2e:	6a21      	ldr	r1, [r4, #32]
 8000b30:	4628      	mov	r0, r5
 8000b32:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000b36:	47e0      	blx	ip
 8000b38:	2800      	cmp	r0, #0
 8000b3a:	dc07      	bgt.n	8000b4c <__sflush_r+0xf4>
 8000b3c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b40:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000b44:	f04f 30ff 	mov.w	r0, #4294967295
 8000b48:	81a3      	strh	r3, [r4, #12]
 8000b4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b4c:	4407      	add	r7, r0
 8000b4e:	1a36      	subs	r6, r6, r0
 8000b50:	e7e9      	b.n	8000b26 <__sflush_r+0xce>
 8000b52:	bf00      	nop
 8000b54:	20400001 	.word	0x20400001

08000b58 <_fflush_r>:
 8000b58:	b538      	push	{r3, r4, r5, lr}
 8000b5a:	690b      	ldr	r3, [r1, #16]
 8000b5c:	4605      	mov	r5, r0
 8000b5e:	460c      	mov	r4, r1
 8000b60:	b913      	cbnz	r3, 8000b68 <_fflush_r+0x10>
 8000b62:	2500      	movs	r5, #0
 8000b64:	4628      	mov	r0, r5
 8000b66:	bd38      	pop	{r3, r4, r5, pc}
 8000b68:	b118      	cbz	r0, 8000b72 <_fflush_r+0x1a>
 8000b6a:	6a03      	ldr	r3, [r0, #32]
 8000b6c:	b90b      	cbnz	r3, 8000b72 <_fflush_r+0x1a>
 8000b6e:	f7ff fc93 	bl	8000498 <__sinit>
 8000b72:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b76:	2b00      	cmp	r3, #0
 8000b78:	d0f3      	beq.n	8000b62 <_fflush_r+0xa>
 8000b7a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000b7c:	07d0      	lsls	r0, r2, #31
 8000b7e:	d404      	bmi.n	8000b8a <_fflush_r+0x32>
 8000b80:	0599      	lsls	r1, r3, #22
 8000b82:	d402      	bmi.n	8000b8a <_fflush_r+0x32>
 8000b84:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000b86:	f7ff fe6c 	bl	8000862 <__retarget_lock_acquire_recursive>
 8000b8a:	4628      	mov	r0, r5
 8000b8c:	4621      	mov	r1, r4
 8000b8e:	f7ff ff63 	bl	8000a58 <__sflush_r>
 8000b92:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000b94:	4605      	mov	r5, r0
 8000b96:	07da      	lsls	r2, r3, #31
 8000b98:	d4e4      	bmi.n	8000b64 <_fflush_r+0xc>
 8000b9a:	89a3      	ldrh	r3, [r4, #12]
 8000b9c:	059b      	lsls	r3, r3, #22
 8000b9e:	d4e1      	bmi.n	8000b64 <_fflush_r+0xc>
 8000ba0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000ba2:	f7ff fe5f 	bl	8000864 <__retarget_lock_release_recursive>
 8000ba6:	e7dd      	b.n	8000b64 <_fflush_r+0xc>

08000ba8 <__swhatbuf_r>:
 8000ba8:	b570      	push	{r4, r5, r6, lr}
 8000baa:	460c      	mov	r4, r1
 8000bac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bb0:	b096      	sub	sp, #88	@ 0x58
 8000bb2:	4615      	mov	r5, r2
 8000bb4:	2900      	cmp	r1, #0
 8000bb6:	461e      	mov	r6, r3
 8000bb8:	da0c      	bge.n	8000bd4 <__swhatbuf_r+0x2c>
 8000bba:	89a3      	ldrh	r3, [r4, #12]
 8000bbc:	2100      	movs	r1, #0
 8000bbe:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8000bc2:	bf14      	ite	ne
 8000bc4:	2340      	movne	r3, #64	@ 0x40
 8000bc6:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8000bca:	2000      	movs	r0, #0
 8000bcc:	6031      	str	r1, [r6, #0]
 8000bce:	602b      	str	r3, [r5, #0]
 8000bd0:	b016      	add	sp, #88	@ 0x58
 8000bd2:	bd70      	pop	{r4, r5, r6, pc}
 8000bd4:	466a      	mov	r2, sp
 8000bd6:	f000 f849 	bl	8000c6c <_fstat_r>
 8000bda:	2800      	cmp	r0, #0
 8000bdc:	dbed      	blt.n	8000bba <__swhatbuf_r+0x12>
 8000bde:	9901      	ldr	r1, [sp, #4]
 8000be0:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8000be4:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8000be8:	4259      	negs	r1, r3
 8000bea:	4159      	adcs	r1, r3
 8000bec:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000bf0:	e7eb      	b.n	8000bca <__swhatbuf_r+0x22>

08000bf2 <__smakebuf_r>:
 8000bf2:	898b      	ldrh	r3, [r1, #12]
 8000bf4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000bf6:	079d      	lsls	r5, r3, #30
 8000bf8:	4606      	mov	r6, r0
 8000bfa:	460c      	mov	r4, r1
 8000bfc:	d507      	bpl.n	8000c0e <__smakebuf_r+0x1c>
 8000bfe:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8000c02:	6023      	str	r3, [r4, #0]
 8000c04:	6123      	str	r3, [r4, #16]
 8000c06:	2301      	movs	r3, #1
 8000c08:	6163      	str	r3, [r4, #20]
 8000c0a:	b003      	add	sp, #12
 8000c0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c0e:	ab01      	add	r3, sp, #4
 8000c10:	466a      	mov	r2, sp
 8000c12:	f7ff ffc9 	bl	8000ba8 <__swhatbuf_r>
 8000c16:	9f00      	ldr	r7, [sp, #0]
 8000c18:	4605      	mov	r5, r0
 8000c1a:	4630      	mov	r0, r6
 8000c1c:	4639      	mov	r1, r7
 8000c1e:	f7ff fe8f 	bl	8000940 <_malloc_r>
 8000c22:	b948      	cbnz	r0, 8000c38 <__smakebuf_r+0x46>
 8000c24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c28:	059a      	lsls	r2, r3, #22
 8000c2a:	d4ee      	bmi.n	8000c0a <__smakebuf_r+0x18>
 8000c2c:	f023 0303 	bic.w	r3, r3, #3
 8000c30:	f043 0302 	orr.w	r3, r3, #2
 8000c34:	81a3      	strh	r3, [r4, #12]
 8000c36:	e7e2      	b.n	8000bfe <__smakebuf_r+0xc>
 8000c38:	89a3      	ldrh	r3, [r4, #12]
 8000c3a:	6020      	str	r0, [r4, #0]
 8000c3c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000c40:	81a3      	strh	r3, [r4, #12]
 8000c42:	9b01      	ldr	r3, [sp, #4]
 8000c44:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8000c48:	b15b      	cbz	r3, 8000c62 <__smakebuf_r+0x70>
 8000c4a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c4e:	4630      	mov	r0, r6
 8000c50:	f000 f81e 	bl	8000c90 <_isatty_r>
 8000c54:	b128      	cbz	r0, 8000c62 <__smakebuf_r+0x70>
 8000c56:	89a3      	ldrh	r3, [r4, #12]
 8000c58:	f023 0303 	bic.w	r3, r3, #3
 8000c5c:	f043 0301 	orr.w	r3, r3, #1
 8000c60:	81a3      	strh	r3, [r4, #12]
 8000c62:	89a3      	ldrh	r3, [r4, #12]
 8000c64:	431d      	orrs	r5, r3
 8000c66:	81a5      	strh	r5, [r4, #12]
 8000c68:	e7cf      	b.n	8000c0a <__smakebuf_r+0x18>
	...

08000c6c <_fstat_r>:
 8000c6c:	b538      	push	{r3, r4, r5, lr}
 8000c6e:	2300      	movs	r3, #0
 8000c70:	4d06      	ldr	r5, [pc, #24]	@ (8000c8c <_fstat_r+0x20>)
 8000c72:	4604      	mov	r4, r0
 8000c74:	4608      	mov	r0, r1
 8000c76:	4611      	mov	r1, r2
 8000c78:	602b      	str	r3, [r5, #0]
 8000c7a:	f7ff fb29 	bl	80002d0 <_fstat>
 8000c7e:	1c43      	adds	r3, r0, #1
 8000c80:	d102      	bne.n	8000c88 <_fstat_r+0x1c>
 8000c82:	682b      	ldr	r3, [r5, #0]
 8000c84:	b103      	cbz	r3, 8000c88 <_fstat_r+0x1c>
 8000c86:	6023      	str	r3, [r4, #0]
 8000c88:	bd38      	pop	{r3, r4, r5, pc}
 8000c8a:	bf00      	nop
 8000c8c:	200001b8 	.word	0x200001b8

08000c90 <_isatty_r>:
 8000c90:	b538      	push	{r3, r4, r5, lr}
 8000c92:	2300      	movs	r3, #0
 8000c94:	4d05      	ldr	r5, [pc, #20]	@ (8000cac <_isatty_r+0x1c>)
 8000c96:	4604      	mov	r4, r0
 8000c98:	4608      	mov	r0, r1
 8000c9a:	602b      	str	r3, [r5, #0]
 8000c9c:	f7ff fb1e 	bl	80002dc <_isatty>
 8000ca0:	1c43      	adds	r3, r0, #1
 8000ca2:	d102      	bne.n	8000caa <_isatty_r+0x1a>
 8000ca4:	682b      	ldr	r3, [r5, #0]
 8000ca6:	b103      	cbz	r3, 8000caa <_isatty_r+0x1a>
 8000ca8:	6023      	str	r3, [r4, #0]
 8000caa:	bd38      	pop	{r3, r4, r5, pc}
 8000cac:	200001b8 	.word	0x200001b8

08000cb0 <_sbrk_r>:
 8000cb0:	b538      	push	{r3, r4, r5, lr}
 8000cb2:	2300      	movs	r3, #0
 8000cb4:	4d05      	ldr	r5, [pc, #20]	@ (8000ccc <_sbrk_r+0x1c>)
 8000cb6:	4604      	mov	r4, r0
 8000cb8:	4608      	mov	r0, r1
 8000cba:	602b      	str	r3, [r5, #0]
 8000cbc:	f7ff fb12 	bl	80002e4 <_sbrk>
 8000cc0:	1c43      	adds	r3, r0, #1
 8000cc2:	d102      	bne.n	8000cca <_sbrk_r+0x1a>
 8000cc4:	682b      	ldr	r3, [r5, #0]
 8000cc6:	b103      	cbz	r3, 8000cca <_sbrk_r+0x1a>
 8000cc8:	6023      	str	r3, [r4, #0]
 8000cca:	bd38      	pop	{r3, r4, r5, pc}
 8000ccc:	200001b8 	.word	0x200001b8

08000cd0 <_init>:
 8000cd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cd2:	bf00      	nop
 8000cd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000cd6:	bc08      	pop	{r3}
 8000cd8:	469e      	mov	lr, r3
 8000cda:	4770      	bx	lr

08000cdc <_fini>:
 8000cdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cde:	bf00      	nop
 8000ce0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ce2:	bc08      	pop	{r3}
 8000ce4:	469e      	mov	lr, r3
 8000ce6:	4770      	bx	lr
