
Ex04-MultipleButtonsWithDebounceMultisamples.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000284  080001f0  080001f0  000011f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000474  0800047c  0000147c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000474  08000474  0000147c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000474  08000474  0000147c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000474  0800047c  0000147c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000474  08000474  00001474  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000478  08000478  00001478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000147c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  0800047c  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  0800047c  00002020  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000147c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000114e  00000000  00000000  000014ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000024b  00000000  00000000  000025fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00000085  00000000  00000000  00002845  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000058  00000000  00000000  000028d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000060  00000000  00000000  00002928  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001c6f  00000000  00000000  00002988  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000008d7  00000000  00000000  000045f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000822a  00000000  00000000  00004ece  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000d0f8  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000a4  00000000  00000000  0000d13c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000079  00000000  00000000  0000d1e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f0 <__do_global_dtors_aux>:
 80001f0:	b510      	push	{r4, lr}
 80001f2:	4c05      	ldr	r4, [pc, #20]	@ (8000208 <__do_global_dtors_aux+0x18>)
 80001f4:	7823      	ldrb	r3, [r4, #0]
 80001f6:	b933      	cbnz	r3, 8000206 <__do_global_dtors_aux+0x16>
 80001f8:	4b04      	ldr	r3, [pc, #16]	@ (800020c <__do_global_dtors_aux+0x1c>)
 80001fa:	b113      	cbz	r3, 8000202 <__do_global_dtors_aux+0x12>
 80001fc:	4804      	ldr	r0, [pc, #16]	@ (8000210 <__do_global_dtors_aux+0x20>)
 80001fe:	f3af 8000 	nop.w
 8000202:	2301      	movs	r3, #1
 8000204:	7023      	strb	r3, [r4, #0]
 8000206:	bd10      	pop	{r4, pc}
 8000208:	20000000 	.word	0x20000000
 800020c:	00000000 	.word	0x00000000
 8000210:	0800045c 	.word	0x0800045c

08000214 <frame_dummy>:
 8000214:	b508      	push	{r3, lr}
 8000216:	4b03      	ldr	r3, [pc, #12]	@ (8000224 <frame_dummy+0x10>)
 8000218:	b11b      	cbz	r3, 8000222 <frame_dummy+0xe>
 800021a:	4903      	ldr	r1, [pc, #12]	@ (8000228 <frame_dummy+0x14>)
 800021c:	4803      	ldr	r0, [pc, #12]	@ (800022c <frame_dummy+0x18>)
 800021e:	f3af 8000 	nop.w
 8000222:	bd08      	pop	{r3, pc}
 8000224:	00000000 	.word	0x00000000
 8000228:	20000004 	.word	0x20000004
 800022c:	0800045c 	.word	0x0800045c

08000230 <main>:
	RCC->AHB2ENR.GPIOBEN = ENABLED;
	RCC->AHB2ENR.GPIOCEN = ENABLED;
	RCC->AHB2ENR.GPIOEEN = ENABLED;
	RCC->AHB2ENR.GPIOFEN = ENABLED;

	GPIOA->MODER.MODER9 = OUTPUT_MODE; // LED3_RED
 8000230:	2201      	movs	r2, #1
{
 8000232:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	RCC->AHB2ENR.GPIOAEN = ENABLED;
 8000236:	4b5a      	ldr	r3, [pc, #360]	@ (80003a0 <main+0x170>)
	GPIOA->MODER.MODER9 = OUTPUT_MODE; // LED3_RED
 8000238:	495a      	ldr	r1, [pc, #360]	@ (80003a4 <main+0x174>)
	RCC->AHB2ENR.GPIOAEN = ENABLED;
 800023a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
	GPIOB->MODER.MODER7 = OUTPUT_MODE; // LED2_BLUE
 800023c:	f8df e168 	ldr.w	lr, [pc, #360]	@ 80003a8 <main+0x178>
	RCC->AHB2ENR.GPIOAEN = ENABLED;
 8000240:	4310      	orrs	r0, r2
 8000242:	64d8      	str	r0, [r3, #76]	@ 0x4c
	RCC->AHB2ENR.GPIOBEN = ENABLED;
 8000244:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
	GPIOC->MODER.MODER7 = OUTPUT_MODE; // LED1_GREEN

	GPIOA->MODER.MODER0 = INPUT_MODE; // Joystick center
	GPIOC->MODER.MODER13 = INPUT_MODE; // User button
	GPIOE->MODER.MODER3 = INPUT_MODE; // Joystick left
 8000246:	4d59      	ldr	r5, [pc, #356]	@ (80003ac <main+0x17c>)
	RCC->AHB2ENR.GPIOBEN = ENABLED;
 8000248:	f040 0002 	orr.w	r0, r0, #2
 800024c:	64d8      	str	r0, [r3, #76]	@ 0x4c
	RCC->AHB2ENR.GPIOCEN = ENABLED;
 800024e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
	GPIOF->MODER.MODER7 = INPUT_MODE; // Joystick right
 8000250:	f8df c15c 	ldr.w	ip, [pc, #348]	@ 80003b0 <main+0x180>
	RCC->AHB2ENR.GPIOCEN = ENABLED;
 8000254:	f040 0004 	orr.w	r0, r0, #4
 8000258:	64d8      	str	r0, [r3, #76]	@ 0x4c
	RCC->AHB2ENR.GPIOEEN = ENABLED;
 800025a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800025c:	f040 0010 	orr.w	r0, r0, #16
 8000260:	64d8      	str	r0, [r3, #76]	@ 0x4c
	RCC->AHB2ENR.GPIOFEN = ENABLED;
 8000262:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8000264:	f040 0020 	orr.w	r0, r0, #32
 8000268:	64d8      	str	r0, [r3, #76]	@ 0x4c
	GPIOA->MODER.MODER9 = OUTPUT_MODE; // LED3_RED
 800026a:	680b      	ldr	r3, [r1, #0]
	GPIOC->MODER.MODER7 = OUTPUT_MODE; // LED1_GREEN
 800026c:	4851      	ldr	r0, [pc, #324]	@ (80003b4 <main+0x184>)
	GPIOA->MODER.MODER9 = OUTPUT_MODE; // LED3_RED
 800026e:	f362 4393 	bfi	r3, r2, #18, #2
 8000272:	600b      	str	r3, [r1, #0]
	GPIOB->MODER.MODER7 = OUTPUT_MODE; // LED2_BLUE
 8000274:	f8de 3000 	ldr.w	r3, [lr]
 8000278:	f362 338f 	bfi	r3, r2, #14, #2
 800027c:	f8ce 3000 	str.w	r3, [lr]
	GPIOC->MODER.MODER7 = OUTPUT_MODE; // LED1_GREEN
 8000280:	6803      	ldr	r3, [r0, #0]
 8000282:	f362 338f 	bfi	r3, r2, #14, #2
 8000286:	6003      	str	r3, [r0, #0]
	GPIOA->MODER.MODER0 = INPUT_MODE; // Joystick center
 8000288:	680b      	ldr	r3, [r1, #0]
 800028a:	4a4b      	ldr	r2, [pc, #300]	@ (80003b8 <main+0x188>)
 800028c:	f023 0303 	bic.w	r3, r3, #3
 8000290:	600b      	str	r3, [r1, #0]
	GPIOC->MODER.MODER13 = INPUT_MODE; // User button
 8000292:	6803      	ldr	r3, [r0, #0]
 8000294:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8000298:	6003      	str	r3, [r0, #0]
	GPIOE->MODER.MODER3 = INPUT_MODE; // Joystick left
 800029a:	682b      	ldr	r3, [r5, #0]
 800029c:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 80002a0:	602b      	str	r3, [r5, #0]
	GPIOF->MODER.MODER7 = INPUT_MODE; // Joystick right
 80002a2:	f8dc 3000 	ldr.w	r3, [ip]
 80002a6:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 80002aa:	f8cc 3000 	str.w	r3, [ip]
	GPIOF->MODER.MODER8 = INPUT_MODE; // Joystick down
 80002ae:	f8dc 3000 	ldr.w	r3, [ip]
 80002b2:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 80002b6:	f8cc 3000 	str.w	r3, [ip]
	GPIOF->MODER.MODER9 = INPUT_MODE; // Joystick up
 80002ba:	f8dc 3000 	ldr.w	r3, [ip]
 80002be:	f423 2340 	bic.w	r3, r3, #786432	@ 0xc0000
 80002c2:	f8cc 3000 	str.w	r3, [ip]

	LED1_GREEN = OFF;
 80002c6:	6943      	ldr	r3, [r0, #20]
 80002c8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80002cc:	6143      	str	r3, [r0, #20]
	LED2_BLUE = OFF;
 80002ce:	f8de 3014 	ldr.w	r3, [lr, #20]
 80002d2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80002d6:	f8ce 3014 	str.w	r3, [lr, #20]
	LED3_RED = OFF;
 80002da:	694b      	ldr	r3, [r1, #20]
 80002dc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80002e0:	614b      	str	r3, [r1, #20]
 80002e2:	4b36      	ldr	r3, [pc, #216]	@ (80003bc <main+0x18c>)
 80002e4:	7812      	ldrb	r2, [r2, #0]
 80002e6:	781c      	ldrb	r4, [r3, #0]
 80002e8:	e024      	b.n	8000334 <main+0x104>
        if (counter < debounce_count)
 80002ea:	2c09      	cmp	r4, #9
            counter++;
 80002ec:	f104 0601 	add.w	r6, r4, #1
        if (counter < debounce_count)
 80002f0:	d853      	bhi.n	800039a <main+0x16a>
            counter++;
 80002f2:	b2f4      	uxtb	r4, r6
        if (counter >= debounce_count)
 80002f4:	2c0a      	cmp	r4, #10
 80002f6:	d050      	beq.n	800039a <main+0x16a>

	do {
		enum ClickedButtons buttons_state = read_button_multiple_samples();

		LED3_RED = (buttons_state & (USER_BUTTON_PRESSED | JOYSTICK_LEFT_PRESSED | JOYSTICK_UP_PRESSED)) ? ON : OFF;
 80002f8:	f012 0f15 	tst.w	r2, #21
 80002fc:	bf14      	ite	ne
 80002fe:	f04f 0801 	movne.w	r8, #1
 8000302:	f04f 0800 	moveq.w	r8, #0
		LED2_BLUE = (buttons_state & (USER_BUTTON_PRESSED | JOYSTICK_CENTER_PRESSED | JOYSTICK_UP_PRESSED | JOYSTICK_DOWN_PRESSED)) ? ON : OFF;
 8000306:	f012 030f 	ands.w	r3, r2, #15
 800030a:	bf18      	it	ne
 800030c:	2301      	movne	r3, #1
		LED1_GREEN = (buttons_state & (USER_BUTTON_PRESSED | JOYSTICK_RIGHT_PRESSED | JOYSTICK_DOWN_PRESSED)) ? ON : OFF;
 800030e:	f012 0f29 	tst.w	r2, #41	@ 0x29
 8000312:	bf14      	ite	ne
 8000314:	2701      	movne	r7, #1
 8000316:	2700      	moveq	r7, #0
		LED3_RED = (buttons_state & (USER_BUTTON_PRESSED | JOYSTICK_LEFT_PRESSED | JOYSTICK_UP_PRESSED)) ? ON : OFF;
 8000318:	694e      	ldr	r6, [r1, #20]
 800031a:	f368 2649 	bfi	r6, r8, #9, #1
 800031e:	614e      	str	r6, [r1, #20]
		LED2_BLUE = (buttons_state & (USER_BUTTON_PRESSED | JOYSTICK_CENTER_PRESSED | JOYSTICK_UP_PRESSED | JOYSTICK_DOWN_PRESSED)) ? ON : OFF;
 8000320:	f8de 6014 	ldr.w	r6, [lr, #20]
 8000324:	f363 16c7 	bfi	r6, r3, #7, #1
 8000328:	f8ce 6014 	str.w	r6, [lr, #20]
		LED1_GREEN = (buttons_state & (USER_BUTTON_PRESSED | JOYSTICK_RIGHT_PRESSED | JOYSTICK_DOWN_PRESSED)) ? ON : OFF;
 800032c:	6943      	ldr	r3, [r0, #20]
 800032e:	f367 13c7 	bfi	r3, r7, #7, #1
 8000332:	6143      	str	r3, [r0, #20]
    enum ClickedButtons raw_states = USER_BUTTON ? BUTTON_PRESSED : BUTTON_RELEASED;
 8000334:	f8d0 9010 	ldr.w	r9, [r0, #16]
    raw_states |= (JOYSTICK_CENTER ? BUTTON_RELEASED : BUTTON_PRESSED) << 1;
 8000338:	690e      	ldr	r6, [r1, #16]
    raw_states |= (JOYSTICK_UP ? BUTTON_RELEASED : BUTTON_PRESSED) << 2;
 800033a:	f8dc 3010 	ldr.w	r3, [ip, #16]
    raw_states |= (JOYSTICK_CENTER ? BUTTON_RELEASED : BUTTON_PRESSED) << 1;
 800033e:	f006 0a01 	and.w	sl, r6, #1
    raw_states |= (JOYSTICK_UP ? BUTTON_RELEASED : BUTTON_PRESSED) << 2;
 8000342:	f3c3 2340 	ubfx	r3, r3, #9, #1
    raw_states |= (JOYSTICK_DOWN ? BUTTON_RELEASED : BUTTON_PRESSED) << 3;
 8000346:	f8dc 8010 	ldr.w	r8, [ip, #16]
    raw_states |= (JOYSTICK_UP ? BUTTON_RELEASED : BUTTON_PRESSED) << 2;
 800034a:	f083 0301 	eor.w	r3, r3, #1
    raw_states |= (JOYSTICK_LEFT ? BUTTON_RELEASED : BUTTON_PRESSED) << 4;
 800034e:	692f      	ldr	r7, [r5, #16]
    raw_states |= (JOYSTICK_CENTER ? BUTTON_RELEASED : BUTTON_PRESSED) << 1;
 8000350:	f08a 0a01 	eor.w	sl, sl, #1
    raw_states |= (JOYSTICK_UP ? BUTTON_RELEASED : BUTTON_PRESSED) << 2;
 8000354:	009b      	lsls	r3, r3, #2
    raw_states |= (JOYSTICK_RIGHT ? BUTTON_RELEASED : BUTTON_PRESSED) << 5;
 8000356:	f8dc 6010 	ldr.w	r6, [ip, #16]
    enum ClickedButtons raw_states = USER_BUTTON ? BUTTON_PRESSED : BUTTON_RELEASED;
 800035a:	f3c9 3940 	ubfx	r9, r9, #13, #1
    raw_states |= (JOYSTICK_DOWN ? BUTTON_RELEASED : BUTTON_PRESSED) << 3;
 800035e:	f3c8 2800 	ubfx	r8, r8, #8, #1
    raw_states |= (JOYSTICK_UP ? BUTTON_RELEASED : BUTTON_PRESSED) << 2;
 8000362:	ea43 034a 	orr.w	r3, r3, sl, lsl #1
    raw_states |= (JOYSTICK_LEFT ? BUTTON_RELEASED : BUTTON_PRESSED) << 4;
 8000366:	f3c7 07c0 	ubfx	r7, r7, #3, #1
    raw_states |= (JOYSTICK_UP ? BUTTON_RELEASED : BUTTON_PRESSED) << 2;
 800036a:	ea43 0309 	orr.w	r3, r3, r9
    raw_states |= (JOYSTICK_DOWN ? BUTTON_RELEASED : BUTTON_PRESSED) << 3;
 800036e:	f088 0801 	eor.w	r8, r8, #1
    raw_states |= (JOYSTICK_RIGHT ? BUTTON_RELEASED : BUTTON_PRESSED) << 5;
 8000372:	f3c6 16c0 	ubfx	r6, r6, #7, #1
    raw_states |= (JOYSTICK_DOWN ? BUTTON_RELEASED : BUTTON_PRESSED) << 3;
 8000376:	ea43 03c8 	orr.w	r3, r3, r8, lsl #3
    raw_states |= (JOYSTICK_LEFT ? BUTTON_RELEASED : BUTTON_PRESSED) << 4;
 800037a:	f087 0701 	eor.w	r7, r7, #1
 800037e:	ea43 1307 	orr.w	r3, r3, r7, lsl #4
    raw_states |= (JOYSTICK_RIGHT ? BUTTON_RELEASED : BUTTON_PRESSED) << 5;
 8000382:	f086 0601 	eor.w	r6, r6, #1
 8000386:	ea43 1346 	orr.w	r3, r3, r6, lsl #5
 800038a:	b2db      	uxtb	r3, r3
    if (raw_states == buttons_state)
 800038c:	4293      	cmp	r3, r2
 800038e:	d1ac      	bne.n	80002ea <main+0xba>
            counter--;
 8000390:	1e63      	subs	r3, r4, #1
        if (counter > 0)
 8000392:	2c00      	cmp	r4, #0
 8000394:	d0b0      	beq.n	80002f8 <main+0xc8>
            counter--;
 8000396:	b2dc      	uxtb	r4, r3
 8000398:	e7ae      	b.n	80002f8 <main+0xc8>
        	buttons_state = raw_states;
 800039a:	461a      	mov	r2, r3
 800039c:	e7ac      	b.n	80002f8 <main+0xc8>
 800039e:	bf00      	nop
 80003a0:	40021000 	.word	0x40021000
 80003a4:	42020000 	.word	0x42020000
 80003a8:	42020400 	.word	0x42020400
 80003ac:	42021000 	.word	0x42021000
 80003b0:	42021400 	.word	0x42021400
 80003b4:	42020800 	.word	0x42020800
 80003b8:	2000001d 	.word	0x2000001d
 80003bc:	2000001c 	.word	0x2000001c

080003c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003c0:	480d      	ldr	r0, [pc, #52]	@ (80003f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003c8:	480c      	ldr	r0, [pc, #48]	@ (80003fc <LoopForever+0x6>)
  ldr r1, =_edata
 80003ca:	490d      	ldr	r1, [pc, #52]	@ (8000400 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003cc:	4a0d      	ldr	r2, [pc, #52]	@ (8000404 <LoopForever+0xe>)
  movs r3, #0
 80003ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003d0:	e002      	b.n	80003d8 <LoopCopyDataInit>

080003d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003d6:	3304      	adds	r3, #4

080003d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003dc:	d3f9      	bcc.n	80003d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003de:	4a0a      	ldr	r2, [pc, #40]	@ (8000408 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003e0:	4c0a      	ldr	r4, [pc, #40]	@ (800040c <LoopForever+0x16>)
  movs r3, #0
 80003e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003e4:	e001      	b.n	80003ea <LoopFillZerobss>

080003e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003e8:	3204      	adds	r2, #4

080003ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003ec:	d3fb      	bcc.n	80003e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ee:	f000 f811 	bl	8000414 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003f2:	f7ff ff1d 	bl	8000230 <main>

080003f6 <LoopForever>:

LoopForever:
  b LoopForever
 80003f6:	e7fe      	b.n	80003f6 <LoopForever>
  ldr   r0, =_estack
 80003f8:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80003fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000400:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000404:	0800047c 	.word	0x0800047c
  ldr r2, =_sbss
 8000408:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800040c:	20000020 	.word	0x20000020

08000410 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000410:	e7fe      	b.n	8000410 <ADC1_2_IRQHandler>
	...

08000414 <__libc_init_array>:
 8000414:	b570      	push	{r4, r5, r6, lr}
 8000416:	4d0d      	ldr	r5, [pc, #52]	@ (800044c <__libc_init_array+0x38>)
 8000418:	2600      	movs	r6, #0
 800041a:	4c0d      	ldr	r4, [pc, #52]	@ (8000450 <__libc_init_array+0x3c>)
 800041c:	1b64      	subs	r4, r4, r5
 800041e:	10a4      	asrs	r4, r4, #2
 8000420:	42a6      	cmp	r6, r4
 8000422:	d109      	bne.n	8000438 <__libc_init_array+0x24>
 8000424:	4d0b      	ldr	r5, [pc, #44]	@ (8000454 <__libc_init_array+0x40>)
 8000426:	2600      	movs	r6, #0
 8000428:	4c0b      	ldr	r4, [pc, #44]	@ (8000458 <__libc_init_array+0x44>)
 800042a:	f000 f817 	bl	800045c <_init>
 800042e:	1b64      	subs	r4, r4, r5
 8000430:	10a4      	asrs	r4, r4, #2
 8000432:	42a6      	cmp	r6, r4
 8000434:	d105      	bne.n	8000442 <__libc_init_array+0x2e>
 8000436:	bd70      	pop	{r4, r5, r6, pc}
 8000438:	f855 3b04 	ldr.w	r3, [r5], #4
 800043c:	3601      	adds	r6, #1
 800043e:	4798      	blx	r3
 8000440:	e7ee      	b.n	8000420 <__libc_init_array+0xc>
 8000442:	f855 3b04 	ldr.w	r3, [r5], #4
 8000446:	3601      	adds	r6, #1
 8000448:	4798      	blx	r3
 800044a:	e7f2      	b.n	8000432 <__libc_init_array+0x1e>
 800044c:	08000474 	.word	0x08000474
 8000450:	08000474 	.word	0x08000474
 8000454:	08000474 	.word	0x08000474
 8000458:	08000478 	.word	0x08000478

0800045c <_init>:
 800045c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800045e:	bf00      	nop
 8000460:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000462:	bc08      	pop	{r3}
 8000464:	469e      	mov	lr, r3
 8000466:	4770      	bx	lr

08000468 <_fini>:
 8000468:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800046a:	bf00      	nop
 800046c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800046e:	bc08      	pop	{r3}
 8000470:	469e      	mov	lr, r3
 8000472:	4770      	bx	lr
