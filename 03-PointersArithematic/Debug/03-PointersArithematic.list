
03-PointersArithematic.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000117c  080001f0  080001f0  000011f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f4  0800136c  0800136c  0000236c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001460  08001460  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08001460  08001460  0000305c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08001460  08001460  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001460  08001460  00002460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001464  08001464  00002464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001468  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080014c4  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080014c4  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000af7  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000409  00000000  00000000  00003b83  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00003f90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d2  00000000  00000000  000040c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002d99  00000000  00000000  0000419a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000018a5  00000000  00000000  00006f33  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009918  00000000  00000000  000087d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000120f0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b68  00000000  00000000  00012134  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  00012c9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f0 <__do_global_dtors_aux>:
 80001f0:	b510      	push	{r4, lr}
 80001f2:	4c05      	ldr	r4, [pc, #20]	@ (8000208 <__do_global_dtors_aux+0x18>)
 80001f4:	7823      	ldrb	r3, [r4, #0]
 80001f6:	b933      	cbnz	r3, 8000206 <__do_global_dtors_aux+0x16>
 80001f8:	4b04      	ldr	r3, [pc, #16]	@ (800020c <__do_global_dtors_aux+0x1c>)
 80001fa:	b113      	cbz	r3, 8000202 <__do_global_dtors_aux+0x12>
 80001fc:	4804      	ldr	r0, [pc, #16]	@ (8000210 <__do_global_dtors_aux+0x20>)
 80001fe:	f3af 8000 	nop.w
 8000202:	2301      	movs	r3, #1
 8000204:	7023      	strb	r3, [r4, #0]
 8000206:	bd10      	pop	{r4, pc}
 8000208:	2000005c 	.word	0x2000005c
 800020c:	00000000 	.word	0x00000000
 8000210:	08001354 	.word	0x08001354

08000214 <frame_dummy>:
 8000214:	b508      	push	{r3, lr}
 8000216:	4b03      	ldr	r3, [pc, #12]	@ (8000224 <frame_dummy+0x10>)
 8000218:	b11b      	cbz	r3, 8000222 <frame_dummy+0xe>
 800021a:	4903      	ldr	r1, [pc, #12]	@ (8000228 <frame_dummy+0x14>)
 800021c:	4803      	ldr	r0, [pc, #12]	@ (800022c <frame_dummy+0x18>)
 800021e:	f3af 8000 	nop.w
 8000222:	bd08      	pop	{r3, pc}
 8000224:	00000000 	.word	0x00000000
 8000228:	20000060 	.word	0x20000060
 800022c:	08001354 	.word	0x08001354

08000230 <ITM_SendChar>:
#define ITM_STIMULUS_PORT0     *((volatile uint32_t*) 0xE0000000 )
/* ITM Trace Enable Register */
#define ITM_TRACE_EN           *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000230:	b480      	push	{r7}
 8000232:	b083      	sub	sp, #12
 8000234:	af00      	add	r7, sp, #0
 8000236:	4603      	mov	r3, r0
 8000238:	71fb      	strb	r3, [r7, #7]
    // Enable TRCENA (Trace Enable)
    DEMCR |= (1 << 24);
 800023a:	4b0e      	ldr	r3, [pc, #56]	@ (8000274 <ITM_SendChar+0x44>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4a0d      	ldr	r2, [pc, #52]	@ (8000274 <ITM_SendChar+0x44>)
 8000240:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000244:	6013      	str	r3, [r2, #0]

    // Enable stimulus port 0
    ITM_TRACE_EN |= (1 << 0);
 8000246:	4b0c      	ldr	r3, [pc, #48]	@ (8000278 <ITM_SendChar+0x48>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a0b      	ldr	r2, [pc, #44]	@ (8000278 <ITM_SendChar+0x48>)
 800024c:	f043 0301 	orr.w	r3, r3, #1
 8000250:	6013      	str	r3, [r2, #0]

    // Wait until FIFO is ready in bit [0]
    while (!(ITM_STIMULUS_PORT0 & 1));
 8000252:	bf00      	nop
 8000254:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	f003 0301 	and.w	r3, r3, #1
 800025e:	2b00      	cmp	r3, #0
 8000260:	d0f8      	beq.n	8000254 <ITM_SendChar+0x24>

    // Write to ITM stimulus port 0
    ITM_STIMULUS_PORT0 = ch;
 8000262:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000266:	79fb      	ldrb	r3, [r7, #7]
 8000268:	6013      	str	r3, [r2, #0]
}
 800026a:	bf00      	nop
 800026c:	370c      	adds	r7, #12
 800026e:	46bd      	mov	sp, r7
 8000270:	bc80      	pop	{r7}
 8000272:	4770      	bx	lr
 8000274:	e000edfc 	.word	0xe000edfc
 8000278:	e0000e00 	.word	0xe0000e00

0800027c <_write>:

int _write(int file, char *ptr, int len)
{
 800027c:	b580      	push	{r7, lr}
 800027e:	b086      	sub	sp, #24
 8000280:	af00      	add	r7, sp, #0
 8000282:	60f8      	str	r0, [r7, #12]
 8000284:	60b9      	str	r1, [r7, #8]
 8000286:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000288:	2300      	movs	r3, #0
 800028a:	617b      	str	r3, [r7, #20]
 800028c:	e009      	b.n	80002a2 <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 800028e:	68bb      	ldr	r3, [r7, #8]
 8000290:	1c5a      	adds	r2, r3, #1
 8000292:	60ba      	str	r2, [r7, #8]
 8000294:	781b      	ldrb	r3, [r3, #0]
 8000296:	4618      	mov	r0, r3
 8000298:	f7ff ffca 	bl	8000230 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800029c:	697b      	ldr	r3, [r7, #20]
 800029e:	3301      	adds	r3, #1
 80002a0:	617b      	str	r3, [r7, #20]
 80002a2:	697a      	ldr	r2, [r7, #20]
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	429a      	cmp	r2, r3
 80002a8:	dbf1      	blt.n	800028e <_write+0x12>
  }
  return len;
 80002aa:	687b      	ldr	r3, [r7, #4]
}
 80002ac:	4618      	mov	r0, r3
 80002ae:	3718      	adds	r7, #24
 80002b0:	46bd      	mov	sp, r7
 80002b2:	bd80      	pop	{r7, pc}

080002b4 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80002b4:	b590      	push	{r4, r7, lr}
 80002b6:	b08d      	sub	sp, #52	@ 0x34
 80002b8:	af00      	add	r7, sp, #0
	uint8_t  u8_array[4]  = {0x11, 0x22, 0x33, 0x44};
 80002ba:	4b2b      	ldr	r3, [pc, #172]	@ (8000368 <main+0xb4>)
 80002bc:	61fb      	str	r3, [r7, #28]
	uint16_t u16_array[4] = {0x1122, 0x3344, 0x5566, 0x7788};
 80002be:	4a2b      	ldr	r2, [pc, #172]	@ (800036c <main+0xb8>)
 80002c0:	f107 0314 	add.w	r3, r7, #20
 80002c4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80002c8:	e883 0003 	stmia.w	r3, {r0, r1}
	uint32_t u32_array[4] = {0x11223344, 0x55667788, 0x99AABBCC, 0xDDEEFF00};
 80002cc:	4b28      	ldr	r3, [pc, #160]	@ (8000370 <main+0xbc>)
 80002ce:	1d3c      	adds	r4, r7, #4
 80002d0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80002d2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

	// Pointers to the arrays
	uint8_t  *p8  = u8_array;
 80002d6:	f107 031c 	add.w	r3, r7, #28
 80002da:	62fb      	str	r3, [r7, #44]	@ 0x2c
	uint8_t  *p12 = &u8_array[3];
 80002dc:	f107 031c 	add.w	r3, r7, #28
 80002e0:	3303      	adds	r3, #3
 80002e2:	62bb      	str	r3, [r7, #40]	@ 0x28
	uint16_t *p16 = u16_array;
 80002e4:	f107 0314 	add.w	r3, r7, #20
 80002e8:	627b      	str	r3, [r7, #36]	@ 0x24
	uint32_t *p32 = u32_array;
 80002ea:	1d3b      	adds	r3, r7, #4
 80002ec:	623b      	str	r3, [r7, #32]

	printf("p8 address  0x%08X *p8  = 0x%08X\n", p8, *p8);     // Prints 0x11
 80002ee:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80002f0:	781b      	ldrb	r3, [r3, #0]
 80002f2:	461a      	mov	r2, r3
 80002f4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80002f6:	481f      	ldr	r0, [pc, #124]	@ (8000374 <main+0xc0>)
 80002f8:	f000 f9b4 	bl	8000664 <iprintf>
	printf("p16 address 0x%08X *p16 = 0x%08X\n", p16, *p16);   // Prints 0x1122
 80002fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80002fe:	881b      	ldrh	r3, [r3, #0]
 8000300:	461a      	mov	r2, r3
 8000302:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8000304:	481c      	ldr	r0, [pc, #112]	@ (8000378 <main+0xc4>)
 8000306:	f000 f9ad 	bl	8000664 <iprintf>
	printf("p32 address 0x%08X *p32 = 0x%08X\n", p32, *p32);   // Prints 0x11223344
 800030a:	6a3b      	ldr	r3, [r7, #32]
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	461a      	mov	r2, r3
 8000310:	6a39      	ldr	r1, [r7, #32]
 8000312:	481a      	ldr	r0, [pc, #104]	@ (800037c <main+0xc8>)
 8000314:	f000 f9a6 	bl	8000664 <iprintf>

	// Advance each pointer by 2 elements:
	p8 += 2;   // Advances by 2 * sizeof(uint8_t)  = 2 bytes
 8000318:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800031a:	3302      	adds	r3, #2
 800031c:	62fb      	str	r3, [r7, #44]	@ 0x2c
	p16 += 2;  // Advances by 2 * sizeof(uint16_t) = 4 bytes
 800031e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000320:	3304      	adds	r3, #4
 8000322:	627b      	str	r3, [r7, #36]	@ 0x24
	p32 += 2;  // Advances by 2 * sizeof(uint32_t) = 8 bytes
 8000324:	6a3b      	ldr	r3, [r7, #32]
 8000326:	3308      	adds	r3, #8
 8000328:	623b      	str	r3, [r7, #32]

	printf("p8 address  0x%08X *p8  = 0x%08X\n", p8, *p8);     // Prints 0x33
 800032a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800032c:	781b      	ldrb	r3, [r3, #0]
 800032e:	461a      	mov	r2, r3
 8000330:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8000332:	4810      	ldr	r0, [pc, #64]	@ (8000374 <main+0xc0>)
 8000334:	f000 f996 	bl	8000664 <iprintf>
	printf("p16 address 0x%08X *p16 = 0x%08X\n", p16, *p16);   // Prints 0x5566
 8000338:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800033a:	881b      	ldrh	r3, [r3, #0]
 800033c:	461a      	mov	r2, r3
 800033e:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8000340:	480d      	ldr	r0, [pc, #52]	@ (8000378 <main+0xc4>)
 8000342:	f000 f98f 	bl	8000664 <iprintf>
	printf("p32 address 0x%08X *p32 = 0x%08X\n", p32, *p32);   // Prints 0x99AABBCC
 8000346:	6a3b      	ldr	r3, [r7, #32]
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	461a      	mov	r2, r3
 800034c:	6a39      	ldr	r1, [r7, #32]
 800034e:	480b      	ldr	r0, [pc, #44]	@ (800037c <main+0xc8>)
 8000350:	f000 f988 	bl	8000664 <iprintf>
	printf("p8 address  0x%08X p10 address 0x%08X addresses diff %d\n", p8, p12, p12 - p8);
 8000354:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8000356:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000358:	1ad3      	subs	r3, r2, r3
 800035a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800035c:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800035e:	4808      	ldr	r0, [pc, #32]	@ (8000380 <main+0xcc>)
 8000360:	f000 f980 	bl	8000664 <iprintf>

    /* Loop forever */
	for(;;);
 8000364:	bf00      	nop
 8000366:	e7fd      	b.n	8000364 <main+0xb0>
 8000368:	44332211 	.word	0x44332211
 800036c:	08001414 	.word	0x08001414
 8000370:	0800141c 	.word	0x0800141c
 8000374:	0800136c 	.word	0x0800136c
 8000378:	08001390 	.word	0x08001390
 800037c:	080013b4 	.word	0x080013b4
 8000380:	080013d8 	.word	0x080013d8

08000384 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	b086      	sub	sp, #24
 8000388:	af00      	add	r7, sp, #0
 800038a:	60f8      	str	r0, [r7, #12]
 800038c:	60b9      	str	r1, [r7, #8]
 800038e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000390:	2300      	movs	r3, #0
 8000392:	617b      	str	r3, [r7, #20]
 8000394:	e00a      	b.n	80003ac <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000396:	f3af 8000 	nop.w
 800039a:	4601      	mov	r1, r0
 800039c:	68bb      	ldr	r3, [r7, #8]
 800039e:	1c5a      	adds	r2, r3, #1
 80003a0:	60ba      	str	r2, [r7, #8]
 80003a2:	b2ca      	uxtb	r2, r1
 80003a4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a6:	697b      	ldr	r3, [r7, #20]
 80003a8:	3301      	adds	r3, #1
 80003aa:	617b      	str	r3, [r7, #20]
 80003ac:	697a      	ldr	r2, [r7, #20]
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	429a      	cmp	r2, r3
 80003b2:	dbf0      	blt.n	8000396 <_read+0x12>
  }

  return len;
 80003b4:	687b      	ldr	r3, [r7, #4]
}
 80003b6:	4618      	mov	r0, r3
 80003b8:	3718      	adds	r7, #24
 80003ba:	46bd      	mov	sp, r7
 80003bc:	bd80      	pop	{r7, pc}

080003be <_close>:
  }
  return len;
}

int _close(int file)
{
 80003be:	b480      	push	{r7}
 80003c0:	b083      	sub	sp, #12
 80003c2:	af00      	add	r7, sp, #0
 80003c4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003c6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003ca:	4618      	mov	r0, r3
 80003cc:	370c      	adds	r7, #12
 80003ce:	46bd      	mov	sp, r7
 80003d0:	bc80      	pop	{r7}
 80003d2:	4770      	bx	lr

080003d4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003d4:	b480      	push	{r7}
 80003d6:	b083      	sub	sp, #12
 80003d8:	af00      	add	r7, sp, #0
 80003da:	6078      	str	r0, [r7, #4]
 80003dc:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003de:	683b      	ldr	r3, [r7, #0]
 80003e0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80003e4:	605a      	str	r2, [r3, #4]
  return 0;
 80003e6:	2300      	movs	r3, #0
}
 80003e8:	4618      	mov	r0, r3
 80003ea:	370c      	adds	r7, #12
 80003ec:	46bd      	mov	sp, r7
 80003ee:	bc80      	pop	{r7}
 80003f0:	4770      	bx	lr

080003f2 <_isatty>:

int _isatty(int file)
{
 80003f2:	b480      	push	{r7}
 80003f4:	b083      	sub	sp, #12
 80003f6:	af00      	add	r7, sp, #0
 80003f8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003fa:	2301      	movs	r3, #1
}
 80003fc:	4618      	mov	r0, r3
 80003fe:	370c      	adds	r7, #12
 8000400:	46bd      	mov	sp, r7
 8000402:	bc80      	pop	{r7}
 8000404:	4770      	bx	lr

08000406 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000406:	b480      	push	{r7}
 8000408:	b085      	sub	sp, #20
 800040a:	af00      	add	r7, sp, #0
 800040c:	60f8      	str	r0, [r7, #12]
 800040e:	60b9      	str	r1, [r7, #8]
 8000410:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000412:	2300      	movs	r3, #0
}
 8000414:	4618      	mov	r0, r3
 8000416:	3714      	adds	r7, #20
 8000418:	46bd      	mov	sp, r7
 800041a:	bc80      	pop	{r7}
 800041c:	4770      	bx	lr
	...

08000420 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000420:	b580      	push	{r7, lr}
 8000422:	b086      	sub	sp, #24
 8000424:	af00      	add	r7, sp, #0
 8000426:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000428:	4a14      	ldr	r2, [pc, #80]	@ (800047c <_sbrk+0x5c>)
 800042a:	4b15      	ldr	r3, [pc, #84]	@ (8000480 <_sbrk+0x60>)
 800042c:	1ad3      	subs	r3, r2, r3
 800042e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000430:	697b      	ldr	r3, [r7, #20]
 8000432:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000434:	4b13      	ldr	r3, [pc, #76]	@ (8000484 <_sbrk+0x64>)
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	2b00      	cmp	r3, #0
 800043a:	d102      	bne.n	8000442 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800043c:	4b11      	ldr	r3, [pc, #68]	@ (8000484 <_sbrk+0x64>)
 800043e:	4a12      	ldr	r2, [pc, #72]	@ (8000488 <_sbrk+0x68>)
 8000440:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000442:	4b10      	ldr	r3, [pc, #64]	@ (8000484 <_sbrk+0x64>)
 8000444:	681a      	ldr	r2, [r3, #0]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4413      	add	r3, r2
 800044a:	693a      	ldr	r2, [r7, #16]
 800044c:	429a      	cmp	r2, r3
 800044e:	d207      	bcs.n	8000460 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000450:	f000 f9ac 	bl	80007ac <__errno>
 8000454:	4603      	mov	r3, r0
 8000456:	220c      	movs	r2, #12
 8000458:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800045a:	f04f 33ff 	mov.w	r3, #4294967295
 800045e:	e009      	b.n	8000474 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000460:	4b08      	ldr	r3, [pc, #32]	@ (8000484 <_sbrk+0x64>)
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000466:	4b07      	ldr	r3, [pc, #28]	@ (8000484 <_sbrk+0x64>)
 8000468:	681a      	ldr	r2, [r3, #0]
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	4413      	add	r3, r2
 800046e:	4a05      	ldr	r2, [pc, #20]	@ (8000484 <_sbrk+0x64>)
 8000470:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000472:	68fb      	ldr	r3, [r7, #12]
}
 8000474:	4618      	mov	r0, r3
 8000476:	3718      	adds	r7, #24
 8000478:	46bd      	mov	sp, r7
 800047a:	bd80      	pop	{r7, pc}
 800047c:	20030000 	.word	0x20030000
 8000480:	00000400 	.word	0x00000400
 8000484:	20000078 	.word	0x20000078
 8000488:	200001c8 	.word	0x200001c8

0800048c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800048c:	480d      	ldr	r0, [pc, #52]	@ (80004c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800048e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000490:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000494:	480c      	ldr	r0, [pc, #48]	@ (80004c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000496:	490d      	ldr	r1, [pc, #52]	@ (80004cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000498:	4a0d      	ldr	r2, [pc, #52]	@ (80004d0 <LoopForever+0xe>)
  movs r3, #0
 800049a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800049c:	e002      	b.n	80004a4 <LoopCopyDataInit>

0800049e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800049e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004a2:	3304      	adds	r3, #4

080004a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004a8:	d3f9      	bcc.n	800049e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004aa:	4a0a      	ldr	r2, [pc, #40]	@ (80004d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004ac:	4c0a      	ldr	r4, [pc, #40]	@ (80004d8 <LoopForever+0x16>)
  movs r3, #0
 80004ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004b0:	e001      	b.n	80004b6 <LoopFillZerobss>

080004b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004b4:	3204      	adds	r2, #4

080004b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004b8:	d3fb      	bcc.n	80004b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004ba:	f000 f97d 	bl	80007b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004be:	f7ff fef9 	bl	80002b4 <main>

080004c2 <LoopForever>:

LoopForever:
  b LoopForever
 80004c2:	e7fe      	b.n	80004c2 <LoopForever>
  ldr   r0, =_estack
 80004c4:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80004c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004cc:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004d0:	08001468 	.word	0x08001468
  ldr r2, =_sbss
 80004d4:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004d8:	200001c8 	.word	0x200001c8

080004dc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004dc:	e7fe      	b.n	80004dc <ADC1_2_IRQHandler>
	...

080004e0 <std>:
 80004e0:	2300      	movs	r3, #0
 80004e2:	b510      	push	{r4, lr}
 80004e4:	4604      	mov	r4, r0
 80004e6:	6083      	str	r3, [r0, #8]
 80004e8:	8181      	strh	r1, [r0, #12]
 80004ea:	4619      	mov	r1, r3
 80004ec:	6643      	str	r3, [r0, #100]	@ 0x64
 80004ee:	81c2      	strh	r2, [r0, #14]
 80004f0:	2208      	movs	r2, #8
 80004f2:	6183      	str	r3, [r0, #24]
 80004f4:	e9c0 3300 	strd	r3, r3, [r0]
 80004f8:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004fc:	305c      	adds	r0, #92	@ 0x5c
 80004fe:	f000 f906 	bl	800070e <memset>
 8000502:	4b0d      	ldr	r3, [pc, #52]	@ (8000538 <std+0x58>)
 8000504:	6224      	str	r4, [r4, #32]
 8000506:	6263      	str	r3, [r4, #36]	@ 0x24
 8000508:	4b0c      	ldr	r3, [pc, #48]	@ (800053c <std+0x5c>)
 800050a:	62a3      	str	r3, [r4, #40]	@ 0x28
 800050c:	4b0c      	ldr	r3, [pc, #48]	@ (8000540 <std+0x60>)
 800050e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000510:	4b0c      	ldr	r3, [pc, #48]	@ (8000544 <std+0x64>)
 8000512:	6323      	str	r3, [r4, #48]	@ 0x30
 8000514:	4b0c      	ldr	r3, [pc, #48]	@ (8000548 <std+0x68>)
 8000516:	429c      	cmp	r4, r3
 8000518:	d006      	beq.n	8000528 <std+0x48>
 800051a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800051e:	4294      	cmp	r4, r2
 8000520:	d002      	beq.n	8000528 <std+0x48>
 8000522:	33d0      	adds	r3, #208	@ 0xd0
 8000524:	429c      	cmp	r4, r3
 8000526:	d105      	bne.n	8000534 <std+0x54>
 8000528:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800052c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000530:	f000 b966 	b.w	8000800 <__retarget_lock_init_recursive>
 8000534:	bd10      	pop	{r4, pc}
 8000536:	bf00      	nop
 8000538:	08000689 	.word	0x08000689
 800053c:	080006ab 	.word	0x080006ab
 8000540:	080006e3 	.word	0x080006e3
 8000544:	08000707 	.word	0x08000707
 8000548:	2000007c 	.word	0x2000007c

0800054c <stdio_exit_handler>:
 800054c:	4a02      	ldr	r2, [pc, #8]	@ (8000558 <stdio_exit_handler+0xc>)
 800054e:	4903      	ldr	r1, [pc, #12]	@ (800055c <stdio_exit_handler+0x10>)
 8000550:	4803      	ldr	r0, [pc, #12]	@ (8000560 <stdio_exit_handler+0x14>)
 8000552:	f000 b869 	b.w	8000628 <_fwalk_sglue>
 8000556:	bf00      	nop
 8000558:	20000000 	.word	0x20000000
 800055c:	08001099 	.word	0x08001099
 8000560:	20000010 	.word	0x20000010

08000564 <cleanup_stdio>:
 8000564:	6841      	ldr	r1, [r0, #4]
 8000566:	4b0c      	ldr	r3, [pc, #48]	@ (8000598 <cleanup_stdio+0x34>)
 8000568:	4299      	cmp	r1, r3
 800056a:	b510      	push	{r4, lr}
 800056c:	4604      	mov	r4, r0
 800056e:	d001      	beq.n	8000574 <cleanup_stdio+0x10>
 8000570:	f000 fd92 	bl	8001098 <_fflush_r>
 8000574:	68a1      	ldr	r1, [r4, #8]
 8000576:	4b09      	ldr	r3, [pc, #36]	@ (800059c <cleanup_stdio+0x38>)
 8000578:	4299      	cmp	r1, r3
 800057a:	d002      	beq.n	8000582 <cleanup_stdio+0x1e>
 800057c:	4620      	mov	r0, r4
 800057e:	f000 fd8b 	bl	8001098 <_fflush_r>
 8000582:	68e1      	ldr	r1, [r4, #12]
 8000584:	4b06      	ldr	r3, [pc, #24]	@ (80005a0 <cleanup_stdio+0x3c>)
 8000586:	4299      	cmp	r1, r3
 8000588:	d004      	beq.n	8000594 <cleanup_stdio+0x30>
 800058a:	4620      	mov	r0, r4
 800058c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000590:	f000 bd82 	b.w	8001098 <_fflush_r>
 8000594:	bd10      	pop	{r4, pc}
 8000596:	bf00      	nop
 8000598:	2000007c 	.word	0x2000007c
 800059c:	200000e4 	.word	0x200000e4
 80005a0:	2000014c 	.word	0x2000014c

080005a4 <global_stdio_init.part.0>:
 80005a4:	b510      	push	{r4, lr}
 80005a6:	4b0b      	ldr	r3, [pc, #44]	@ (80005d4 <global_stdio_init.part.0+0x30>)
 80005a8:	2104      	movs	r1, #4
 80005aa:	4c0b      	ldr	r4, [pc, #44]	@ (80005d8 <global_stdio_init.part.0+0x34>)
 80005ac:	4a0b      	ldr	r2, [pc, #44]	@ (80005dc <global_stdio_init.part.0+0x38>)
 80005ae:	4620      	mov	r0, r4
 80005b0:	601a      	str	r2, [r3, #0]
 80005b2:	2200      	movs	r2, #0
 80005b4:	f7ff ff94 	bl	80004e0 <std>
 80005b8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80005bc:	2201      	movs	r2, #1
 80005be:	2109      	movs	r1, #9
 80005c0:	f7ff ff8e 	bl	80004e0 <std>
 80005c4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80005c8:	2202      	movs	r2, #2
 80005ca:	2112      	movs	r1, #18
 80005cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005d0:	f7ff bf86 	b.w	80004e0 <std>
 80005d4:	200001b4 	.word	0x200001b4
 80005d8:	2000007c 	.word	0x2000007c
 80005dc:	0800054d 	.word	0x0800054d

080005e0 <__sfp_lock_acquire>:
 80005e0:	4801      	ldr	r0, [pc, #4]	@ (80005e8 <__sfp_lock_acquire+0x8>)
 80005e2:	f000 b90e 	b.w	8000802 <__retarget_lock_acquire_recursive>
 80005e6:	bf00      	nop
 80005e8:	200001bd 	.word	0x200001bd

080005ec <__sfp_lock_release>:
 80005ec:	4801      	ldr	r0, [pc, #4]	@ (80005f4 <__sfp_lock_release+0x8>)
 80005ee:	f000 b909 	b.w	8000804 <__retarget_lock_release_recursive>
 80005f2:	bf00      	nop
 80005f4:	200001bd 	.word	0x200001bd

080005f8 <__sinit>:
 80005f8:	b510      	push	{r4, lr}
 80005fa:	4604      	mov	r4, r0
 80005fc:	f7ff fff0 	bl	80005e0 <__sfp_lock_acquire>
 8000600:	6a23      	ldr	r3, [r4, #32]
 8000602:	b11b      	cbz	r3, 800060c <__sinit+0x14>
 8000604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000608:	f7ff bff0 	b.w	80005ec <__sfp_lock_release>
 800060c:	4b04      	ldr	r3, [pc, #16]	@ (8000620 <__sinit+0x28>)
 800060e:	6223      	str	r3, [r4, #32]
 8000610:	4b04      	ldr	r3, [pc, #16]	@ (8000624 <__sinit+0x2c>)
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	2b00      	cmp	r3, #0
 8000616:	d1f5      	bne.n	8000604 <__sinit+0xc>
 8000618:	f7ff ffc4 	bl	80005a4 <global_stdio_init.part.0>
 800061c:	e7f2      	b.n	8000604 <__sinit+0xc>
 800061e:	bf00      	nop
 8000620:	08000565 	.word	0x08000565
 8000624:	200001b4 	.word	0x200001b4

08000628 <_fwalk_sglue>:
 8000628:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800062c:	4607      	mov	r7, r0
 800062e:	4688      	mov	r8, r1
 8000630:	4614      	mov	r4, r2
 8000632:	2600      	movs	r6, #0
 8000634:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000638:	f1b9 0901 	subs.w	r9, r9, #1
 800063c:	d505      	bpl.n	800064a <_fwalk_sglue+0x22>
 800063e:	6824      	ldr	r4, [r4, #0]
 8000640:	2c00      	cmp	r4, #0
 8000642:	d1f7      	bne.n	8000634 <_fwalk_sglue+0xc>
 8000644:	4630      	mov	r0, r6
 8000646:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800064a:	89ab      	ldrh	r3, [r5, #12]
 800064c:	2b01      	cmp	r3, #1
 800064e:	d907      	bls.n	8000660 <_fwalk_sglue+0x38>
 8000650:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000654:	3301      	adds	r3, #1
 8000656:	d003      	beq.n	8000660 <_fwalk_sglue+0x38>
 8000658:	4629      	mov	r1, r5
 800065a:	4638      	mov	r0, r7
 800065c:	47c0      	blx	r8
 800065e:	4306      	orrs	r6, r0
 8000660:	3568      	adds	r5, #104	@ 0x68
 8000662:	e7e9      	b.n	8000638 <_fwalk_sglue+0x10>

08000664 <iprintf>:
 8000664:	b40f      	push	{r0, r1, r2, r3}
 8000666:	b507      	push	{r0, r1, r2, lr}
 8000668:	4906      	ldr	r1, [pc, #24]	@ (8000684 <iprintf+0x20>)
 800066a:	ab04      	add	r3, sp, #16
 800066c:	6808      	ldr	r0, [r1, #0]
 800066e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000672:	6881      	ldr	r1, [r0, #8]
 8000674:	9301      	str	r3, [sp, #4]
 8000676:	f000 f9e7 	bl	8000a48 <_vfiprintf_r>
 800067a:	b003      	add	sp, #12
 800067c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000680:	b004      	add	sp, #16
 8000682:	4770      	bx	lr
 8000684:	2000000c 	.word	0x2000000c

08000688 <__sread>:
 8000688:	b510      	push	{r4, lr}
 800068a:	460c      	mov	r4, r1
 800068c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000690:	f000 f868 	bl	8000764 <_read_r>
 8000694:	2800      	cmp	r0, #0
 8000696:	bfab      	itete	ge
 8000698:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800069a:	89a3      	ldrhlt	r3, [r4, #12]
 800069c:	181b      	addge	r3, r3, r0
 800069e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80006a2:	bfac      	ite	ge
 80006a4:	6563      	strge	r3, [r4, #84]	@ 0x54
 80006a6:	81a3      	strhlt	r3, [r4, #12]
 80006a8:	bd10      	pop	{r4, pc}

080006aa <__swrite>:
 80006aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006ae:	461f      	mov	r7, r3
 80006b0:	898b      	ldrh	r3, [r1, #12]
 80006b2:	4605      	mov	r5, r0
 80006b4:	460c      	mov	r4, r1
 80006b6:	05db      	lsls	r3, r3, #23
 80006b8:	4616      	mov	r6, r2
 80006ba:	d505      	bpl.n	80006c8 <__swrite+0x1e>
 80006bc:	2302      	movs	r3, #2
 80006be:	2200      	movs	r2, #0
 80006c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006c4:	f000 f83c 	bl	8000740 <_lseek_r>
 80006c8:	89a3      	ldrh	r3, [r4, #12]
 80006ca:	4632      	mov	r2, r6
 80006cc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006d0:	4628      	mov	r0, r5
 80006d2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80006d6:	81a3      	strh	r3, [r4, #12]
 80006d8:	463b      	mov	r3, r7
 80006da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80006de:	f000 b853 	b.w	8000788 <_write_r>

080006e2 <__sseek>:
 80006e2:	b510      	push	{r4, lr}
 80006e4:	460c      	mov	r4, r1
 80006e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006ea:	f000 f829 	bl	8000740 <_lseek_r>
 80006ee:	1c43      	adds	r3, r0, #1
 80006f0:	89a3      	ldrh	r3, [r4, #12]
 80006f2:	bf15      	itete	ne
 80006f4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80006f6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80006fa:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80006fe:	81a3      	strheq	r3, [r4, #12]
 8000700:	bf18      	it	ne
 8000702:	81a3      	strhne	r3, [r4, #12]
 8000704:	bd10      	pop	{r4, pc}

08000706 <__sclose>:
 8000706:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800070a:	f000 b809 	b.w	8000720 <_close_r>

0800070e <memset>:
 800070e:	4402      	add	r2, r0
 8000710:	4603      	mov	r3, r0
 8000712:	4293      	cmp	r3, r2
 8000714:	d100      	bne.n	8000718 <memset+0xa>
 8000716:	4770      	bx	lr
 8000718:	f803 1b01 	strb.w	r1, [r3], #1
 800071c:	e7f9      	b.n	8000712 <memset+0x4>
	...

08000720 <_close_r>:
 8000720:	b538      	push	{r3, r4, r5, lr}
 8000722:	2300      	movs	r3, #0
 8000724:	4d05      	ldr	r5, [pc, #20]	@ (800073c <_close_r+0x1c>)
 8000726:	4604      	mov	r4, r0
 8000728:	4608      	mov	r0, r1
 800072a:	602b      	str	r3, [r5, #0]
 800072c:	f7ff fe47 	bl	80003be <_close>
 8000730:	1c43      	adds	r3, r0, #1
 8000732:	d102      	bne.n	800073a <_close_r+0x1a>
 8000734:	682b      	ldr	r3, [r5, #0]
 8000736:	b103      	cbz	r3, 800073a <_close_r+0x1a>
 8000738:	6023      	str	r3, [r4, #0]
 800073a:	bd38      	pop	{r3, r4, r5, pc}
 800073c:	200001b8 	.word	0x200001b8

08000740 <_lseek_r>:
 8000740:	b538      	push	{r3, r4, r5, lr}
 8000742:	4604      	mov	r4, r0
 8000744:	4d06      	ldr	r5, [pc, #24]	@ (8000760 <_lseek_r+0x20>)
 8000746:	4608      	mov	r0, r1
 8000748:	4611      	mov	r1, r2
 800074a:	2200      	movs	r2, #0
 800074c:	602a      	str	r2, [r5, #0]
 800074e:	461a      	mov	r2, r3
 8000750:	f7ff fe59 	bl	8000406 <_lseek>
 8000754:	1c43      	adds	r3, r0, #1
 8000756:	d102      	bne.n	800075e <_lseek_r+0x1e>
 8000758:	682b      	ldr	r3, [r5, #0]
 800075a:	b103      	cbz	r3, 800075e <_lseek_r+0x1e>
 800075c:	6023      	str	r3, [r4, #0]
 800075e:	bd38      	pop	{r3, r4, r5, pc}
 8000760:	200001b8 	.word	0x200001b8

08000764 <_read_r>:
 8000764:	b538      	push	{r3, r4, r5, lr}
 8000766:	4604      	mov	r4, r0
 8000768:	4d06      	ldr	r5, [pc, #24]	@ (8000784 <_read_r+0x20>)
 800076a:	4608      	mov	r0, r1
 800076c:	4611      	mov	r1, r2
 800076e:	2200      	movs	r2, #0
 8000770:	602a      	str	r2, [r5, #0]
 8000772:	461a      	mov	r2, r3
 8000774:	f7ff fe06 	bl	8000384 <_read>
 8000778:	1c43      	adds	r3, r0, #1
 800077a:	d102      	bne.n	8000782 <_read_r+0x1e>
 800077c:	682b      	ldr	r3, [r5, #0]
 800077e:	b103      	cbz	r3, 8000782 <_read_r+0x1e>
 8000780:	6023      	str	r3, [r4, #0]
 8000782:	bd38      	pop	{r3, r4, r5, pc}
 8000784:	200001b8 	.word	0x200001b8

08000788 <_write_r>:
 8000788:	b538      	push	{r3, r4, r5, lr}
 800078a:	4604      	mov	r4, r0
 800078c:	4d06      	ldr	r5, [pc, #24]	@ (80007a8 <_write_r+0x20>)
 800078e:	4608      	mov	r0, r1
 8000790:	4611      	mov	r1, r2
 8000792:	2200      	movs	r2, #0
 8000794:	602a      	str	r2, [r5, #0]
 8000796:	461a      	mov	r2, r3
 8000798:	f7ff fd70 	bl	800027c <_write>
 800079c:	1c43      	adds	r3, r0, #1
 800079e:	d102      	bne.n	80007a6 <_write_r+0x1e>
 80007a0:	682b      	ldr	r3, [r5, #0]
 80007a2:	b103      	cbz	r3, 80007a6 <_write_r+0x1e>
 80007a4:	6023      	str	r3, [r4, #0]
 80007a6:	bd38      	pop	{r3, r4, r5, pc}
 80007a8:	200001b8 	.word	0x200001b8

080007ac <__errno>:
 80007ac:	4b01      	ldr	r3, [pc, #4]	@ (80007b4 <__errno+0x8>)
 80007ae:	6818      	ldr	r0, [r3, #0]
 80007b0:	4770      	bx	lr
 80007b2:	bf00      	nop
 80007b4:	2000000c 	.word	0x2000000c

080007b8 <__libc_init_array>:
 80007b8:	b570      	push	{r4, r5, r6, lr}
 80007ba:	4d0d      	ldr	r5, [pc, #52]	@ (80007f0 <__libc_init_array+0x38>)
 80007bc:	2600      	movs	r6, #0
 80007be:	4c0d      	ldr	r4, [pc, #52]	@ (80007f4 <__libc_init_array+0x3c>)
 80007c0:	1b64      	subs	r4, r4, r5
 80007c2:	10a4      	asrs	r4, r4, #2
 80007c4:	42a6      	cmp	r6, r4
 80007c6:	d109      	bne.n	80007dc <__libc_init_array+0x24>
 80007c8:	4d0b      	ldr	r5, [pc, #44]	@ (80007f8 <__libc_init_array+0x40>)
 80007ca:	2600      	movs	r6, #0
 80007cc:	4c0b      	ldr	r4, [pc, #44]	@ (80007fc <__libc_init_array+0x44>)
 80007ce:	f000 fdc1 	bl	8001354 <_init>
 80007d2:	1b64      	subs	r4, r4, r5
 80007d4:	10a4      	asrs	r4, r4, #2
 80007d6:	42a6      	cmp	r6, r4
 80007d8:	d105      	bne.n	80007e6 <__libc_init_array+0x2e>
 80007da:	bd70      	pop	{r4, r5, r6, pc}
 80007dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80007e0:	3601      	adds	r6, #1
 80007e2:	4798      	blx	r3
 80007e4:	e7ee      	b.n	80007c4 <__libc_init_array+0xc>
 80007e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80007ea:	3601      	adds	r6, #1
 80007ec:	4798      	blx	r3
 80007ee:	e7f2      	b.n	80007d6 <__libc_init_array+0x1e>
 80007f0:	08001460 	.word	0x08001460
 80007f4:	08001460 	.word	0x08001460
 80007f8:	08001460 	.word	0x08001460
 80007fc:	08001464 	.word	0x08001464

08000800 <__retarget_lock_init_recursive>:
 8000800:	4770      	bx	lr

08000802 <__retarget_lock_acquire_recursive>:
 8000802:	4770      	bx	lr

08000804 <__retarget_lock_release_recursive>:
 8000804:	4770      	bx	lr
	...

08000808 <_free_r>:
 8000808:	b538      	push	{r3, r4, r5, lr}
 800080a:	4605      	mov	r5, r0
 800080c:	2900      	cmp	r1, #0
 800080e:	d041      	beq.n	8000894 <_free_r+0x8c>
 8000810:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000814:	1f0c      	subs	r4, r1, #4
 8000816:	2b00      	cmp	r3, #0
 8000818:	bfb8      	it	lt
 800081a:	18e4      	addlt	r4, r4, r3
 800081c:	f000 f8e0 	bl	80009e0 <__malloc_lock>
 8000820:	4a1d      	ldr	r2, [pc, #116]	@ (8000898 <_free_r+0x90>)
 8000822:	6813      	ldr	r3, [r2, #0]
 8000824:	b933      	cbnz	r3, 8000834 <_free_r+0x2c>
 8000826:	6063      	str	r3, [r4, #4]
 8000828:	6014      	str	r4, [r2, #0]
 800082a:	4628      	mov	r0, r5
 800082c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000830:	f000 b8dc 	b.w	80009ec <__malloc_unlock>
 8000834:	42a3      	cmp	r3, r4
 8000836:	d908      	bls.n	800084a <_free_r+0x42>
 8000838:	6820      	ldr	r0, [r4, #0]
 800083a:	1821      	adds	r1, r4, r0
 800083c:	428b      	cmp	r3, r1
 800083e:	bf01      	itttt	eq
 8000840:	6819      	ldreq	r1, [r3, #0]
 8000842:	685b      	ldreq	r3, [r3, #4]
 8000844:	1809      	addeq	r1, r1, r0
 8000846:	6021      	streq	r1, [r4, #0]
 8000848:	e7ed      	b.n	8000826 <_free_r+0x1e>
 800084a:	461a      	mov	r2, r3
 800084c:	685b      	ldr	r3, [r3, #4]
 800084e:	b10b      	cbz	r3, 8000854 <_free_r+0x4c>
 8000850:	42a3      	cmp	r3, r4
 8000852:	d9fa      	bls.n	800084a <_free_r+0x42>
 8000854:	6811      	ldr	r1, [r2, #0]
 8000856:	1850      	adds	r0, r2, r1
 8000858:	42a0      	cmp	r0, r4
 800085a:	d10b      	bne.n	8000874 <_free_r+0x6c>
 800085c:	6820      	ldr	r0, [r4, #0]
 800085e:	4401      	add	r1, r0
 8000860:	1850      	adds	r0, r2, r1
 8000862:	6011      	str	r1, [r2, #0]
 8000864:	4283      	cmp	r3, r0
 8000866:	d1e0      	bne.n	800082a <_free_r+0x22>
 8000868:	6818      	ldr	r0, [r3, #0]
 800086a:	685b      	ldr	r3, [r3, #4]
 800086c:	4408      	add	r0, r1
 800086e:	6053      	str	r3, [r2, #4]
 8000870:	6010      	str	r0, [r2, #0]
 8000872:	e7da      	b.n	800082a <_free_r+0x22>
 8000874:	d902      	bls.n	800087c <_free_r+0x74>
 8000876:	230c      	movs	r3, #12
 8000878:	602b      	str	r3, [r5, #0]
 800087a:	e7d6      	b.n	800082a <_free_r+0x22>
 800087c:	6820      	ldr	r0, [r4, #0]
 800087e:	1821      	adds	r1, r4, r0
 8000880:	428b      	cmp	r3, r1
 8000882:	bf02      	ittt	eq
 8000884:	6819      	ldreq	r1, [r3, #0]
 8000886:	685b      	ldreq	r3, [r3, #4]
 8000888:	1809      	addeq	r1, r1, r0
 800088a:	6063      	str	r3, [r4, #4]
 800088c:	bf08      	it	eq
 800088e:	6021      	streq	r1, [r4, #0]
 8000890:	6054      	str	r4, [r2, #4]
 8000892:	e7ca      	b.n	800082a <_free_r+0x22>
 8000894:	bd38      	pop	{r3, r4, r5, pc}
 8000896:	bf00      	nop
 8000898:	200001c4 	.word	0x200001c4

0800089c <sbrk_aligned>:
 800089c:	b570      	push	{r4, r5, r6, lr}
 800089e:	4e0f      	ldr	r6, [pc, #60]	@ (80008dc <sbrk_aligned+0x40>)
 80008a0:	460c      	mov	r4, r1
 80008a2:	4605      	mov	r5, r0
 80008a4:	6831      	ldr	r1, [r6, #0]
 80008a6:	b911      	cbnz	r1, 80008ae <sbrk_aligned+0x12>
 80008a8:	f000 fcb2 	bl	8001210 <_sbrk_r>
 80008ac:	6030      	str	r0, [r6, #0]
 80008ae:	4621      	mov	r1, r4
 80008b0:	4628      	mov	r0, r5
 80008b2:	f000 fcad 	bl	8001210 <_sbrk_r>
 80008b6:	1c43      	adds	r3, r0, #1
 80008b8:	d103      	bne.n	80008c2 <sbrk_aligned+0x26>
 80008ba:	f04f 34ff 	mov.w	r4, #4294967295
 80008be:	4620      	mov	r0, r4
 80008c0:	bd70      	pop	{r4, r5, r6, pc}
 80008c2:	1cc4      	adds	r4, r0, #3
 80008c4:	f024 0403 	bic.w	r4, r4, #3
 80008c8:	42a0      	cmp	r0, r4
 80008ca:	d0f8      	beq.n	80008be <sbrk_aligned+0x22>
 80008cc:	1a21      	subs	r1, r4, r0
 80008ce:	4628      	mov	r0, r5
 80008d0:	f000 fc9e 	bl	8001210 <_sbrk_r>
 80008d4:	3001      	adds	r0, #1
 80008d6:	d1f2      	bne.n	80008be <sbrk_aligned+0x22>
 80008d8:	e7ef      	b.n	80008ba <sbrk_aligned+0x1e>
 80008da:	bf00      	nop
 80008dc:	200001c0 	.word	0x200001c0

080008e0 <_malloc_r>:
 80008e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008e4:	1ccd      	adds	r5, r1, #3
 80008e6:	4606      	mov	r6, r0
 80008e8:	f025 0503 	bic.w	r5, r5, #3
 80008ec:	3508      	adds	r5, #8
 80008ee:	2d0c      	cmp	r5, #12
 80008f0:	bf38      	it	cc
 80008f2:	250c      	movcc	r5, #12
 80008f4:	2d00      	cmp	r5, #0
 80008f6:	db01      	blt.n	80008fc <_malloc_r+0x1c>
 80008f8:	42a9      	cmp	r1, r5
 80008fa:	d904      	bls.n	8000906 <_malloc_r+0x26>
 80008fc:	230c      	movs	r3, #12
 80008fe:	6033      	str	r3, [r6, #0]
 8000900:	2000      	movs	r0, #0
 8000902:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000906:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80009dc <_malloc_r+0xfc>
 800090a:	f000 f869 	bl	80009e0 <__malloc_lock>
 800090e:	f8d8 3000 	ldr.w	r3, [r8]
 8000912:	461c      	mov	r4, r3
 8000914:	bb44      	cbnz	r4, 8000968 <_malloc_r+0x88>
 8000916:	4629      	mov	r1, r5
 8000918:	4630      	mov	r0, r6
 800091a:	f7ff ffbf 	bl	800089c <sbrk_aligned>
 800091e:	1c43      	adds	r3, r0, #1
 8000920:	4604      	mov	r4, r0
 8000922:	d158      	bne.n	80009d6 <_malloc_r+0xf6>
 8000924:	f8d8 4000 	ldr.w	r4, [r8]
 8000928:	4627      	mov	r7, r4
 800092a:	2f00      	cmp	r7, #0
 800092c:	d143      	bne.n	80009b6 <_malloc_r+0xd6>
 800092e:	2c00      	cmp	r4, #0
 8000930:	d04b      	beq.n	80009ca <_malloc_r+0xea>
 8000932:	6823      	ldr	r3, [r4, #0]
 8000934:	4639      	mov	r1, r7
 8000936:	4630      	mov	r0, r6
 8000938:	eb04 0903 	add.w	r9, r4, r3
 800093c:	f000 fc68 	bl	8001210 <_sbrk_r>
 8000940:	4581      	cmp	r9, r0
 8000942:	d142      	bne.n	80009ca <_malloc_r+0xea>
 8000944:	6821      	ldr	r1, [r4, #0]
 8000946:	4630      	mov	r0, r6
 8000948:	1a6d      	subs	r5, r5, r1
 800094a:	4629      	mov	r1, r5
 800094c:	f7ff ffa6 	bl	800089c <sbrk_aligned>
 8000950:	3001      	adds	r0, #1
 8000952:	d03a      	beq.n	80009ca <_malloc_r+0xea>
 8000954:	6823      	ldr	r3, [r4, #0]
 8000956:	442b      	add	r3, r5
 8000958:	6023      	str	r3, [r4, #0]
 800095a:	f8d8 3000 	ldr.w	r3, [r8]
 800095e:	685a      	ldr	r2, [r3, #4]
 8000960:	bb62      	cbnz	r2, 80009bc <_malloc_r+0xdc>
 8000962:	f8c8 7000 	str.w	r7, [r8]
 8000966:	e00f      	b.n	8000988 <_malloc_r+0xa8>
 8000968:	6822      	ldr	r2, [r4, #0]
 800096a:	1b52      	subs	r2, r2, r5
 800096c:	d420      	bmi.n	80009b0 <_malloc_r+0xd0>
 800096e:	2a0b      	cmp	r2, #11
 8000970:	d917      	bls.n	80009a2 <_malloc_r+0xc2>
 8000972:	1961      	adds	r1, r4, r5
 8000974:	42a3      	cmp	r3, r4
 8000976:	6025      	str	r5, [r4, #0]
 8000978:	bf18      	it	ne
 800097a:	6059      	strne	r1, [r3, #4]
 800097c:	6863      	ldr	r3, [r4, #4]
 800097e:	bf08      	it	eq
 8000980:	f8c8 1000 	streq.w	r1, [r8]
 8000984:	5162      	str	r2, [r4, r5]
 8000986:	604b      	str	r3, [r1, #4]
 8000988:	4630      	mov	r0, r6
 800098a:	f000 f82f 	bl	80009ec <__malloc_unlock>
 800098e:	f104 000b 	add.w	r0, r4, #11
 8000992:	1d23      	adds	r3, r4, #4
 8000994:	f020 0007 	bic.w	r0, r0, #7
 8000998:	1ac2      	subs	r2, r0, r3
 800099a:	bf1c      	itt	ne
 800099c:	1a1b      	subne	r3, r3, r0
 800099e:	50a3      	strne	r3, [r4, r2]
 80009a0:	e7af      	b.n	8000902 <_malloc_r+0x22>
 80009a2:	6862      	ldr	r2, [r4, #4]
 80009a4:	42a3      	cmp	r3, r4
 80009a6:	bf0c      	ite	eq
 80009a8:	f8c8 2000 	streq.w	r2, [r8]
 80009ac:	605a      	strne	r2, [r3, #4]
 80009ae:	e7eb      	b.n	8000988 <_malloc_r+0xa8>
 80009b0:	4623      	mov	r3, r4
 80009b2:	6864      	ldr	r4, [r4, #4]
 80009b4:	e7ae      	b.n	8000914 <_malloc_r+0x34>
 80009b6:	463c      	mov	r4, r7
 80009b8:	687f      	ldr	r7, [r7, #4]
 80009ba:	e7b6      	b.n	800092a <_malloc_r+0x4a>
 80009bc:	461a      	mov	r2, r3
 80009be:	685b      	ldr	r3, [r3, #4]
 80009c0:	42a3      	cmp	r3, r4
 80009c2:	d1fb      	bne.n	80009bc <_malloc_r+0xdc>
 80009c4:	2300      	movs	r3, #0
 80009c6:	6053      	str	r3, [r2, #4]
 80009c8:	e7de      	b.n	8000988 <_malloc_r+0xa8>
 80009ca:	230c      	movs	r3, #12
 80009cc:	4630      	mov	r0, r6
 80009ce:	6033      	str	r3, [r6, #0]
 80009d0:	f000 f80c 	bl	80009ec <__malloc_unlock>
 80009d4:	e794      	b.n	8000900 <_malloc_r+0x20>
 80009d6:	6005      	str	r5, [r0, #0]
 80009d8:	e7d6      	b.n	8000988 <_malloc_r+0xa8>
 80009da:	bf00      	nop
 80009dc:	200001c4 	.word	0x200001c4

080009e0 <__malloc_lock>:
 80009e0:	4801      	ldr	r0, [pc, #4]	@ (80009e8 <__malloc_lock+0x8>)
 80009e2:	f7ff bf0e 	b.w	8000802 <__retarget_lock_acquire_recursive>
 80009e6:	bf00      	nop
 80009e8:	200001bc 	.word	0x200001bc

080009ec <__malloc_unlock>:
 80009ec:	4801      	ldr	r0, [pc, #4]	@ (80009f4 <__malloc_unlock+0x8>)
 80009ee:	f7ff bf09 	b.w	8000804 <__retarget_lock_release_recursive>
 80009f2:	bf00      	nop
 80009f4:	200001bc 	.word	0x200001bc

080009f8 <__sfputc_r>:
 80009f8:	6893      	ldr	r3, [r2, #8]
 80009fa:	3b01      	subs	r3, #1
 80009fc:	2b00      	cmp	r3, #0
 80009fe:	b410      	push	{r4}
 8000a00:	6093      	str	r3, [r2, #8]
 8000a02:	da07      	bge.n	8000a14 <__sfputc_r+0x1c>
 8000a04:	6994      	ldr	r4, [r2, #24]
 8000a06:	42a3      	cmp	r3, r4
 8000a08:	db01      	blt.n	8000a0e <__sfputc_r+0x16>
 8000a0a:	290a      	cmp	r1, #10
 8000a0c:	d102      	bne.n	8000a14 <__sfputc_r+0x1c>
 8000a0e:	bc10      	pop	{r4}
 8000a10:	f000 bb6a 	b.w	80010e8 <__swbuf_r>
 8000a14:	6813      	ldr	r3, [r2, #0]
 8000a16:	1c58      	adds	r0, r3, #1
 8000a18:	6010      	str	r0, [r2, #0]
 8000a1a:	4608      	mov	r0, r1
 8000a1c:	7019      	strb	r1, [r3, #0]
 8000a1e:	bc10      	pop	{r4}
 8000a20:	4770      	bx	lr

08000a22 <__sfputs_r>:
 8000a22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a24:	4606      	mov	r6, r0
 8000a26:	460f      	mov	r7, r1
 8000a28:	4614      	mov	r4, r2
 8000a2a:	18d5      	adds	r5, r2, r3
 8000a2c:	42ac      	cmp	r4, r5
 8000a2e:	d101      	bne.n	8000a34 <__sfputs_r+0x12>
 8000a30:	2000      	movs	r0, #0
 8000a32:	e007      	b.n	8000a44 <__sfputs_r+0x22>
 8000a34:	463a      	mov	r2, r7
 8000a36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a3a:	4630      	mov	r0, r6
 8000a3c:	f7ff ffdc 	bl	80009f8 <__sfputc_r>
 8000a40:	1c43      	adds	r3, r0, #1
 8000a42:	d1f3      	bne.n	8000a2c <__sfputs_r+0xa>
 8000a44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a48 <_vfiprintf_r>:
 8000a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a4c:	460d      	mov	r5, r1
 8000a4e:	b09d      	sub	sp, #116	@ 0x74
 8000a50:	4614      	mov	r4, r2
 8000a52:	4698      	mov	r8, r3
 8000a54:	4606      	mov	r6, r0
 8000a56:	b118      	cbz	r0, 8000a60 <_vfiprintf_r+0x18>
 8000a58:	6a03      	ldr	r3, [r0, #32]
 8000a5a:	b90b      	cbnz	r3, 8000a60 <_vfiprintf_r+0x18>
 8000a5c:	f7ff fdcc 	bl	80005f8 <__sinit>
 8000a60:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a62:	07d9      	lsls	r1, r3, #31
 8000a64:	d405      	bmi.n	8000a72 <_vfiprintf_r+0x2a>
 8000a66:	89ab      	ldrh	r3, [r5, #12]
 8000a68:	059a      	lsls	r2, r3, #22
 8000a6a:	d402      	bmi.n	8000a72 <_vfiprintf_r+0x2a>
 8000a6c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a6e:	f7ff fec8 	bl	8000802 <__retarget_lock_acquire_recursive>
 8000a72:	89ab      	ldrh	r3, [r5, #12]
 8000a74:	071b      	lsls	r3, r3, #28
 8000a76:	d501      	bpl.n	8000a7c <_vfiprintf_r+0x34>
 8000a78:	692b      	ldr	r3, [r5, #16]
 8000a7a:	b99b      	cbnz	r3, 8000aa4 <_vfiprintf_r+0x5c>
 8000a7c:	4629      	mov	r1, r5
 8000a7e:	4630      	mov	r0, r6
 8000a80:	f000 fb70 	bl	8001164 <__swsetup_r>
 8000a84:	b170      	cbz	r0, 8000aa4 <_vfiprintf_r+0x5c>
 8000a86:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a88:	07dc      	lsls	r4, r3, #31
 8000a8a:	d504      	bpl.n	8000a96 <_vfiprintf_r+0x4e>
 8000a8c:	f04f 30ff 	mov.w	r0, #4294967295
 8000a90:	b01d      	add	sp, #116	@ 0x74
 8000a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a96:	89ab      	ldrh	r3, [r5, #12]
 8000a98:	0598      	lsls	r0, r3, #22
 8000a9a:	d4f7      	bmi.n	8000a8c <_vfiprintf_r+0x44>
 8000a9c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a9e:	f7ff feb1 	bl	8000804 <__retarget_lock_release_recursive>
 8000aa2:	e7f3      	b.n	8000a8c <_vfiprintf_r+0x44>
 8000aa4:	2300      	movs	r3, #0
 8000aa6:	f8cd 800c 	str.w	r8, [sp, #12]
 8000aaa:	f04f 0901 	mov.w	r9, #1
 8000aae:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8000c64 <_vfiprintf_r+0x21c>
 8000ab2:	9309      	str	r3, [sp, #36]	@ 0x24
 8000ab4:	2320      	movs	r3, #32
 8000ab6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000aba:	2330      	movs	r3, #48	@ 0x30
 8000abc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000ac0:	4623      	mov	r3, r4
 8000ac2:	469a      	mov	sl, r3
 8000ac4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ac8:	b10a      	cbz	r2, 8000ace <_vfiprintf_r+0x86>
 8000aca:	2a25      	cmp	r2, #37	@ 0x25
 8000acc:	d1f9      	bne.n	8000ac2 <_vfiprintf_r+0x7a>
 8000ace:	ebba 0b04 	subs.w	fp, sl, r4
 8000ad2:	d00b      	beq.n	8000aec <_vfiprintf_r+0xa4>
 8000ad4:	465b      	mov	r3, fp
 8000ad6:	4622      	mov	r2, r4
 8000ad8:	4629      	mov	r1, r5
 8000ada:	4630      	mov	r0, r6
 8000adc:	f7ff ffa1 	bl	8000a22 <__sfputs_r>
 8000ae0:	3001      	adds	r0, #1
 8000ae2:	f000 80a7 	beq.w	8000c34 <_vfiprintf_r+0x1ec>
 8000ae6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000ae8:	445a      	add	r2, fp
 8000aea:	9209      	str	r2, [sp, #36]	@ 0x24
 8000aec:	f89a 3000 	ldrb.w	r3, [sl]
 8000af0:	2b00      	cmp	r3, #0
 8000af2:	f000 809f 	beq.w	8000c34 <_vfiprintf_r+0x1ec>
 8000af6:	2300      	movs	r3, #0
 8000af8:	f04f 32ff 	mov.w	r2, #4294967295
 8000afc:	f10a 0a01 	add.w	sl, sl, #1
 8000b00:	9304      	str	r3, [sp, #16]
 8000b02:	9307      	str	r3, [sp, #28]
 8000b04:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000b08:	931a      	str	r3, [sp, #104]	@ 0x68
 8000b0a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b0e:	4654      	mov	r4, sl
 8000b10:	2205      	movs	r2, #5
 8000b12:	4854      	ldr	r0, [pc, #336]	@ (8000c64 <_vfiprintf_r+0x21c>)
 8000b14:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b18:	f000 fb8a 	bl	8001230 <memchr>
 8000b1c:	9a04      	ldr	r2, [sp, #16]
 8000b1e:	b9d8      	cbnz	r0, 8000b58 <_vfiprintf_r+0x110>
 8000b20:	06d1      	lsls	r1, r2, #27
 8000b22:	bf44      	itt	mi
 8000b24:	2320      	movmi	r3, #32
 8000b26:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000b2a:	0713      	lsls	r3, r2, #28
 8000b2c:	bf44      	itt	mi
 8000b2e:	232b      	movmi	r3, #43	@ 0x2b
 8000b30:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000b34:	f89a 3000 	ldrb.w	r3, [sl]
 8000b38:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b3a:	d015      	beq.n	8000b68 <_vfiprintf_r+0x120>
 8000b3c:	9a07      	ldr	r2, [sp, #28]
 8000b3e:	4654      	mov	r4, sl
 8000b40:	2000      	movs	r0, #0
 8000b42:	f04f 0c0a 	mov.w	ip, #10
 8000b46:	4621      	mov	r1, r4
 8000b48:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b4c:	3b30      	subs	r3, #48	@ 0x30
 8000b4e:	2b09      	cmp	r3, #9
 8000b50:	d94b      	bls.n	8000bea <_vfiprintf_r+0x1a2>
 8000b52:	b1b0      	cbz	r0, 8000b82 <_vfiprintf_r+0x13a>
 8000b54:	9207      	str	r2, [sp, #28]
 8000b56:	e014      	b.n	8000b82 <_vfiprintf_r+0x13a>
 8000b58:	eba0 0308 	sub.w	r3, r0, r8
 8000b5c:	46a2      	mov	sl, r4
 8000b5e:	fa09 f303 	lsl.w	r3, r9, r3
 8000b62:	4313      	orrs	r3, r2
 8000b64:	9304      	str	r3, [sp, #16]
 8000b66:	e7d2      	b.n	8000b0e <_vfiprintf_r+0xc6>
 8000b68:	9b03      	ldr	r3, [sp, #12]
 8000b6a:	1d19      	adds	r1, r3, #4
 8000b6c:	681b      	ldr	r3, [r3, #0]
 8000b6e:	2b00      	cmp	r3, #0
 8000b70:	9103      	str	r1, [sp, #12]
 8000b72:	bfbb      	ittet	lt
 8000b74:	425b      	neglt	r3, r3
 8000b76:	f042 0202 	orrlt.w	r2, r2, #2
 8000b7a:	9307      	strge	r3, [sp, #28]
 8000b7c:	9307      	strlt	r3, [sp, #28]
 8000b7e:	bfb8      	it	lt
 8000b80:	9204      	strlt	r2, [sp, #16]
 8000b82:	7823      	ldrb	r3, [r4, #0]
 8000b84:	2b2e      	cmp	r3, #46	@ 0x2e
 8000b86:	d10a      	bne.n	8000b9e <_vfiprintf_r+0x156>
 8000b88:	7863      	ldrb	r3, [r4, #1]
 8000b8a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b8c:	d132      	bne.n	8000bf4 <_vfiprintf_r+0x1ac>
 8000b8e:	9b03      	ldr	r3, [sp, #12]
 8000b90:	3402      	adds	r4, #2
 8000b92:	1d1a      	adds	r2, r3, #4
 8000b94:	681b      	ldr	r3, [r3, #0]
 8000b96:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000b9a:	9203      	str	r2, [sp, #12]
 8000b9c:	9305      	str	r3, [sp, #20]
 8000b9e:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000c68 <_vfiprintf_r+0x220>
 8000ba2:	2203      	movs	r2, #3
 8000ba4:	7821      	ldrb	r1, [r4, #0]
 8000ba6:	4650      	mov	r0, sl
 8000ba8:	f000 fb42 	bl	8001230 <memchr>
 8000bac:	b138      	cbz	r0, 8000bbe <_vfiprintf_r+0x176>
 8000bae:	eba0 000a 	sub.w	r0, r0, sl
 8000bb2:	2240      	movs	r2, #64	@ 0x40
 8000bb4:	9b04      	ldr	r3, [sp, #16]
 8000bb6:	3401      	adds	r4, #1
 8000bb8:	4082      	lsls	r2, r0
 8000bba:	4313      	orrs	r3, r2
 8000bbc:	9304      	str	r3, [sp, #16]
 8000bbe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bc2:	2206      	movs	r2, #6
 8000bc4:	4829      	ldr	r0, [pc, #164]	@ (8000c6c <_vfiprintf_r+0x224>)
 8000bc6:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000bca:	f000 fb31 	bl	8001230 <memchr>
 8000bce:	2800      	cmp	r0, #0
 8000bd0:	d03f      	beq.n	8000c52 <_vfiprintf_r+0x20a>
 8000bd2:	4b27      	ldr	r3, [pc, #156]	@ (8000c70 <_vfiprintf_r+0x228>)
 8000bd4:	bb1b      	cbnz	r3, 8000c1e <_vfiprintf_r+0x1d6>
 8000bd6:	9b03      	ldr	r3, [sp, #12]
 8000bd8:	3307      	adds	r3, #7
 8000bda:	f023 0307 	bic.w	r3, r3, #7
 8000bde:	3308      	adds	r3, #8
 8000be0:	9303      	str	r3, [sp, #12]
 8000be2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000be4:	443b      	add	r3, r7
 8000be6:	9309      	str	r3, [sp, #36]	@ 0x24
 8000be8:	e76a      	b.n	8000ac0 <_vfiprintf_r+0x78>
 8000bea:	fb0c 3202 	mla	r2, ip, r2, r3
 8000bee:	460c      	mov	r4, r1
 8000bf0:	2001      	movs	r0, #1
 8000bf2:	e7a8      	b.n	8000b46 <_vfiprintf_r+0xfe>
 8000bf4:	2300      	movs	r3, #0
 8000bf6:	3401      	adds	r4, #1
 8000bf8:	f04f 0c0a 	mov.w	ip, #10
 8000bfc:	4619      	mov	r1, r3
 8000bfe:	9305      	str	r3, [sp, #20]
 8000c00:	4620      	mov	r0, r4
 8000c02:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c06:	3a30      	subs	r2, #48	@ 0x30
 8000c08:	2a09      	cmp	r2, #9
 8000c0a:	d903      	bls.n	8000c14 <_vfiprintf_r+0x1cc>
 8000c0c:	2b00      	cmp	r3, #0
 8000c0e:	d0c6      	beq.n	8000b9e <_vfiprintf_r+0x156>
 8000c10:	9105      	str	r1, [sp, #20]
 8000c12:	e7c4      	b.n	8000b9e <_vfiprintf_r+0x156>
 8000c14:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c18:	4604      	mov	r4, r0
 8000c1a:	2301      	movs	r3, #1
 8000c1c:	e7f0      	b.n	8000c00 <_vfiprintf_r+0x1b8>
 8000c1e:	ab03      	add	r3, sp, #12
 8000c20:	462a      	mov	r2, r5
 8000c22:	a904      	add	r1, sp, #16
 8000c24:	4630      	mov	r0, r6
 8000c26:	9300      	str	r3, [sp, #0]
 8000c28:	4b12      	ldr	r3, [pc, #72]	@ (8000c74 <_vfiprintf_r+0x22c>)
 8000c2a:	f3af 8000 	nop.w
 8000c2e:	4607      	mov	r7, r0
 8000c30:	1c78      	adds	r0, r7, #1
 8000c32:	d1d6      	bne.n	8000be2 <_vfiprintf_r+0x19a>
 8000c34:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c36:	07d9      	lsls	r1, r3, #31
 8000c38:	d405      	bmi.n	8000c46 <_vfiprintf_r+0x1fe>
 8000c3a:	89ab      	ldrh	r3, [r5, #12]
 8000c3c:	059a      	lsls	r2, r3, #22
 8000c3e:	d402      	bmi.n	8000c46 <_vfiprintf_r+0x1fe>
 8000c40:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c42:	f7ff fddf 	bl	8000804 <__retarget_lock_release_recursive>
 8000c46:	89ab      	ldrh	r3, [r5, #12]
 8000c48:	065b      	lsls	r3, r3, #25
 8000c4a:	f53f af1f 	bmi.w	8000a8c <_vfiprintf_r+0x44>
 8000c4e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000c50:	e71e      	b.n	8000a90 <_vfiprintf_r+0x48>
 8000c52:	ab03      	add	r3, sp, #12
 8000c54:	462a      	mov	r2, r5
 8000c56:	a904      	add	r1, sp, #16
 8000c58:	4630      	mov	r0, r6
 8000c5a:	9300      	str	r3, [sp, #0]
 8000c5c:	4b05      	ldr	r3, [pc, #20]	@ (8000c74 <_vfiprintf_r+0x22c>)
 8000c5e:	f000 f87d 	bl	8000d5c <_printf_i>
 8000c62:	e7e4      	b.n	8000c2e <_vfiprintf_r+0x1e6>
 8000c64:	0800142c 	.word	0x0800142c
 8000c68:	08001432 	.word	0x08001432
 8000c6c:	08001436 	.word	0x08001436
 8000c70:	00000000 	.word	0x00000000
 8000c74:	08000a23 	.word	0x08000a23

08000c78 <_printf_common>:
 8000c78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c7c:	4616      	mov	r6, r2
 8000c7e:	4698      	mov	r8, r3
 8000c80:	688a      	ldr	r2, [r1, #8]
 8000c82:	4607      	mov	r7, r0
 8000c84:	690b      	ldr	r3, [r1, #16]
 8000c86:	460c      	mov	r4, r1
 8000c88:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000c8c:	4293      	cmp	r3, r2
 8000c8e:	bfb8      	it	lt
 8000c90:	4613      	movlt	r3, r2
 8000c92:	6033      	str	r3, [r6, #0]
 8000c94:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000c98:	b10a      	cbz	r2, 8000c9e <_printf_common+0x26>
 8000c9a:	3301      	adds	r3, #1
 8000c9c:	6033      	str	r3, [r6, #0]
 8000c9e:	6823      	ldr	r3, [r4, #0]
 8000ca0:	0699      	lsls	r1, r3, #26
 8000ca2:	bf42      	ittt	mi
 8000ca4:	6833      	ldrmi	r3, [r6, #0]
 8000ca6:	3302      	addmi	r3, #2
 8000ca8:	6033      	strmi	r3, [r6, #0]
 8000caa:	6825      	ldr	r5, [r4, #0]
 8000cac:	f015 0506 	ands.w	r5, r5, #6
 8000cb0:	d106      	bne.n	8000cc0 <_printf_common+0x48>
 8000cb2:	f104 0a19 	add.w	sl, r4, #25
 8000cb6:	68e3      	ldr	r3, [r4, #12]
 8000cb8:	6832      	ldr	r2, [r6, #0]
 8000cba:	1a9b      	subs	r3, r3, r2
 8000cbc:	42ab      	cmp	r3, r5
 8000cbe:	dc2b      	bgt.n	8000d18 <_printf_common+0xa0>
 8000cc0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000cc4:	6822      	ldr	r2, [r4, #0]
 8000cc6:	3b00      	subs	r3, #0
 8000cc8:	bf18      	it	ne
 8000cca:	2301      	movne	r3, #1
 8000ccc:	0692      	lsls	r2, r2, #26
 8000cce:	d430      	bmi.n	8000d32 <_printf_common+0xba>
 8000cd0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000cd4:	4641      	mov	r1, r8
 8000cd6:	4638      	mov	r0, r7
 8000cd8:	47c8      	blx	r9
 8000cda:	3001      	adds	r0, #1
 8000cdc:	d023      	beq.n	8000d26 <_printf_common+0xae>
 8000cde:	6823      	ldr	r3, [r4, #0]
 8000ce0:	341a      	adds	r4, #26
 8000ce2:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8000ce6:	f003 0306 	and.w	r3, r3, #6
 8000cea:	2b04      	cmp	r3, #4
 8000cec:	bf0a      	itet	eq
 8000cee:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 8000cf2:	2500      	movne	r5, #0
 8000cf4:	6833      	ldreq	r3, [r6, #0]
 8000cf6:	f04f 0600 	mov.w	r6, #0
 8000cfa:	bf08      	it	eq
 8000cfc:	1aed      	subeq	r5, r5, r3
 8000cfe:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000d02:	bf08      	it	eq
 8000d04:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d08:	4293      	cmp	r3, r2
 8000d0a:	bfc4      	itt	gt
 8000d0c:	1a9b      	subgt	r3, r3, r2
 8000d0e:	18ed      	addgt	r5, r5, r3
 8000d10:	42b5      	cmp	r5, r6
 8000d12:	d11a      	bne.n	8000d4a <_printf_common+0xd2>
 8000d14:	2000      	movs	r0, #0
 8000d16:	e008      	b.n	8000d2a <_printf_common+0xb2>
 8000d18:	2301      	movs	r3, #1
 8000d1a:	4652      	mov	r2, sl
 8000d1c:	4641      	mov	r1, r8
 8000d1e:	4638      	mov	r0, r7
 8000d20:	47c8      	blx	r9
 8000d22:	3001      	adds	r0, #1
 8000d24:	d103      	bne.n	8000d2e <_printf_common+0xb6>
 8000d26:	f04f 30ff 	mov.w	r0, #4294967295
 8000d2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d2e:	3501      	adds	r5, #1
 8000d30:	e7c1      	b.n	8000cb6 <_printf_common+0x3e>
 8000d32:	18e1      	adds	r1, r4, r3
 8000d34:	1c5a      	adds	r2, r3, #1
 8000d36:	2030      	movs	r0, #48	@ 0x30
 8000d38:	3302      	adds	r3, #2
 8000d3a:	4422      	add	r2, r4
 8000d3c:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000d40:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000d44:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000d48:	e7c2      	b.n	8000cd0 <_printf_common+0x58>
 8000d4a:	2301      	movs	r3, #1
 8000d4c:	4622      	mov	r2, r4
 8000d4e:	4641      	mov	r1, r8
 8000d50:	4638      	mov	r0, r7
 8000d52:	47c8      	blx	r9
 8000d54:	3001      	adds	r0, #1
 8000d56:	d0e6      	beq.n	8000d26 <_printf_common+0xae>
 8000d58:	3601      	adds	r6, #1
 8000d5a:	e7d9      	b.n	8000d10 <_printf_common+0x98>

08000d5c <_printf_i>:
 8000d5c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d60:	7e0f      	ldrb	r7, [r1, #24]
 8000d62:	4691      	mov	r9, r2
 8000d64:	4680      	mov	r8, r0
 8000d66:	460c      	mov	r4, r1
 8000d68:	2f78      	cmp	r7, #120	@ 0x78
 8000d6a:	469a      	mov	sl, r3
 8000d6c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000d6e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000d72:	d807      	bhi.n	8000d84 <_printf_i+0x28>
 8000d74:	2f62      	cmp	r7, #98	@ 0x62
 8000d76:	d80a      	bhi.n	8000d8e <_printf_i+0x32>
 8000d78:	2f00      	cmp	r7, #0
 8000d7a:	f000 80d1 	beq.w	8000f20 <_printf_i+0x1c4>
 8000d7e:	2f58      	cmp	r7, #88	@ 0x58
 8000d80:	f000 80b8 	beq.w	8000ef4 <_printf_i+0x198>
 8000d84:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000d88:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000d8c:	e03a      	b.n	8000e04 <_printf_i+0xa8>
 8000d8e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000d92:	2b15      	cmp	r3, #21
 8000d94:	d8f6      	bhi.n	8000d84 <_printf_i+0x28>
 8000d96:	a101      	add	r1, pc, #4	@ (adr r1, 8000d9c <_printf_i+0x40>)
 8000d98:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d9c:	08000df5 	.word	0x08000df5
 8000da0:	08000e09 	.word	0x08000e09
 8000da4:	08000d85 	.word	0x08000d85
 8000da8:	08000d85 	.word	0x08000d85
 8000dac:	08000d85 	.word	0x08000d85
 8000db0:	08000d85 	.word	0x08000d85
 8000db4:	08000e09 	.word	0x08000e09
 8000db8:	08000d85 	.word	0x08000d85
 8000dbc:	08000d85 	.word	0x08000d85
 8000dc0:	08000d85 	.word	0x08000d85
 8000dc4:	08000d85 	.word	0x08000d85
 8000dc8:	08000f07 	.word	0x08000f07
 8000dcc:	08000e33 	.word	0x08000e33
 8000dd0:	08000ec1 	.word	0x08000ec1
 8000dd4:	08000d85 	.word	0x08000d85
 8000dd8:	08000d85 	.word	0x08000d85
 8000ddc:	08000f29 	.word	0x08000f29
 8000de0:	08000d85 	.word	0x08000d85
 8000de4:	08000e33 	.word	0x08000e33
 8000de8:	08000d85 	.word	0x08000d85
 8000dec:	08000d85 	.word	0x08000d85
 8000df0:	08000ec9 	.word	0x08000ec9
 8000df4:	6833      	ldr	r3, [r6, #0]
 8000df6:	1d1a      	adds	r2, r3, #4
 8000df8:	681b      	ldr	r3, [r3, #0]
 8000dfa:	6032      	str	r2, [r6, #0]
 8000dfc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000e00:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000e04:	2301      	movs	r3, #1
 8000e06:	e09c      	b.n	8000f42 <_printf_i+0x1e6>
 8000e08:	6833      	ldr	r3, [r6, #0]
 8000e0a:	6820      	ldr	r0, [r4, #0]
 8000e0c:	1d19      	adds	r1, r3, #4
 8000e0e:	6031      	str	r1, [r6, #0]
 8000e10:	0606      	lsls	r6, r0, #24
 8000e12:	d501      	bpl.n	8000e18 <_printf_i+0xbc>
 8000e14:	681d      	ldr	r5, [r3, #0]
 8000e16:	e003      	b.n	8000e20 <_printf_i+0xc4>
 8000e18:	0645      	lsls	r5, r0, #25
 8000e1a:	d5fb      	bpl.n	8000e14 <_printf_i+0xb8>
 8000e1c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000e20:	2d00      	cmp	r5, #0
 8000e22:	da03      	bge.n	8000e2c <_printf_i+0xd0>
 8000e24:	232d      	movs	r3, #45	@ 0x2d
 8000e26:	426d      	negs	r5, r5
 8000e28:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e2c:	4858      	ldr	r0, [pc, #352]	@ (8000f90 <_printf_i+0x234>)
 8000e2e:	230a      	movs	r3, #10
 8000e30:	e011      	b.n	8000e56 <_printf_i+0xfa>
 8000e32:	6821      	ldr	r1, [r4, #0]
 8000e34:	6833      	ldr	r3, [r6, #0]
 8000e36:	0608      	lsls	r0, r1, #24
 8000e38:	f853 5b04 	ldr.w	r5, [r3], #4
 8000e3c:	d402      	bmi.n	8000e44 <_printf_i+0xe8>
 8000e3e:	0649      	lsls	r1, r1, #25
 8000e40:	bf48      	it	mi
 8000e42:	b2ad      	uxthmi	r5, r5
 8000e44:	2f6f      	cmp	r7, #111	@ 0x6f
 8000e46:	6033      	str	r3, [r6, #0]
 8000e48:	4851      	ldr	r0, [pc, #324]	@ (8000f90 <_printf_i+0x234>)
 8000e4a:	bf14      	ite	ne
 8000e4c:	230a      	movne	r3, #10
 8000e4e:	2308      	moveq	r3, #8
 8000e50:	2100      	movs	r1, #0
 8000e52:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000e56:	6866      	ldr	r6, [r4, #4]
 8000e58:	2e00      	cmp	r6, #0
 8000e5a:	60a6      	str	r6, [r4, #8]
 8000e5c:	db05      	blt.n	8000e6a <_printf_i+0x10e>
 8000e5e:	6821      	ldr	r1, [r4, #0]
 8000e60:	432e      	orrs	r6, r5
 8000e62:	f021 0104 	bic.w	r1, r1, #4
 8000e66:	6021      	str	r1, [r4, #0]
 8000e68:	d04b      	beq.n	8000f02 <_printf_i+0x1a6>
 8000e6a:	4616      	mov	r6, r2
 8000e6c:	fbb5 f1f3 	udiv	r1, r5, r3
 8000e70:	fb03 5711 	mls	r7, r3, r1, r5
 8000e74:	5dc7      	ldrb	r7, [r0, r7]
 8000e76:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000e7a:	462f      	mov	r7, r5
 8000e7c:	460d      	mov	r5, r1
 8000e7e:	42bb      	cmp	r3, r7
 8000e80:	d9f4      	bls.n	8000e6c <_printf_i+0x110>
 8000e82:	2b08      	cmp	r3, #8
 8000e84:	d10b      	bne.n	8000e9e <_printf_i+0x142>
 8000e86:	6823      	ldr	r3, [r4, #0]
 8000e88:	07df      	lsls	r7, r3, #31
 8000e8a:	d508      	bpl.n	8000e9e <_printf_i+0x142>
 8000e8c:	6923      	ldr	r3, [r4, #16]
 8000e8e:	6861      	ldr	r1, [r4, #4]
 8000e90:	4299      	cmp	r1, r3
 8000e92:	bfde      	ittt	le
 8000e94:	2330      	movle	r3, #48	@ 0x30
 8000e96:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000e9a:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000e9e:	1b92      	subs	r2, r2, r6
 8000ea0:	6122      	str	r2, [r4, #16]
 8000ea2:	464b      	mov	r3, r9
 8000ea4:	aa03      	add	r2, sp, #12
 8000ea6:	4621      	mov	r1, r4
 8000ea8:	4640      	mov	r0, r8
 8000eaa:	f8cd a000 	str.w	sl, [sp]
 8000eae:	f7ff fee3 	bl	8000c78 <_printf_common>
 8000eb2:	3001      	adds	r0, #1
 8000eb4:	d14a      	bne.n	8000f4c <_printf_i+0x1f0>
 8000eb6:	f04f 30ff 	mov.w	r0, #4294967295
 8000eba:	b004      	add	sp, #16
 8000ebc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ec0:	6823      	ldr	r3, [r4, #0]
 8000ec2:	f043 0320 	orr.w	r3, r3, #32
 8000ec6:	6023      	str	r3, [r4, #0]
 8000ec8:	2778      	movs	r7, #120	@ 0x78
 8000eca:	4832      	ldr	r0, [pc, #200]	@ (8000f94 <_printf_i+0x238>)
 8000ecc:	6823      	ldr	r3, [r4, #0]
 8000ece:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000ed2:	061f      	lsls	r7, r3, #24
 8000ed4:	6831      	ldr	r1, [r6, #0]
 8000ed6:	f851 5b04 	ldr.w	r5, [r1], #4
 8000eda:	d402      	bmi.n	8000ee2 <_printf_i+0x186>
 8000edc:	065f      	lsls	r7, r3, #25
 8000ede:	bf48      	it	mi
 8000ee0:	b2ad      	uxthmi	r5, r5
 8000ee2:	6031      	str	r1, [r6, #0]
 8000ee4:	07d9      	lsls	r1, r3, #31
 8000ee6:	bf44      	itt	mi
 8000ee8:	f043 0320 	orrmi.w	r3, r3, #32
 8000eec:	6023      	strmi	r3, [r4, #0]
 8000eee:	b11d      	cbz	r5, 8000ef8 <_printf_i+0x19c>
 8000ef0:	2310      	movs	r3, #16
 8000ef2:	e7ad      	b.n	8000e50 <_printf_i+0xf4>
 8000ef4:	4826      	ldr	r0, [pc, #152]	@ (8000f90 <_printf_i+0x234>)
 8000ef6:	e7e9      	b.n	8000ecc <_printf_i+0x170>
 8000ef8:	6823      	ldr	r3, [r4, #0]
 8000efa:	f023 0320 	bic.w	r3, r3, #32
 8000efe:	6023      	str	r3, [r4, #0]
 8000f00:	e7f6      	b.n	8000ef0 <_printf_i+0x194>
 8000f02:	4616      	mov	r6, r2
 8000f04:	e7bd      	b.n	8000e82 <_printf_i+0x126>
 8000f06:	6833      	ldr	r3, [r6, #0]
 8000f08:	6825      	ldr	r5, [r4, #0]
 8000f0a:	1d18      	adds	r0, r3, #4
 8000f0c:	6961      	ldr	r1, [r4, #20]
 8000f0e:	6030      	str	r0, [r6, #0]
 8000f10:	062e      	lsls	r6, r5, #24
 8000f12:	681b      	ldr	r3, [r3, #0]
 8000f14:	d501      	bpl.n	8000f1a <_printf_i+0x1be>
 8000f16:	6019      	str	r1, [r3, #0]
 8000f18:	e002      	b.n	8000f20 <_printf_i+0x1c4>
 8000f1a:	0668      	lsls	r0, r5, #25
 8000f1c:	d5fb      	bpl.n	8000f16 <_printf_i+0x1ba>
 8000f1e:	8019      	strh	r1, [r3, #0]
 8000f20:	2300      	movs	r3, #0
 8000f22:	4616      	mov	r6, r2
 8000f24:	6123      	str	r3, [r4, #16]
 8000f26:	e7bc      	b.n	8000ea2 <_printf_i+0x146>
 8000f28:	6833      	ldr	r3, [r6, #0]
 8000f2a:	2100      	movs	r1, #0
 8000f2c:	1d1a      	adds	r2, r3, #4
 8000f2e:	6032      	str	r2, [r6, #0]
 8000f30:	681e      	ldr	r6, [r3, #0]
 8000f32:	6862      	ldr	r2, [r4, #4]
 8000f34:	4630      	mov	r0, r6
 8000f36:	f000 f97b 	bl	8001230 <memchr>
 8000f3a:	b108      	cbz	r0, 8000f40 <_printf_i+0x1e4>
 8000f3c:	1b80      	subs	r0, r0, r6
 8000f3e:	6060      	str	r0, [r4, #4]
 8000f40:	6863      	ldr	r3, [r4, #4]
 8000f42:	6123      	str	r3, [r4, #16]
 8000f44:	2300      	movs	r3, #0
 8000f46:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000f4a:	e7aa      	b.n	8000ea2 <_printf_i+0x146>
 8000f4c:	6923      	ldr	r3, [r4, #16]
 8000f4e:	4632      	mov	r2, r6
 8000f50:	4649      	mov	r1, r9
 8000f52:	4640      	mov	r0, r8
 8000f54:	47d0      	blx	sl
 8000f56:	3001      	adds	r0, #1
 8000f58:	d0ad      	beq.n	8000eb6 <_printf_i+0x15a>
 8000f5a:	6823      	ldr	r3, [r4, #0]
 8000f5c:	079b      	lsls	r3, r3, #30
 8000f5e:	d413      	bmi.n	8000f88 <_printf_i+0x22c>
 8000f60:	68e0      	ldr	r0, [r4, #12]
 8000f62:	9b03      	ldr	r3, [sp, #12]
 8000f64:	4298      	cmp	r0, r3
 8000f66:	bfb8      	it	lt
 8000f68:	4618      	movlt	r0, r3
 8000f6a:	e7a6      	b.n	8000eba <_printf_i+0x15e>
 8000f6c:	2301      	movs	r3, #1
 8000f6e:	4632      	mov	r2, r6
 8000f70:	4649      	mov	r1, r9
 8000f72:	4640      	mov	r0, r8
 8000f74:	47d0      	blx	sl
 8000f76:	3001      	adds	r0, #1
 8000f78:	d09d      	beq.n	8000eb6 <_printf_i+0x15a>
 8000f7a:	3501      	adds	r5, #1
 8000f7c:	68e3      	ldr	r3, [r4, #12]
 8000f7e:	9903      	ldr	r1, [sp, #12]
 8000f80:	1a5b      	subs	r3, r3, r1
 8000f82:	42ab      	cmp	r3, r5
 8000f84:	dcf2      	bgt.n	8000f6c <_printf_i+0x210>
 8000f86:	e7eb      	b.n	8000f60 <_printf_i+0x204>
 8000f88:	2500      	movs	r5, #0
 8000f8a:	f104 0619 	add.w	r6, r4, #25
 8000f8e:	e7f5      	b.n	8000f7c <_printf_i+0x220>
 8000f90:	0800143d 	.word	0x0800143d
 8000f94:	0800144e 	.word	0x0800144e

08000f98 <__sflush_r>:
 8000f98:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f9e:	0716      	lsls	r6, r2, #28
 8000fa0:	4605      	mov	r5, r0
 8000fa2:	460c      	mov	r4, r1
 8000fa4:	d454      	bmi.n	8001050 <__sflush_r+0xb8>
 8000fa6:	684b      	ldr	r3, [r1, #4]
 8000fa8:	2b00      	cmp	r3, #0
 8000faa:	dc02      	bgt.n	8000fb2 <__sflush_r+0x1a>
 8000fac:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000fae:	2b00      	cmp	r3, #0
 8000fb0:	dd48      	ble.n	8001044 <__sflush_r+0xac>
 8000fb2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000fb4:	2e00      	cmp	r6, #0
 8000fb6:	d045      	beq.n	8001044 <__sflush_r+0xac>
 8000fb8:	2300      	movs	r3, #0
 8000fba:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000fbe:	682f      	ldr	r7, [r5, #0]
 8000fc0:	6a21      	ldr	r1, [r4, #32]
 8000fc2:	602b      	str	r3, [r5, #0]
 8000fc4:	d030      	beq.n	8001028 <__sflush_r+0x90>
 8000fc6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000fc8:	89a3      	ldrh	r3, [r4, #12]
 8000fca:	0759      	lsls	r1, r3, #29
 8000fcc:	d505      	bpl.n	8000fda <__sflush_r+0x42>
 8000fce:	6863      	ldr	r3, [r4, #4]
 8000fd0:	1ad2      	subs	r2, r2, r3
 8000fd2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000fd4:	b10b      	cbz	r3, 8000fda <__sflush_r+0x42>
 8000fd6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000fd8:	1ad2      	subs	r2, r2, r3
 8000fda:	2300      	movs	r3, #0
 8000fdc:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000fde:	6a21      	ldr	r1, [r4, #32]
 8000fe0:	4628      	mov	r0, r5
 8000fe2:	47b0      	blx	r6
 8000fe4:	1c43      	adds	r3, r0, #1
 8000fe6:	89a3      	ldrh	r3, [r4, #12]
 8000fe8:	d106      	bne.n	8000ff8 <__sflush_r+0x60>
 8000fea:	6829      	ldr	r1, [r5, #0]
 8000fec:	291d      	cmp	r1, #29
 8000fee:	d82b      	bhi.n	8001048 <__sflush_r+0xb0>
 8000ff0:	4a28      	ldr	r2, [pc, #160]	@ (8001094 <__sflush_r+0xfc>)
 8000ff2:	40ca      	lsrs	r2, r1
 8000ff4:	07d6      	lsls	r6, r2, #31
 8000ff6:	d527      	bpl.n	8001048 <__sflush_r+0xb0>
 8000ff8:	2200      	movs	r2, #0
 8000ffa:	04d9      	lsls	r1, r3, #19
 8000ffc:	6062      	str	r2, [r4, #4]
 8000ffe:	6922      	ldr	r2, [r4, #16]
 8001000:	6022      	str	r2, [r4, #0]
 8001002:	d504      	bpl.n	800100e <__sflush_r+0x76>
 8001004:	1c42      	adds	r2, r0, #1
 8001006:	d101      	bne.n	800100c <__sflush_r+0x74>
 8001008:	682b      	ldr	r3, [r5, #0]
 800100a:	b903      	cbnz	r3, 800100e <__sflush_r+0x76>
 800100c:	6560      	str	r0, [r4, #84]	@ 0x54
 800100e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001010:	602f      	str	r7, [r5, #0]
 8001012:	b1b9      	cbz	r1, 8001044 <__sflush_r+0xac>
 8001014:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001018:	4299      	cmp	r1, r3
 800101a:	d002      	beq.n	8001022 <__sflush_r+0x8a>
 800101c:	4628      	mov	r0, r5
 800101e:	f7ff fbf3 	bl	8000808 <_free_r>
 8001022:	2300      	movs	r3, #0
 8001024:	6363      	str	r3, [r4, #52]	@ 0x34
 8001026:	e00d      	b.n	8001044 <__sflush_r+0xac>
 8001028:	2301      	movs	r3, #1
 800102a:	4628      	mov	r0, r5
 800102c:	47b0      	blx	r6
 800102e:	4602      	mov	r2, r0
 8001030:	1c50      	adds	r0, r2, #1
 8001032:	d1c9      	bne.n	8000fc8 <__sflush_r+0x30>
 8001034:	682b      	ldr	r3, [r5, #0]
 8001036:	2b00      	cmp	r3, #0
 8001038:	d0c6      	beq.n	8000fc8 <__sflush_r+0x30>
 800103a:	2b1d      	cmp	r3, #29
 800103c:	d001      	beq.n	8001042 <__sflush_r+0xaa>
 800103e:	2b16      	cmp	r3, #22
 8001040:	d11c      	bne.n	800107c <__sflush_r+0xe4>
 8001042:	602f      	str	r7, [r5, #0]
 8001044:	2000      	movs	r0, #0
 8001046:	e020      	b.n	800108a <__sflush_r+0xf2>
 8001048:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800104c:	b21b      	sxth	r3, r3
 800104e:	e019      	b.n	8001084 <__sflush_r+0xec>
 8001050:	690f      	ldr	r7, [r1, #16]
 8001052:	2f00      	cmp	r7, #0
 8001054:	d0f6      	beq.n	8001044 <__sflush_r+0xac>
 8001056:	0793      	lsls	r3, r2, #30
 8001058:	680e      	ldr	r6, [r1, #0]
 800105a:	600f      	str	r7, [r1, #0]
 800105c:	bf0c      	ite	eq
 800105e:	694b      	ldreq	r3, [r1, #20]
 8001060:	2300      	movne	r3, #0
 8001062:	1bf6      	subs	r6, r6, r7
 8001064:	608b      	str	r3, [r1, #8]
 8001066:	2e00      	cmp	r6, #0
 8001068:	ddec      	ble.n	8001044 <__sflush_r+0xac>
 800106a:	4633      	mov	r3, r6
 800106c:	463a      	mov	r2, r7
 800106e:	6a21      	ldr	r1, [r4, #32]
 8001070:	4628      	mov	r0, r5
 8001072:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8001076:	47e0      	blx	ip
 8001078:	2800      	cmp	r0, #0
 800107a:	dc07      	bgt.n	800108c <__sflush_r+0xf4>
 800107c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001080:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001084:	f04f 30ff 	mov.w	r0, #4294967295
 8001088:	81a3      	strh	r3, [r4, #12]
 800108a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800108c:	4407      	add	r7, r0
 800108e:	1a36      	subs	r6, r6, r0
 8001090:	e7e9      	b.n	8001066 <__sflush_r+0xce>
 8001092:	bf00      	nop
 8001094:	20400001 	.word	0x20400001

08001098 <_fflush_r>:
 8001098:	b538      	push	{r3, r4, r5, lr}
 800109a:	690b      	ldr	r3, [r1, #16]
 800109c:	4605      	mov	r5, r0
 800109e:	460c      	mov	r4, r1
 80010a0:	b913      	cbnz	r3, 80010a8 <_fflush_r+0x10>
 80010a2:	2500      	movs	r5, #0
 80010a4:	4628      	mov	r0, r5
 80010a6:	bd38      	pop	{r3, r4, r5, pc}
 80010a8:	b118      	cbz	r0, 80010b2 <_fflush_r+0x1a>
 80010aa:	6a03      	ldr	r3, [r0, #32]
 80010ac:	b90b      	cbnz	r3, 80010b2 <_fflush_r+0x1a>
 80010ae:	f7ff faa3 	bl	80005f8 <__sinit>
 80010b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d0f3      	beq.n	80010a2 <_fflush_r+0xa>
 80010ba:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80010bc:	07d0      	lsls	r0, r2, #31
 80010be:	d404      	bmi.n	80010ca <_fflush_r+0x32>
 80010c0:	0599      	lsls	r1, r3, #22
 80010c2:	d402      	bmi.n	80010ca <_fflush_r+0x32>
 80010c4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80010c6:	f7ff fb9c 	bl	8000802 <__retarget_lock_acquire_recursive>
 80010ca:	4628      	mov	r0, r5
 80010cc:	4621      	mov	r1, r4
 80010ce:	f7ff ff63 	bl	8000f98 <__sflush_r>
 80010d2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80010d4:	4605      	mov	r5, r0
 80010d6:	07da      	lsls	r2, r3, #31
 80010d8:	d4e4      	bmi.n	80010a4 <_fflush_r+0xc>
 80010da:	89a3      	ldrh	r3, [r4, #12]
 80010dc:	059b      	lsls	r3, r3, #22
 80010de:	d4e1      	bmi.n	80010a4 <_fflush_r+0xc>
 80010e0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80010e2:	f7ff fb8f 	bl	8000804 <__retarget_lock_release_recursive>
 80010e6:	e7dd      	b.n	80010a4 <_fflush_r+0xc>

080010e8 <__swbuf_r>:
 80010e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ea:	460e      	mov	r6, r1
 80010ec:	4614      	mov	r4, r2
 80010ee:	4605      	mov	r5, r0
 80010f0:	b118      	cbz	r0, 80010fa <__swbuf_r+0x12>
 80010f2:	6a03      	ldr	r3, [r0, #32]
 80010f4:	b90b      	cbnz	r3, 80010fa <__swbuf_r+0x12>
 80010f6:	f7ff fa7f 	bl	80005f8 <__sinit>
 80010fa:	69a3      	ldr	r3, [r4, #24]
 80010fc:	60a3      	str	r3, [r4, #8]
 80010fe:	89a3      	ldrh	r3, [r4, #12]
 8001100:	071a      	lsls	r2, r3, #28
 8001102:	d501      	bpl.n	8001108 <__swbuf_r+0x20>
 8001104:	6923      	ldr	r3, [r4, #16]
 8001106:	b943      	cbnz	r3, 800111a <__swbuf_r+0x32>
 8001108:	4621      	mov	r1, r4
 800110a:	4628      	mov	r0, r5
 800110c:	f000 f82a 	bl	8001164 <__swsetup_r>
 8001110:	b118      	cbz	r0, 800111a <__swbuf_r+0x32>
 8001112:	f04f 37ff 	mov.w	r7, #4294967295
 8001116:	4638      	mov	r0, r7
 8001118:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800111a:	6823      	ldr	r3, [r4, #0]
 800111c:	b2f6      	uxtb	r6, r6
 800111e:	6922      	ldr	r2, [r4, #16]
 8001120:	4637      	mov	r7, r6
 8001122:	1a98      	subs	r0, r3, r2
 8001124:	6963      	ldr	r3, [r4, #20]
 8001126:	4283      	cmp	r3, r0
 8001128:	dc05      	bgt.n	8001136 <__swbuf_r+0x4e>
 800112a:	4621      	mov	r1, r4
 800112c:	4628      	mov	r0, r5
 800112e:	f7ff ffb3 	bl	8001098 <_fflush_r>
 8001132:	2800      	cmp	r0, #0
 8001134:	d1ed      	bne.n	8001112 <__swbuf_r+0x2a>
 8001136:	68a3      	ldr	r3, [r4, #8]
 8001138:	3b01      	subs	r3, #1
 800113a:	60a3      	str	r3, [r4, #8]
 800113c:	6823      	ldr	r3, [r4, #0]
 800113e:	1c5a      	adds	r2, r3, #1
 8001140:	6022      	str	r2, [r4, #0]
 8001142:	701e      	strb	r6, [r3, #0]
 8001144:	1c43      	adds	r3, r0, #1
 8001146:	6962      	ldr	r2, [r4, #20]
 8001148:	429a      	cmp	r2, r3
 800114a:	d004      	beq.n	8001156 <__swbuf_r+0x6e>
 800114c:	89a3      	ldrh	r3, [r4, #12]
 800114e:	07db      	lsls	r3, r3, #31
 8001150:	d5e1      	bpl.n	8001116 <__swbuf_r+0x2e>
 8001152:	2e0a      	cmp	r6, #10
 8001154:	d1df      	bne.n	8001116 <__swbuf_r+0x2e>
 8001156:	4621      	mov	r1, r4
 8001158:	4628      	mov	r0, r5
 800115a:	f7ff ff9d 	bl	8001098 <_fflush_r>
 800115e:	2800      	cmp	r0, #0
 8001160:	d0d9      	beq.n	8001116 <__swbuf_r+0x2e>
 8001162:	e7d6      	b.n	8001112 <__swbuf_r+0x2a>

08001164 <__swsetup_r>:
 8001164:	b538      	push	{r3, r4, r5, lr}
 8001166:	4b29      	ldr	r3, [pc, #164]	@ (800120c <__swsetup_r+0xa8>)
 8001168:	4605      	mov	r5, r0
 800116a:	460c      	mov	r4, r1
 800116c:	6818      	ldr	r0, [r3, #0]
 800116e:	b118      	cbz	r0, 8001178 <__swsetup_r+0x14>
 8001170:	6a03      	ldr	r3, [r0, #32]
 8001172:	b90b      	cbnz	r3, 8001178 <__swsetup_r+0x14>
 8001174:	f7ff fa40 	bl	80005f8 <__sinit>
 8001178:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800117c:	0719      	lsls	r1, r3, #28
 800117e:	d422      	bmi.n	80011c6 <__swsetup_r+0x62>
 8001180:	06da      	lsls	r2, r3, #27
 8001182:	d407      	bmi.n	8001194 <__swsetup_r+0x30>
 8001184:	2209      	movs	r2, #9
 8001186:	602a      	str	r2, [r5, #0]
 8001188:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800118c:	f04f 30ff 	mov.w	r0, #4294967295
 8001190:	81a3      	strh	r3, [r4, #12]
 8001192:	e033      	b.n	80011fc <__swsetup_r+0x98>
 8001194:	0758      	lsls	r0, r3, #29
 8001196:	d512      	bpl.n	80011be <__swsetup_r+0x5a>
 8001198:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800119a:	b141      	cbz	r1, 80011ae <__swsetup_r+0x4a>
 800119c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80011a0:	4299      	cmp	r1, r3
 80011a2:	d002      	beq.n	80011aa <__swsetup_r+0x46>
 80011a4:	4628      	mov	r0, r5
 80011a6:	f7ff fb2f 	bl	8000808 <_free_r>
 80011aa:	2300      	movs	r3, #0
 80011ac:	6363      	str	r3, [r4, #52]	@ 0x34
 80011ae:	89a3      	ldrh	r3, [r4, #12]
 80011b0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80011b4:	81a3      	strh	r3, [r4, #12]
 80011b6:	2300      	movs	r3, #0
 80011b8:	6063      	str	r3, [r4, #4]
 80011ba:	6923      	ldr	r3, [r4, #16]
 80011bc:	6023      	str	r3, [r4, #0]
 80011be:	89a3      	ldrh	r3, [r4, #12]
 80011c0:	f043 0308 	orr.w	r3, r3, #8
 80011c4:	81a3      	strh	r3, [r4, #12]
 80011c6:	6923      	ldr	r3, [r4, #16]
 80011c8:	b94b      	cbnz	r3, 80011de <__swsetup_r+0x7a>
 80011ca:	89a3      	ldrh	r3, [r4, #12]
 80011cc:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80011d0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80011d4:	d003      	beq.n	80011de <__swsetup_r+0x7a>
 80011d6:	4621      	mov	r1, r4
 80011d8:	4628      	mov	r0, r5
 80011da:	f000 f85c 	bl	8001296 <__smakebuf_r>
 80011de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011e2:	f013 0201 	ands.w	r2, r3, #1
 80011e6:	d00a      	beq.n	80011fe <__swsetup_r+0x9a>
 80011e8:	2200      	movs	r2, #0
 80011ea:	60a2      	str	r2, [r4, #8]
 80011ec:	6962      	ldr	r2, [r4, #20]
 80011ee:	4252      	negs	r2, r2
 80011f0:	61a2      	str	r2, [r4, #24]
 80011f2:	6922      	ldr	r2, [r4, #16]
 80011f4:	b942      	cbnz	r2, 8001208 <__swsetup_r+0xa4>
 80011f6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80011fa:	d1c5      	bne.n	8001188 <__swsetup_r+0x24>
 80011fc:	bd38      	pop	{r3, r4, r5, pc}
 80011fe:	0799      	lsls	r1, r3, #30
 8001200:	bf58      	it	pl
 8001202:	6962      	ldrpl	r2, [r4, #20]
 8001204:	60a2      	str	r2, [r4, #8]
 8001206:	e7f4      	b.n	80011f2 <__swsetup_r+0x8e>
 8001208:	2000      	movs	r0, #0
 800120a:	e7f7      	b.n	80011fc <__swsetup_r+0x98>
 800120c:	2000000c 	.word	0x2000000c

08001210 <_sbrk_r>:
 8001210:	b538      	push	{r3, r4, r5, lr}
 8001212:	2300      	movs	r3, #0
 8001214:	4d05      	ldr	r5, [pc, #20]	@ (800122c <_sbrk_r+0x1c>)
 8001216:	4604      	mov	r4, r0
 8001218:	4608      	mov	r0, r1
 800121a:	602b      	str	r3, [r5, #0]
 800121c:	f7ff f900 	bl	8000420 <_sbrk>
 8001220:	1c43      	adds	r3, r0, #1
 8001222:	d102      	bne.n	800122a <_sbrk_r+0x1a>
 8001224:	682b      	ldr	r3, [r5, #0]
 8001226:	b103      	cbz	r3, 800122a <_sbrk_r+0x1a>
 8001228:	6023      	str	r3, [r4, #0]
 800122a:	bd38      	pop	{r3, r4, r5, pc}
 800122c:	200001b8 	.word	0x200001b8

08001230 <memchr>:
 8001230:	b2c9      	uxtb	r1, r1
 8001232:	4603      	mov	r3, r0
 8001234:	4402      	add	r2, r0
 8001236:	b510      	push	{r4, lr}
 8001238:	4293      	cmp	r3, r2
 800123a:	4618      	mov	r0, r3
 800123c:	d101      	bne.n	8001242 <memchr+0x12>
 800123e:	2000      	movs	r0, #0
 8001240:	e003      	b.n	800124a <memchr+0x1a>
 8001242:	7804      	ldrb	r4, [r0, #0]
 8001244:	3301      	adds	r3, #1
 8001246:	428c      	cmp	r4, r1
 8001248:	d1f6      	bne.n	8001238 <memchr+0x8>
 800124a:	bd10      	pop	{r4, pc}

0800124c <__swhatbuf_r>:
 800124c:	b570      	push	{r4, r5, r6, lr}
 800124e:	460c      	mov	r4, r1
 8001250:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001254:	b096      	sub	sp, #88	@ 0x58
 8001256:	4615      	mov	r5, r2
 8001258:	2900      	cmp	r1, #0
 800125a:	461e      	mov	r6, r3
 800125c:	da0c      	bge.n	8001278 <__swhatbuf_r+0x2c>
 800125e:	89a3      	ldrh	r3, [r4, #12]
 8001260:	2100      	movs	r1, #0
 8001262:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001266:	bf14      	ite	ne
 8001268:	2340      	movne	r3, #64	@ 0x40
 800126a:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800126e:	2000      	movs	r0, #0
 8001270:	6031      	str	r1, [r6, #0]
 8001272:	602b      	str	r3, [r5, #0]
 8001274:	b016      	add	sp, #88	@ 0x58
 8001276:	bd70      	pop	{r4, r5, r6, pc}
 8001278:	466a      	mov	r2, sp
 800127a:	f000 f849 	bl	8001310 <_fstat_r>
 800127e:	2800      	cmp	r0, #0
 8001280:	dbed      	blt.n	800125e <__swhatbuf_r+0x12>
 8001282:	9901      	ldr	r1, [sp, #4]
 8001284:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001288:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800128c:	4259      	negs	r1, r3
 800128e:	4159      	adcs	r1, r3
 8001290:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001294:	e7eb      	b.n	800126e <__swhatbuf_r+0x22>

08001296 <__smakebuf_r>:
 8001296:	898b      	ldrh	r3, [r1, #12]
 8001298:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800129a:	079d      	lsls	r5, r3, #30
 800129c:	4606      	mov	r6, r0
 800129e:	460c      	mov	r4, r1
 80012a0:	d507      	bpl.n	80012b2 <__smakebuf_r+0x1c>
 80012a2:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80012a6:	6023      	str	r3, [r4, #0]
 80012a8:	6123      	str	r3, [r4, #16]
 80012aa:	2301      	movs	r3, #1
 80012ac:	6163      	str	r3, [r4, #20]
 80012ae:	b003      	add	sp, #12
 80012b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012b2:	ab01      	add	r3, sp, #4
 80012b4:	466a      	mov	r2, sp
 80012b6:	f7ff ffc9 	bl	800124c <__swhatbuf_r>
 80012ba:	9f00      	ldr	r7, [sp, #0]
 80012bc:	4605      	mov	r5, r0
 80012be:	4630      	mov	r0, r6
 80012c0:	4639      	mov	r1, r7
 80012c2:	f7ff fb0d 	bl	80008e0 <_malloc_r>
 80012c6:	b948      	cbnz	r0, 80012dc <__smakebuf_r+0x46>
 80012c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012cc:	059a      	lsls	r2, r3, #22
 80012ce:	d4ee      	bmi.n	80012ae <__smakebuf_r+0x18>
 80012d0:	f023 0303 	bic.w	r3, r3, #3
 80012d4:	f043 0302 	orr.w	r3, r3, #2
 80012d8:	81a3      	strh	r3, [r4, #12]
 80012da:	e7e2      	b.n	80012a2 <__smakebuf_r+0xc>
 80012dc:	89a3      	ldrh	r3, [r4, #12]
 80012de:	6020      	str	r0, [r4, #0]
 80012e0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80012e4:	81a3      	strh	r3, [r4, #12]
 80012e6:	9b01      	ldr	r3, [sp, #4]
 80012e8:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80012ec:	b15b      	cbz	r3, 8001306 <__smakebuf_r+0x70>
 80012ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012f2:	4630      	mov	r0, r6
 80012f4:	f000 f81e 	bl	8001334 <_isatty_r>
 80012f8:	b128      	cbz	r0, 8001306 <__smakebuf_r+0x70>
 80012fa:	89a3      	ldrh	r3, [r4, #12]
 80012fc:	f023 0303 	bic.w	r3, r3, #3
 8001300:	f043 0301 	orr.w	r3, r3, #1
 8001304:	81a3      	strh	r3, [r4, #12]
 8001306:	89a3      	ldrh	r3, [r4, #12]
 8001308:	431d      	orrs	r5, r3
 800130a:	81a5      	strh	r5, [r4, #12]
 800130c:	e7cf      	b.n	80012ae <__smakebuf_r+0x18>
	...

08001310 <_fstat_r>:
 8001310:	b538      	push	{r3, r4, r5, lr}
 8001312:	2300      	movs	r3, #0
 8001314:	4d06      	ldr	r5, [pc, #24]	@ (8001330 <_fstat_r+0x20>)
 8001316:	4604      	mov	r4, r0
 8001318:	4608      	mov	r0, r1
 800131a:	4611      	mov	r1, r2
 800131c:	602b      	str	r3, [r5, #0]
 800131e:	f7ff f859 	bl	80003d4 <_fstat>
 8001322:	1c43      	adds	r3, r0, #1
 8001324:	d102      	bne.n	800132c <_fstat_r+0x1c>
 8001326:	682b      	ldr	r3, [r5, #0]
 8001328:	b103      	cbz	r3, 800132c <_fstat_r+0x1c>
 800132a:	6023      	str	r3, [r4, #0]
 800132c:	bd38      	pop	{r3, r4, r5, pc}
 800132e:	bf00      	nop
 8001330:	200001b8 	.word	0x200001b8

08001334 <_isatty_r>:
 8001334:	b538      	push	{r3, r4, r5, lr}
 8001336:	2300      	movs	r3, #0
 8001338:	4d05      	ldr	r5, [pc, #20]	@ (8001350 <_isatty_r+0x1c>)
 800133a:	4604      	mov	r4, r0
 800133c:	4608      	mov	r0, r1
 800133e:	602b      	str	r3, [r5, #0]
 8001340:	f7ff f857 	bl	80003f2 <_isatty>
 8001344:	1c43      	adds	r3, r0, #1
 8001346:	d102      	bne.n	800134e <_isatty_r+0x1a>
 8001348:	682b      	ldr	r3, [r5, #0]
 800134a:	b103      	cbz	r3, 800134e <_isatty_r+0x1a>
 800134c:	6023      	str	r3, [r4, #0]
 800134e:	bd38      	pop	{r3, r4, r5, pc}
 8001350:	200001b8 	.word	0x200001b8

08001354 <_init>:
 8001354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001356:	bf00      	nop
 8001358:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800135a:	bc08      	pop	{r3}
 800135c:	469e      	mov	lr, r3
 800135e:	4770      	bx	lr

08001360 <_fini>:
 8001360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001362:	bf00      	nop
 8001364:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001366:	bc08      	pop	{r3}
 8001368:	469e      	mov	lr, r3
 800136a:	4770      	bx	lr
