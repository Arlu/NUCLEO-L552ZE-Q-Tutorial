
01-Structures.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001178  080001f0  080001f0  000011f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c4  08001368  08001368  00002368  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800142c  0800142c  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800142c  0800142c  0000305c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800142c  0800142c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800142c  0800142c  0000242c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001430  08001430  00002430  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001434  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001490  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001490  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b2d  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000435  00000000  00000000  00003bb9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000148  00000000  00000000  00003ff0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000de  00000000  00000000  00004138  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002d99  00000000  00000000  00004216  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000018d0  00000000  00000000  00006faf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009967  00000000  00000000  0000887f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000121e6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bb8  00000000  00000000  0001222c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005a  00000000  00000000  00012de4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f0 <__do_global_dtors_aux>:
 80001f0:	b510      	push	{r4, lr}
 80001f2:	4c05      	ldr	r4, [pc, #20]	@ (8000208 <__do_global_dtors_aux+0x18>)
 80001f4:	7823      	ldrb	r3, [r4, #0]
 80001f6:	b933      	cbnz	r3, 8000206 <__do_global_dtors_aux+0x16>
 80001f8:	4b04      	ldr	r3, [pc, #16]	@ (800020c <__do_global_dtors_aux+0x1c>)
 80001fa:	b113      	cbz	r3, 8000202 <__do_global_dtors_aux+0x12>
 80001fc:	4804      	ldr	r0, [pc, #16]	@ (8000210 <__do_global_dtors_aux+0x20>)
 80001fe:	f3af 8000 	nop.w
 8000202:	2301      	movs	r3, #1
 8000204:	7023      	strb	r3, [r4, #0]
 8000206:	bd10      	pop	{r4, pc}
 8000208:	2000005c 	.word	0x2000005c
 800020c:	00000000 	.word	0x00000000
 8000210:	08001350 	.word	0x08001350

08000214 <frame_dummy>:
 8000214:	b508      	push	{r3, lr}
 8000216:	4b03      	ldr	r3, [pc, #12]	@ (8000224 <frame_dummy+0x10>)
 8000218:	b11b      	cbz	r3, 8000222 <frame_dummy+0xe>
 800021a:	4903      	ldr	r1, [pc, #12]	@ (8000228 <frame_dummy+0x14>)
 800021c:	4803      	ldr	r0, [pc, #12]	@ (800022c <frame_dummy+0x18>)
 800021e:	f3af 8000 	nop.w
 8000222:	bd08      	pop	{r3, pc}
 8000224:	00000000 	.word	0x00000000
 8000228:	20000060 	.word	0x20000060
 800022c:	08001350 	.word	0x08001350

08000230 <ITM_SendChar>:
#define ITM_STIMULUS_PORT0     *((volatile uint32_t*) 0xE0000000 )
/* ITM Trace Enable Register */
#define ITM_TRACE_EN           *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000230:	b480      	push	{r7}
 8000232:	b083      	sub	sp, #12
 8000234:	af00      	add	r7, sp, #0
 8000236:	4603      	mov	r3, r0
 8000238:	71fb      	strb	r3, [r7, #7]
    // Enable TRCENA (Trace Enable)
    DEMCR |= (1 << 24);
 800023a:	4b0e      	ldr	r3, [pc, #56]	@ (8000274 <ITM_SendChar+0x44>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4a0d      	ldr	r2, [pc, #52]	@ (8000274 <ITM_SendChar+0x44>)
 8000240:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000244:	6013      	str	r3, [r2, #0]

    // Enable stimulus port 0
    ITM_TRACE_EN |= (1 << 0);
 8000246:	4b0c      	ldr	r3, [pc, #48]	@ (8000278 <ITM_SendChar+0x48>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a0b      	ldr	r2, [pc, #44]	@ (8000278 <ITM_SendChar+0x48>)
 800024c:	f043 0301 	orr.w	r3, r3, #1
 8000250:	6013      	str	r3, [r2, #0]

    // Wait until FIFO is ready in bit [0]
    while (!(ITM_STIMULUS_PORT0 & 1));
 8000252:	bf00      	nop
 8000254:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	f003 0301 	and.w	r3, r3, #1
 800025e:	2b00      	cmp	r3, #0
 8000260:	d0f8      	beq.n	8000254 <ITM_SendChar+0x24>

    // Write to ITM stimulus port 0
    ITM_STIMULUS_PORT0 = ch;
 8000262:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000266:	79fb      	ldrb	r3, [r7, #7]
 8000268:	6013      	str	r3, [r2, #0]
}
 800026a:	bf00      	nop
 800026c:	370c      	adds	r7, #12
 800026e:	46bd      	mov	sp, r7
 8000270:	bc80      	pop	{r7}
 8000272:	4770      	bx	lr
 8000274:	e000edfc 	.word	0xe000edfc
 8000278:	e0000e00 	.word	0xe0000e00

0800027c <_write>:

int _write(int file, char *ptr, int len)
{
 800027c:	b580      	push	{r7, lr}
 800027e:	b086      	sub	sp, #24
 8000280:	af00      	add	r7, sp, #0
 8000282:	60f8      	str	r0, [r7, #12]
 8000284:	60b9      	str	r1, [r7, #8]
 8000286:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000288:	2300      	movs	r3, #0
 800028a:	617b      	str	r3, [r7, #20]
 800028c:	e009      	b.n	80002a2 <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 800028e:	68bb      	ldr	r3, [r7, #8]
 8000290:	1c5a      	adds	r2, r3, #1
 8000292:	60ba      	str	r2, [r7, #8]
 8000294:	781b      	ldrb	r3, [r3, #0]
 8000296:	4618      	mov	r0, r3
 8000298:	f7ff ffca 	bl	8000230 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800029c:	697b      	ldr	r3, [r7, #20]
 800029e:	3301      	adds	r3, #1
 80002a0:	617b      	str	r3, [r7, #20]
 80002a2:	697a      	ldr	r2, [r7, #20]
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	429a      	cmp	r2, r3
 80002a8:	dbf1      	blt.n	800028e <_write+0x12>
  }
  return len;
 80002aa:	687b      	ldr	r3, [r7, #4]
}
 80002ac:	4618      	mov	r0, r3
 80002ae:	3718      	adds	r7, #24
 80002b0:	46bd      	mov	sp, r7
 80002b2:	bd80      	pop	{r7, pc}

080002b4 <modify_sensor1_data>:
    int32_t temperature;
    uint8_t status;
    int16_t pressure;
};

void modify_sensor1_data(struct sensor_data *s1){
 80002b4:	b480      	push	{r7}
 80002b6:	b083      	sub	sp, #12
 80002b8:	af00      	add	r7, sp, #0
 80002ba:	6078      	str	r0, [r7, #4]
	s1->status = 0x3;
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	2203      	movs	r2, #3
 80002c0:	711a      	strb	r2, [r3, #4]
//	 80002d0: 2303       movs	r3, #3
//	 80002d2: 7103       strb	r3, [r0, #4]
	s1->pressure = 1225;
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	f240 42c9 	movw	r2, #1225	@ 0x4c9
 80002c8:	80da      	strh	r2, [r3, #6]
//	 80002d4: f44f 63c9  mov.w r3, #1225
//	 80002d8: 8143       strh	r3, [r0, #6]
}
 80002ca:	bf00      	nop
 80002cc:	370c      	adds	r7, #12
 80002ce:	46bd      	mov	sp, r7
 80002d0:	bc80      	pop	{r7}
 80002d2:	4770      	bx	lr

080002d4 <modify_sensor2_data>:

void modify_sensor2_data(struct sensor_data_packed *s2){
 80002d4:	b480      	push	{r7}
 80002d6:	b083      	sub	sp, #12
 80002d8:	af00      	add	r7, sp, #0
 80002da:	6078      	str	r0, [r7, #4]
	s2->status = 0x3;
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	2203      	movs	r2, #3
 80002e0:	711a      	strb	r2, [r3, #4]
//	 80002dc: 2303       movs	r3, #3
//	 80002de: 7103       strb	r3, [r0, #4]
	s2->pressure = 1225;
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	2200      	movs	r2, #0
 80002e6:	f062 0236 	orn	r2, r2, #54	@ 0x36
 80002ea:	715a      	strb	r2, [r3, #5]
 80002ec:	2200      	movs	r2, #0
 80002ee:	f042 0204 	orr.w	r2, r2, #4
 80002f2:	719a      	strb	r2, [r3, #6]
//	 80002e0:  f44f 63c9  mov.w r3, #1225
//	 80002e2: 7103       strb	r3, [r0, #5]
//	 80002e0: 0b1b       lsrs	r3, r3, #8
//	 80002e2: 7143       strb	r3, [r0, #5]
}
 80002f4:	bf00      	nop
 80002f6:	370c      	adds	r7, #12
 80002f8:	46bd      	mov	sp, r7
 80002fa:	bc80      	pop	{r7}
 80002fc:	4770      	bx	lr
	...

08000300 <main>:

int main(void)
{
 8000300:	b580      	push	{r7, lr}
 8000302:	b086      	sub	sp, #24
 8000304:	af02      	add	r7, sp, #8
	struct sensor_data sensor1 = {25, 0x01, 1013};
 8000306:	4a1a      	ldr	r2, [pc, #104]	@ (8000370 <main+0x70>)
 8000308:	f107 0308 	add.w	r3, r7, #8
 800030c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000310:	e883 0003 	stmia.w	r3, {r0, r1}

	struct sensor_data_packed sensor2 = {.temperature = 25, .pressure = 1012, .status = 0x01 };
 8000314:	4a17      	ldr	r2, [pc, #92]	@ (8000374 <main+0x74>)
 8000316:	463b      	mov	r3, r7
 8000318:	e892 0003 	ldmia.w	r2, {r0, r1}
 800031c:	6018      	str	r0, [r3, #0]
 800031e:	3304      	adds	r3, #4
 8000320:	8019      	strh	r1, [r3, #0]
 8000322:	3302      	adds	r3, #2
 8000324:	0c0a      	lsrs	r2, r1, #16
 8000326:	701a      	strb	r2, [r3, #0]

	printf("sensor1: Temp = %ld, Press = %d, Status = 0x%X sizeof %d bytes\n",
 8000328:	68b9      	ldr	r1, [r7, #8]
			sensor1.temperature,
			sensor1.pressure,
 800032a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
	printf("sensor1: Temp = %ld, Press = %d, Status = 0x%X sizeof %d bytes\n",
 800032e:	461a      	mov	r2, r3
			sensor1.status,
 8000330:	7b3b      	ldrb	r3, [r7, #12]
	printf("sensor1: Temp = %ld, Press = %d, Status = 0x%X sizeof %d bytes\n",
 8000332:	4618      	mov	r0, r3
 8000334:	2308      	movs	r3, #8
 8000336:	9300      	str	r3, [sp, #0]
 8000338:	4603      	mov	r3, r0
 800033a:	480f      	ldr	r0, [pc, #60]	@ (8000378 <main+0x78>)
 800033c:	f000 f990 	bl	8000660 <iprintf>
			sizeof(sensor1));

	printf("sensor2: Temp = %ld, Press = %d, Status = 0x%X sizeof %d bytes\n",
 8000340:	6839      	ldr	r1, [r7, #0]
			sensor2.temperature,
			sensor2.pressure,
 8000342:	f9b7 3005 	ldrsh.w	r3, [r7, #5]
 8000346:	b21b      	sxth	r3, r3
	printf("sensor2: Temp = %ld, Press = %d, Status = 0x%X sizeof %d bytes\n",
 8000348:	461a      	mov	r2, r3
			sensor2.status,
 800034a:	793b      	ldrb	r3, [r7, #4]
	printf("sensor2: Temp = %ld, Press = %d, Status = 0x%X sizeof %d bytes\n",
 800034c:	4618      	mov	r0, r3
 800034e:	2307      	movs	r3, #7
 8000350:	9300      	str	r3, [sp, #0]
 8000352:	4603      	mov	r3, r0
 8000354:	4809      	ldr	r0, [pc, #36]	@ (800037c <main+0x7c>)
 8000356:	f000 f983 	bl	8000660 <iprintf>
			sizeof(sensor2));
	modify_sensor1_data(&sensor1);
 800035a:	f107 0308 	add.w	r3, r7, #8
 800035e:	4618      	mov	r0, r3
 8000360:	f7ff ffa8 	bl	80002b4 <modify_sensor1_data>
	modify_sensor2_data(&sensor2);
 8000364:	463b      	mov	r3, r7
 8000366:	4618      	mov	r0, r3
 8000368:	f7ff ffb4 	bl	80002d4 <modify_sensor2_data>

    /* Loop forever */
	for(;;);
 800036c:	bf00      	nop
 800036e:	e7fd      	b.n	800036c <main+0x6c>
 8000370:	080013e8 	.word	0x080013e8
 8000374:	080013f0 	.word	0x080013f0
 8000378:	08001368 	.word	0x08001368
 800037c:	080013a8 	.word	0x080013a8

08000380 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	b086      	sub	sp, #24
 8000384:	af00      	add	r7, sp, #0
 8000386:	60f8      	str	r0, [r7, #12]
 8000388:	60b9      	str	r1, [r7, #8]
 800038a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800038c:	2300      	movs	r3, #0
 800038e:	617b      	str	r3, [r7, #20]
 8000390:	e00a      	b.n	80003a8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000392:	f3af 8000 	nop.w
 8000396:	4601      	mov	r1, r0
 8000398:	68bb      	ldr	r3, [r7, #8]
 800039a:	1c5a      	adds	r2, r3, #1
 800039c:	60ba      	str	r2, [r7, #8]
 800039e:	b2ca      	uxtb	r2, r1
 80003a0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a2:	697b      	ldr	r3, [r7, #20]
 80003a4:	3301      	adds	r3, #1
 80003a6:	617b      	str	r3, [r7, #20]
 80003a8:	697a      	ldr	r2, [r7, #20]
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	429a      	cmp	r2, r3
 80003ae:	dbf0      	blt.n	8000392 <_read+0x12>
  }

  return len;
 80003b0:	687b      	ldr	r3, [r7, #4]
}
 80003b2:	4618      	mov	r0, r3
 80003b4:	3718      	adds	r7, #24
 80003b6:	46bd      	mov	sp, r7
 80003b8:	bd80      	pop	{r7, pc}

080003ba <_close>:
  }
  return len;
}

int _close(int file)
{
 80003ba:	b480      	push	{r7}
 80003bc:	b083      	sub	sp, #12
 80003be:	af00      	add	r7, sp, #0
 80003c0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003c2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003c6:	4618      	mov	r0, r3
 80003c8:	370c      	adds	r7, #12
 80003ca:	46bd      	mov	sp, r7
 80003cc:	bc80      	pop	{r7}
 80003ce:	4770      	bx	lr

080003d0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003d0:	b480      	push	{r7}
 80003d2:	b083      	sub	sp, #12
 80003d4:	af00      	add	r7, sp, #0
 80003d6:	6078      	str	r0, [r7, #4]
 80003d8:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003da:	683b      	ldr	r3, [r7, #0]
 80003dc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80003e0:	605a      	str	r2, [r3, #4]
  return 0;
 80003e2:	2300      	movs	r3, #0
}
 80003e4:	4618      	mov	r0, r3
 80003e6:	370c      	adds	r7, #12
 80003e8:	46bd      	mov	sp, r7
 80003ea:	bc80      	pop	{r7}
 80003ec:	4770      	bx	lr

080003ee <_isatty>:

int _isatty(int file)
{
 80003ee:	b480      	push	{r7}
 80003f0:	b083      	sub	sp, #12
 80003f2:	af00      	add	r7, sp, #0
 80003f4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003f6:	2301      	movs	r3, #1
}
 80003f8:	4618      	mov	r0, r3
 80003fa:	370c      	adds	r7, #12
 80003fc:	46bd      	mov	sp, r7
 80003fe:	bc80      	pop	{r7}
 8000400:	4770      	bx	lr

08000402 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000402:	b480      	push	{r7}
 8000404:	b085      	sub	sp, #20
 8000406:	af00      	add	r7, sp, #0
 8000408:	60f8      	str	r0, [r7, #12]
 800040a:	60b9      	str	r1, [r7, #8]
 800040c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800040e:	2300      	movs	r3, #0
}
 8000410:	4618      	mov	r0, r3
 8000412:	3714      	adds	r7, #20
 8000414:	46bd      	mov	sp, r7
 8000416:	bc80      	pop	{r7}
 8000418:	4770      	bx	lr
	...

0800041c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800041c:	b580      	push	{r7, lr}
 800041e:	b086      	sub	sp, #24
 8000420:	af00      	add	r7, sp, #0
 8000422:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000424:	4a14      	ldr	r2, [pc, #80]	@ (8000478 <_sbrk+0x5c>)
 8000426:	4b15      	ldr	r3, [pc, #84]	@ (800047c <_sbrk+0x60>)
 8000428:	1ad3      	subs	r3, r2, r3
 800042a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800042c:	697b      	ldr	r3, [r7, #20]
 800042e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000430:	4b13      	ldr	r3, [pc, #76]	@ (8000480 <_sbrk+0x64>)
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	2b00      	cmp	r3, #0
 8000436:	d102      	bne.n	800043e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000438:	4b11      	ldr	r3, [pc, #68]	@ (8000480 <_sbrk+0x64>)
 800043a:	4a12      	ldr	r2, [pc, #72]	@ (8000484 <_sbrk+0x68>)
 800043c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800043e:	4b10      	ldr	r3, [pc, #64]	@ (8000480 <_sbrk+0x64>)
 8000440:	681a      	ldr	r2, [r3, #0]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	4413      	add	r3, r2
 8000446:	693a      	ldr	r2, [r7, #16]
 8000448:	429a      	cmp	r2, r3
 800044a:	d207      	bcs.n	800045c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800044c:	f000 f9ac 	bl	80007a8 <__errno>
 8000450:	4603      	mov	r3, r0
 8000452:	220c      	movs	r2, #12
 8000454:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000456:	f04f 33ff 	mov.w	r3, #4294967295
 800045a:	e009      	b.n	8000470 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800045c:	4b08      	ldr	r3, [pc, #32]	@ (8000480 <_sbrk+0x64>)
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000462:	4b07      	ldr	r3, [pc, #28]	@ (8000480 <_sbrk+0x64>)
 8000464:	681a      	ldr	r2, [r3, #0]
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	4413      	add	r3, r2
 800046a:	4a05      	ldr	r2, [pc, #20]	@ (8000480 <_sbrk+0x64>)
 800046c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800046e:	68fb      	ldr	r3, [r7, #12]
}
 8000470:	4618      	mov	r0, r3
 8000472:	3718      	adds	r7, #24
 8000474:	46bd      	mov	sp, r7
 8000476:	bd80      	pop	{r7, pc}
 8000478:	20030000 	.word	0x20030000
 800047c:	00000400 	.word	0x00000400
 8000480:	20000078 	.word	0x20000078
 8000484:	200001c8 	.word	0x200001c8

08000488 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000488:	480d      	ldr	r0, [pc, #52]	@ (80004c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800048a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800048c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000490:	480c      	ldr	r0, [pc, #48]	@ (80004c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000492:	490d      	ldr	r1, [pc, #52]	@ (80004c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000494:	4a0d      	ldr	r2, [pc, #52]	@ (80004cc <LoopForever+0xe>)
  movs r3, #0
 8000496:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000498:	e002      	b.n	80004a0 <LoopCopyDataInit>

0800049a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800049a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800049c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800049e:	3304      	adds	r3, #4

080004a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004a4:	d3f9      	bcc.n	800049a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004a6:	4a0a      	ldr	r2, [pc, #40]	@ (80004d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004a8:	4c0a      	ldr	r4, [pc, #40]	@ (80004d4 <LoopForever+0x16>)
  movs r3, #0
 80004aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004ac:	e001      	b.n	80004b2 <LoopFillZerobss>

080004ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004b0:	3204      	adds	r2, #4

080004b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004b4:	d3fb      	bcc.n	80004ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004b6:	f000 f97d 	bl	80007b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004ba:	f7ff ff21 	bl	8000300 <main>

080004be <LoopForever>:

LoopForever:
  b LoopForever
 80004be:	e7fe      	b.n	80004be <LoopForever>
  ldr   r0, =_estack
 80004c0:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80004c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004c8:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004cc:	08001434 	.word	0x08001434
  ldr r2, =_sbss
 80004d0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004d4:	200001c8 	.word	0x200001c8

080004d8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004d8:	e7fe      	b.n	80004d8 <ADC1_2_IRQHandler>
	...

080004dc <std>:
 80004dc:	2300      	movs	r3, #0
 80004de:	b510      	push	{r4, lr}
 80004e0:	4604      	mov	r4, r0
 80004e2:	6083      	str	r3, [r0, #8]
 80004e4:	8181      	strh	r1, [r0, #12]
 80004e6:	4619      	mov	r1, r3
 80004e8:	6643      	str	r3, [r0, #100]	@ 0x64
 80004ea:	81c2      	strh	r2, [r0, #14]
 80004ec:	2208      	movs	r2, #8
 80004ee:	6183      	str	r3, [r0, #24]
 80004f0:	e9c0 3300 	strd	r3, r3, [r0]
 80004f4:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004f8:	305c      	adds	r0, #92	@ 0x5c
 80004fa:	f000 f906 	bl	800070a <memset>
 80004fe:	4b0d      	ldr	r3, [pc, #52]	@ (8000534 <std+0x58>)
 8000500:	6224      	str	r4, [r4, #32]
 8000502:	6263      	str	r3, [r4, #36]	@ 0x24
 8000504:	4b0c      	ldr	r3, [pc, #48]	@ (8000538 <std+0x5c>)
 8000506:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000508:	4b0c      	ldr	r3, [pc, #48]	@ (800053c <std+0x60>)
 800050a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800050c:	4b0c      	ldr	r3, [pc, #48]	@ (8000540 <std+0x64>)
 800050e:	6323      	str	r3, [r4, #48]	@ 0x30
 8000510:	4b0c      	ldr	r3, [pc, #48]	@ (8000544 <std+0x68>)
 8000512:	429c      	cmp	r4, r3
 8000514:	d006      	beq.n	8000524 <std+0x48>
 8000516:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800051a:	4294      	cmp	r4, r2
 800051c:	d002      	beq.n	8000524 <std+0x48>
 800051e:	33d0      	adds	r3, #208	@ 0xd0
 8000520:	429c      	cmp	r4, r3
 8000522:	d105      	bne.n	8000530 <std+0x54>
 8000524:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000528:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800052c:	f000 b966 	b.w	80007fc <__retarget_lock_init_recursive>
 8000530:	bd10      	pop	{r4, pc}
 8000532:	bf00      	nop
 8000534:	08000685 	.word	0x08000685
 8000538:	080006a7 	.word	0x080006a7
 800053c:	080006df 	.word	0x080006df
 8000540:	08000703 	.word	0x08000703
 8000544:	2000007c 	.word	0x2000007c

08000548 <stdio_exit_handler>:
 8000548:	4a02      	ldr	r2, [pc, #8]	@ (8000554 <stdio_exit_handler+0xc>)
 800054a:	4903      	ldr	r1, [pc, #12]	@ (8000558 <stdio_exit_handler+0x10>)
 800054c:	4803      	ldr	r0, [pc, #12]	@ (800055c <stdio_exit_handler+0x14>)
 800054e:	f000 b869 	b.w	8000624 <_fwalk_sglue>
 8000552:	bf00      	nop
 8000554:	20000000 	.word	0x20000000
 8000558:	08001095 	.word	0x08001095
 800055c:	20000010 	.word	0x20000010

08000560 <cleanup_stdio>:
 8000560:	6841      	ldr	r1, [r0, #4]
 8000562:	4b0c      	ldr	r3, [pc, #48]	@ (8000594 <cleanup_stdio+0x34>)
 8000564:	4299      	cmp	r1, r3
 8000566:	b510      	push	{r4, lr}
 8000568:	4604      	mov	r4, r0
 800056a:	d001      	beq.n	8000570 <cleanup_stdio+0x10>
 800056c:	f000 fd92 	bl	8001094 <_fflush_r>
 8000570:	68a1      	ldr	r1, [r4, #8]
 8000572:	4b09      	ldr	r3, [pc, #36]	@ (8000598 <cleanup_stdio+0x38>)
 8000574:	4299      	cmp	r1, r3
 8000576:	d002      	beq.n	800057e <cleanup_stdio+0x1e>
 8000578:	4620      	mov	r0, r4
 800057a:	f000 fd8b 	bl	8001094 <_fflush_r>
 800057e:	68e1      	ldr	r1, [r4, #12]
 8000580:	4b06      	ldr	r3, [pc, #24]	@ (800059c <cleanup_stdio+0x3c>)
 8000582:	4299      	cmp	r1, r3
 8000584:	d004      	beq.n	8000590 <cleanup_stdio+0x30>
 8000586:	4620      	mov	r0, r4
 8000588:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800058c:	f000 bd82 	b.w	8001094 <_fflush_r>
 8000590:	bd10      	pop	{r4, pc}
 8000592:	bf00      	nop
 8000594:	2000007c 	.word	0x2000007c
 8000598:	200000e4 	.word	0x200000e4
 800059c:	2000014c 	.word	0x2000014c

080005a0 <global_stdio_init.part.0>:
 80005a0:	b510      	push	{r4, lr}
 80005a2:	4b0b      	ldr	r3, [pc, #44]	@ (80005d0 <global_stdio_init.part.0+0x30>)
 80005a4:	2104      	movs	r1, #4
 80005a6:	4c0b      	ldr	r4, [pc, #44]	@ (80005d4 <global_stdio_init.part.0+0x34>)
 80005a8:	4a0b      	ldr	r2, [pc, #44]	@ (80005d8 <global_stdio_init.part.0+0x38>)
 80005aa:	4620      	mov	r0, r4
 80005ac:	601a      	str	r2, [r3, #0]
 80005ae:	2200      	movs	r2, #0
 80005b0:	f7ff ff94 	bl	80004dc <std>
 80005b4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80005b8:	2201      	movs	r2, #1
 80005ba:	2109      	movs	r1, #9
 80005bc:	f7ff ff8e 	bl	80004dc <std>
 80005c0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80005c4:	2202      	movs	r2, #2
 80005c6:	2112      	movs	r1, #18
 80005c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005cc:	f7ff bf86 	b.w	80004dc <std>
 80005d0:	200001b4 	.word	0x200001b4
 80005d4:	2000007c 	.word	0x2000007c
 80005d8:	08000549 	.word	0x08000549

080005dc <__sfp_lock_acquire>:
 80005dc:	4801      	ldr	r0, [pc, #4]	@ (80005e4 <__sfp_lock_acquire+0x8>)
 80005de:	f000 b90e 	b.w	80007fe <__retarget_lock_acquire_recursive>
 80005e2:	bf00      	nop
 80005e4:	200001bd 	.word	0x200001bd

080005e8 <__sfp_lock_release>:
 80005e8:	4801      	ldr	r0, [pc, #4]	@ (80005f0 <__sfp_lock_release+0x8>)
 80005ea:	f000 b909 	b.w	8000800 <__retarget_lock_release_recursive>
 80005ee:	bf00      	nop
 80005f0:	200001bd 	.word	0x200001bd

080005f4 <__sinit>:
 80005f4:	b510      	push	{r4, lr}
 80005f6:	4604      	mov	r4, r0
 80005f8:	f7ff fff0 	bl	80005dc <__sfp_lock_acquire>
 80005fc:	6a23      	ldr	r3, [r4, #32]
 80005fe:	b11b      	cbz	r3, 8000608 <__sinit+0x14>
 8000600:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000604:	f7ff bff0 	b.w	80005e8 <__sfp_lock_release>
 8000608:	4b04      	ldr	r3, [pc, #16]	@ (800061c <__sinit+0x28>)
 800060a:	6223      	str	r3, [r4, #32]
 800060c:	4b04      	ldr	r3, [pc, #16]	@ (8000620 <__sinit+0x2c>)
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	2b00      	cmp	r3, #0
 8000612:	d1f5      	bne.n	8000600 <__sinit+0xc>
 8000614:	f7ff ffc4 	bl	80005a0 <global_stdio_init.part.0>
 8000618:	e7f2      	b.n	8000600 <__sinit+0xc>
 800061a:	bf00      	nop
 800061c:	08000561 	.word	0x08000561
 8000620:	200001b4 	.word	0x200001b4

08000624 <_fwalk_sglue>:
 8000624:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000628:	4607      	mov	r7, r0
 800062a:	4688      	mov	r8, r1
 800062c:	4614      	mov	r4, r2
 800062e:	2600      	movs	r6, #0
 8000630:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000634:	f1b9 0901 	subs.w	r9, r9, #1
 8000638:	d505      	bpl.n	8000646 <_fwalk_sglue+0x22>
 800063a:	6824      	ldr	r4, [r4, #0]
 800063c:	2c00      	cmp	r4, #0
 800063e:	d1f7      	bne.n	8000630 <_fwalk_sglue+0xc>
 8000640:	4630      	mov	r0, r6
 8000642:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000646:	89ab      	ldrh	r3, [r5, #12]
 8000648:	2b01      	cmp	r3, #1
 800064a:	d907      	bls.n	800065c <_fwalk_sglue+0x38>
 800064c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000650:	3301      	adds	r3, #1
 8000652:	d003      	beq.n	800065c <_fwalk_sglue+0x38>
 8000654:	4629      	mov	r1, r5
 8000656:	4638      	mov	r0, r7
 8000658:	47c0      	blx	r8
 800065a:	4306      	orrs	r6, r0
 800065c:	3568      	adds	r5, #104	@ 0x68
 800065e:	e7e9      	b.n	8000634 <_fwalk_sglue+0x10>

08000660 <iprintf>:
 8000660:	b40f      	push	{r0, r1, r2, r3}
 8000662:	b507      	push	{r0, r1, r2, lr}
 8000664:	4906      	ldr	r1, [pc, #24]	@ (8000680 <iprintf+0x20>)
 8000666:	ab04      	add	r3, sp, #16
 8000668:	6808      	ldr	r0, [r1, #0]
 800066a:	f853 2b04 	ldr.w	r2, [r3], #4
 800066e:	6881      	ldr	r1, [r0, #8]
 8000670:	9301      	str	r3, [sp, #4]
 8000672:	f000 f9e7 	bl	8000a44 <_vfiprintf_r>
 8000676:	b003      	add	sp, #12
 8000678:	f85d eb04 	ldr.w	lr, [sp], #4
 800067c:	b004      	add	sp, #16
 800067e:	4770      	bx	lr
 8000680:	2000000c 	.word	0x2000000c

08000684 <__sread>:
 8000684:	b510      	push	{r4, lr}
 8000686:	460c      	mov	r4, r1
 8000688:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800068c:	f000 f868 	bl	8000760 <_read_r>
 8000690:	2800      	cmp	r0, #0
 8000692:	bfab      	itete	ge
 8000694:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000696:	89a3      	ldrhlt	r3, [r4, #12]
 8000698:	181b      	addge	r3, r3, r0
 800069a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800069e:	bfac      	ite	ge
 80006a0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80006a2:	81a3      	strhlt	r3, [r4, #12]
 80006a4:	bd10      	pop	{r4, pc}

080006a6 <__swrite>:
 80006a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006aa:	461f      	mov	r7, r3
 80006ac:	898b      	ldrh	r3, [r1, #12]
 80006ae:	4605      	mov	r5, r0
 80006b0:	460c      	mov	r4, r1
 80006b2:	05db      	lsls	r3, r3, #23
 80006b4:	4616      	mov	r6, r2
 80006b6:	d505      	bpl.n	80006c4 <__swrite+0x1e>
 80006b8:	2302      	movs	r3, #2
 80006ba:	2200      	movs	r2, #0
 80006bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006c0:	f000 f83c 	bl	800073c <_lseek_r>
 80006c4:	89a3      	ldrh	r3, [r4, #12]
 80006c6:	4632      	mov	r2, r6
 80006c8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006cc:	4628      	mov	r0, r5
 80006ce:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80006d2:	81a3      	strh	r3, [r4, #12]
 80006d4:	463b      	mov	r3, r7
 80006d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80006da:	f000 b853 	b.w	8000784 <_write_r>

080006de <__sseek>:
 80006de:	b510      	push	{r4, lr}
 80006e0:	460c      	mov	r4, r1
 80006e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006e6:	f000 f829 	bl	800073c <_lseek_r>
 80006ea:	1c43      	adds	r3, r0, #1
 80006ec:	89a3      	ldrh	r3, [r4, #12]
 80006ee:	bf15      	itete	ne
 80006f0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80006f2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80006f6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80006fa:	81a3      	strheq	r3, [r4, #12]
 80006fc:	bf18      	it	ne
 80006fe:	81a3      	strhne	r3, [r4, #12]
 8000700:	bd10      	pop	{r4, pc}

08000702 <__sclose>:
 8000702:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000706:	f000 b809 	b.w	800071c <_close_r>

0800070a <memset>:
 800070a:	4402      	add	r2, r0
 800070c:	4603      	mov	r3, r0
 800070e:	4293      	cmp	r3, r2
 8000710:	d100      	bne.n	8000714 <memset+0xa>
 8000712:	4770      	bx	lr
 8000714:	f803 1b01 	strb.w	r1, [r3], #1
 8000718:	e7f9      	b.n	800070e <memset+0x4>
	...

0800071c <_close_r>:
 800071c:	b538      	push	{r3, r4, r5, lr}
 800071e:	2300      	movs	r3, #0
 8000720:	4d05      	ldr	r5, [pc, #20]	@ (8000738 <_close_r+0x1c>)
 8000722:	4604      	mov	r4, r0
 8000724:	4608      	mov	r0, r1
 8000726:	602b      	str	r3, [r5, #0]
 8000728:	f7ff fe47 	bl	80003ba <_close>
 800072c:	1c43      	adds	r3, r0, #1
 800072e:	d102      	bne.n	8000736 <_close_r+0x1a>
 8000730:	682b      	ldr	r3, [r5, #0]
 8000732:	b103      	cbz	r3, 8000736 <_close_r+0x1a>
 8000734:	6023      	str	r3, [r4, #0]
 8000736:	bd38      	pop	{r3, r4, r5, pc}
 8000738:	200001b8 	.word	0x200001b8

0800073c <_lseek_r>:
 800073c:	b538      	push	{r3, r4, r5, lr}
 800073e:	4604      	mov	r4, r0
 8000740:	4d06      	ldr	r5, [pc, #24]	@ (800075c <_lseek_r+0x20>)
 8000742:	4608      	mov	r0, r1
 8000744:	4611      	mov	r1, r2
 8000746:	2200      	movs	r2, #0
 8000748:	602a      	str	r2, [r5, #0]
 800074a:	461a      	mov	r2, r3
 800074c:	f7ff fe59 	bl	8000402 <_lseek>
 8000750:	1c43      	adds	r3, r0, #1
 8000752:	d102      	bne.n	800075a <_lseek_r+0x1e>
 8000754:	682b      	ldr	r3, [r5, #0]
 8000756:	b103      	cbz	r3, 800075a <_lseek_r+0x1e>
 8000758:	6023      	str	r3, [r4, #0]
 800075a:	bd38      	pop	{r3, r4, r5, pc}
 800075c:	200001b8 	.word	0x200001b8

08000760 <_read_r>:
 8000760:	b538      	push	{r3, r4, r5, lr}
 8000762:	4604      	mov	r4, r0
 8000764:	4d06      	ldr	r5, [pc, #24]	@ (8000780 <_read_r+0x20>)
 8000766:	4608      	mov	r0, r1
 8000768:	4611      	mov	r1, r2
 800076a:	2200      	movs	r2, #0
 800076c:	602a      	str	r2, [r5, #0]
 800076e:	461a      	mov	r2, r3
 8000770:	f7ff fe06 	bl	8000380 <_read>
 8000774:	1c43      	adds	r3, r0, #1
 8000776:	d102      	bne.n	800077e <_read_r+0x1e>
 8000778:	682b      	ldr	r3, [r5, #0]
 800077a:	b103      	cbz	r3, 800077e <_read_r+0x1e>
 800077c:	6023      	str	r3, [r4, #0]
 800077e:	bd38      	pop	{r3, r4, r5, pc}
 8000780:	200001b8 	.word	0x200001b8

08000784 <_write_r>:
 8000784:	b538      	push	{r3, r4, r5, lr}
 8000786:	4604      	mov	r4, r0
 8000788:	4d06      	ldr	r5, [pc, #24]	@ (80007a4 <_write_r+0x20>)
 800078a:	4608      	mov	r0, r1
 800078c:	4611      	mov	r1, r2
 800078e:	2200      	movs	r2, #0
 8000790:	602a      	str	r2, [r5, #0]
 8000792:	461a      	mov	r2, r3
 8000794:	f7ff fd72 	bl	800027c <_write>
 8000798:	1c43      	adds	r3, r0, #1
 800079a:	d102      	bne.n	80007a2 <_write_r+0x1e>
 800079c:	682b      	ldr	r3, [r5, #0]
 800079e:	b103      	cbz	r3, 80007a2 <_write_r+0x1e>
 80007a0:	6023      	str	r3, [r4, #0]
 80007a2:	bd38      	pop	{r3, r4, r5, pc}
 80007a4:	200001b8 	.word	0x200001b8

080007a8 <__errno>:
 80007a8:	4b01      	ldr	r3, [pc, #4]	@ (80007b0 <__errno+0x8>)
 80007aa:	6818      	ldr	r0, [r3, #0]
 80007ac:	4770      	bx	lr
 80007ae:	bf00      	nop
 80007b0:	2000000c 	.word	0x2000000c

080007b4 <__libc_init_array>:
 80007b4:	b570      	push	{r4, r5, r6, lr}
 80007b6:	4d0d      	ldr	r5, [pc, #52]	@ (80007ec <__libc_init_array+0x38>)
 80007b8:	2600      	movs	r6, #0
 80007ba:	4c0d      	ldr	r4, [pc, #52]	@ (80007f0 <__libc_init_array+0x3c>)
 80007bc:	1b64      	subs	r4, r4, r5
 80007be:	10a4      	asrs	r4, r4, #2
 80007c0:	42a6      	cmp	r6, r4
 80007c2:	d109      	bne.n	80007d8 <__libc_init_array+0x24>
 80007c4:	4d0b      	ldr	r5, [pc, #44]	@ (80007f4 <__libc_init_array+0x40>)
 80007c6:	2600      	movs	r6, #0
 80007c8:	4c0b      	ldr	r4, [pc, #44]	@ (80007f8 <__libc_init_array+0x44>)
 80007ca:	f000 fdc1 	bl	8001350 <_init>
 80007ce:	1b64      	subs	r4, r4, r5
 80007d0:	10a4      	asrs	r4, r4, #2
 80007d2:	42a6      	cmp	r6, r4
 80007d4:	d105      	bne.n	80007e2 <__libc_init_array+0x2e>
 80007d6:	bd70      	pop	{r4, r5, r6, pc}
 80007d8:	f855 3b04 	ldr.w	r3, [r5], #4
 80007dc:	3601      	adds	r6, #1
 80007de:	4798      	blx	r3
 80007e0:	e7ee      	b.n	80007c0 <__libc_init_array+0xc>
 80007e2:	f855 3b04 	ldr.w	r3, [r5], #4
 80007e6:	3601      	adds	r6, #1
 80007e8:	4798      	blx	r3
 80007ea:	e7f2      	b.n	80007d2 <__libc_init_array+0x1e>
 80007ec:	0800142c 	.word	0x0800142c
 80007f0:	0800142c 	.word	0x0800142c
 80007f4:	0800142c 	.word	0x0800142c
 80007f8:	08001430 	.word	0x08001430

080007fc <__retarget_lock_init_recursive>:
 80007fc:	4770      	bx	lr

080007fe <__retarget_lock_acquire_recursive>:
 80007fe:	4770      	bx	lr

08000800 <__retarget_lock_release_recursive>:
 8000800:	4770      	bx	lr
	...

08000804 <_free_r>:
 8000804:	b538      	push	{r3, r4, r5, lr}
 8000806:	4605      	mov	r5, r0
 8000808:	2900      	cmp	r1, #0
 800080a:	d041      	beq.n	8000890 <_free_r+0x8c>
 800080c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000810:	1f0c      	subs	r4, r1, #4
 8000812:	2b00      	cmp	r3, #0
 8000814:	bfb8      	it	lt
 8000816:	18e4      	addlt	r4, r4, r3
 8000818:	f000 f8e0 	bl	80009dc <__malloc_lock>
 800081c:	4a1d      	ldr	r2, [pc, #116]	@ (8000894 <_free_r+0x90>)
 800081e:	6813      	ldr	r3, [r2, #0]
 8000820:	b933      	cbnz	r3, 8000830 <_free_r+0x2c>
 8000822:	6063      	str	r3, [r4, #4]
 8000824:	6014      	str	r4, [r2, #0]
 8000826:	4628      	mov	r0, r5
 8000828:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800082c:	f000 b8dc 	b.w	80009e8 <__malloc_unlock>
 8000830:	42a3      	cmp	r3, r4
 8000832:	d908      	bls.n	8000846 <_free_r+0x42>
 8000834:	6820      	ldr	r0, [r4, #0]
 8000836:	1821      	adds	r1, r4, r0
 8000838:	428b      	cmp	r3, r1
 800083a:	bf01      	itttt	eq
 800083c:	6819      	ldreq	r1, [r3, #0]
 800083e:	685b      	ldreq	r3, [r3, #4]
 8000840:	1809      	addeq	r1, r1, r0
 8000842:	6021      	streq	r1, [r4, #0]
 8000844:	e7ed      	b.n	8000822 <_free_r+0x1e>
 8000846:	461a      	mov	r2, r3
 8000848:	685b      	ldr	r3, [r3, #4]
 800084a:	b10b      	cbz	r3, 8000850 <_free_r+0x4c>
 800084c:	42a3      	cmp	r3, r4
 800084e:	d9fa      	bls.n	8000846 <_free_r+0x42>
 8000850:	6811      	ldr	r1, [r2, #0]
 8000852:	1850      	adds	r0, r2, r1
 8000854:	42a0      	cmp	r0, r4
 8000856:	d10b      	bne.n	8000870 <_free_r+0x6c>
 8000858:	6820      	ldr	r0, [r4, #0]
 800085a:	4401      	add	r1, r0
 800085c:	1850      	adds	r0, r2, r1
 800085e:	6011      	str	r1, [r2, #0]
 8000860:	4283      	cmp	r3, r0
 8000862:	d1e0      	bne.n	8000826 <_free_r+0x22>
 8000864:	6818      	ldr	r0, [r3, #0]
 8000866:	685b      	ldr	r3, [r3, #4]
 8000868:	4408      	add	r0, r1
 800086a:	6053      	str	r3, [r2, #4]
 800086c:	6010      	str	r0, [r2, #0]
 800086e:	e7da      	b.n	8000826 <_free_r+0x22>
 8000870:	d902      	bls.n	8000878 <_free_r+0x74>
 8000872:	230c      	movs	r3, #12
 8000874:	602b      	str	r3, [r5, #0]
 8000876:	e7d6      	b.n	8000826 <_free_r+0x22>
 8000878:	6820      	ldr	r0, [r4, #0]
 800087a:	1821      	adds	r1, r4, r0
 800087c:	428b      	cmp	r3, r1
 800087e:	bf02      	ittt	eq
 8000880:	6819      	ldreq	r1, [r3, #0]
 8000882:	685b      	ldreq	r3, [r3, #4]
 8000884:	1809      	addeq	r1, r1, r0
 8000886:	6063      	str	r3, [r4, #4]
 8000888:	bf08      	it	eq
 800088a:	6021      	streq	r1, [r4, #0]
 800088c:	6054      	str	r4, [r2, #4]
 800088e:	e7ca      	b.n	8000826 <_free_r+0x22>
 8000890:	bd38      	pop	{r3, r4, r5, pc}
 8000892:	bf00      	nop
 8000894:	200001c4 	.word	0x200001c4

08000898 <sbrk_aligned>:
 8000898:	b570      	push	{r4, r5, r6, lr}
 800089a:	4e0f      	ldr	r6, [pc, #60]	@ (80008d8 <sbrk_aligned+0x40>)
 800089c:	460c      	mov	r4, r1
 800089e:	4605      	mov	r5, r0
 80008a0:	6831      	ldr	r1, [r6, #0]
 80008a2:	b911      	cbnz	r1, 80008aa <sbrk_aligned+0x12>
 80008a4:	f000 fcb2 	bl	800120c <_sbrk_r>
 80008a8:	6030      	str	r0, [r6, #0]
 80008aa:	4621      	mov	r1, r4
 80008ac:	4628      	mov	r0, r5
 80008ae:	f000 fcad 	bl	800120c <_sbrk_r>
 80008b2:	1c43      	adds	r3, r0, #1
 80008b4:	d103      	bne.n	80008be <sbrk_aligned+0x26>
 80008b6:	f04f 34ff 	mov.w	r4, #4294967295
 80008ba:	4620      	mov	r0, r4
 80008bc:	bd70      	pop	{r4, r5, r6, pc}
 80008be:	1cc4      	adds	r4, r0, #3
 80008c0:	f024 0403 	bic.w	r4, r4, #3
 80008c4:	42a0      	cmp	r0, r4
 80008c6:	d0f8      	beq.n	80008ba <sbrk_aligned+0x22>
 80008c8:	1a21      	subs	r1, r4, r0
 80008ca:	4628      	mov	r0, r5
 80008cc:	f000 fc9e 	bl	800120c <_sbrk_r>
 80008d0:	3001      	adds	r0, #1
 80008d2:	d1f2      	bne.n	80008ba <sbrk_aligned+0x22>
 80008d4:	e7ef      	b.n	80008b6 <sbrk_aligned+0x1e>
 80008d6:	bf00      	nop
 80008d8:	200001c0 	.word	0x200001c0

080008dc <_malloc_r>:
 80008dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008e0:	1ccd      	adds	r5, r1, #3
 80008e2:	4606      	mov	r6, r0
 80008e4:	f025 0503 	bic.w	r5, r5, #3
 80008e8:	3508      	adds	r5, #8
 80008ea:	2d0c      	cmp	r5, #12
 80008ec:	bf38      	it	cc
 80008ee:	250c      	movcc	r5, #12
 80008f0:	2d00      	cmp	r5, #0
 80008f2:	db01      	blt.n	80008f8 <_malloc_r+0x1c>
 80008f4:	42a9      	cmp	r1, r5
 80008f6:	d904      	bls.n	8000902 <_malloc_r+0x26>
 80008f8:	230c      	movs	r3, #12
 80008fa:	6033      	str	r3, [r6, #0]
 80008fc:	2000      	movs	r0, #0
 80008fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000902:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80009d8 <_malloc_r+0xfc>
 8000906:	f000 f869 	bl	80009dc <__malloc_lock>
 800090a:	f8d8 3000 	ldr.w	r3, [r8]
 800090e:	461c      	mov	r4, r3
 8000910:	bb44      	cbnz	r4, 8000964 <_malloc_r+0x88>
 8000912:	4629      	mov	r1, r5
 8000914:	4630      	mov	r0, r6
 8000916:	f7ff ffbf 	bl	8000898 <sbrk_aligned>
 800091a:	1c43      	adds	r3, r0, #1
 800091c:	4604      	mov	r4, r0
 800091e:	d158      	bne.n	80009d2 <_malloc_r+0xf6>
 8000920:	f8d8 4000 	ldr.w	r4, [r8]
 8000924:	4627      	mov	r7, r4
 8000926:	2f00      	cmp	r7, #0
 8000928:	d143      	bne.n	80009b2 <_malloc_r+0xd6>
 800092a:	2c00      	cmp	r4, #0
 800092c:	d04b      	beq.n	80009c6 <_malloc_r+0xea>
 800092e:	6823      	ldr	r3, [r4, #0]
 8000930:	4639      	mov	r1, r7
 8000932:	4630      	mov	r0, r6
 8000934:	eb04 0903 	add.w	r9, r4, r3
 8000938:	f000 fc68 	bl	800120c <_sbrk_r>
 800093c:	4581      	cmp	r9, r0
 800093e:	d142      	bne.n	80009c6 <_malloc_r+0xea>
 8000940:	6821      	ldr	r1, [r4, #0]
 8000942:	4630      	mov	r0, r6
 8000944:	1a6d      	subs	r5, r5, r1
 8000946:	4629      	mov	r1, r5
 8000948:	f7ff ffa6 	bl	8000898 <sbrk_aligned>
 800094c:	3001      	adds	r0, #1
 800094e:	d03a      	beq.n	80009c6 <_malloc_r+0xea>
 8000950:	6823      	ldr	r3, [r4, #0]
 8000952:	442b      	add	r3, r5
 8000954:	6023      	str	r3, [r4, #0]
 8000956:	f8d8 3000 	ldr.w	r3, [r8]
 800095a:	685a      	ldr	r2, [r3, #4]
 800095c:	bb62      	cbnz	r2, 80009b8 <_malloc_r+0xdc>
 800095e:	f8c8 7000 	str.w	r7, [r8]
 8000962:	e00f      	b.n	8000984 <_malloc_r+0xa8>
 8000964:	6822      	ldr	r2, [r4, #0]
 8000966:	1b52      	subs	r2, r2, r5
 8000968:	d420      	bmi.n	80009ac <_malloc_r+0xd0>
 800096a:	2a0b      	cmp	r2, #11
 800096c:	d917      	bls.n	800099e <_malloc_r+0xc2>
 800096e:	1961      	adds	r1, r4, r5
 8000970:	42a3      	cmp	r3, r4
 8000972:	6025      	str	r5, [r4, #0]
 8000974:	bf18      	it	ne
 8000976:	6059      	strne	r1, [r3, #4]
 8000978:	6863      	ldr	r3, [r4, #4]
 800097a:	bf08      	it	eq
 800097c:	f8c8 1000 	streq.w	r1, [r8]
 8000980:	5162      	str	r2, [r4, r5]
 8000982:	604b      	str	r3, [r1, #4]
 8000984:	4630      	mov	r0, r6
 8000986:	f000 f82f 	bl	80009e8 <__malloc_unlock>
 800098a:	f104 000b 	add.w	r0, r4, #11
 800098e:	1d23      	adds	r3, r4, #4
 8000990:	f020 0007 	bic.w	r0, r0, #7
 8000994:	1ac2      	subs	r2, r0, r3
 8000996:	bf1c      	itt	ne
 8000998:	1a1b      	subne	r3, r3, r0
 800099a:	50a3      	strne	r3, [r4, r2]
 800099c:	e7af      	b.n	80008fe <_malloc_r+0x22>
 800099e:	6862      	ldr	r2, [r4, #4]
 80009a0:	42a3      	cmp	r3, r4
 80009a2:	bf0c      	ite	eq
 80009a4:	f8c8 2000 	streq.w	r2, [r8]
 80009a8:	605a      	strne	r2, [r3, #4]
 80009aa:	e7eb      	b.n	8000984 <_malloc_r+0xa8>
 80009ac:	4623      	mov	r3, r4
 80009ae:	6864      	ldr	r4, [r4, #4]
 80009b0:	e7ae      	b.n	8000910 <_malloc_r+0x34>
 80009b2:	463c      	mov	r4, r7
 80009b4:	687f      	ldr	r7, [r7, #4]
 80009b6:	e7b6      	b.n	8000926 <_malloc_r+0x4a>
 80009b8:	461a      	mov	r2, r3
 80009ba:	685b      	ldr	r3, [r3, #4]
 80009bc:	42a3      	cmp	r3, r4
 80009be:	d1fb      	bne.n	80009b8 <_malloc_r+0xdc>
 80009c0:	2300      	movs	r3, #0
 80009c2:	6053      	str	r3, [r2, #4]
 80009c4:	e7de      	b.n	8000984 <_malloc_r+0xa8>
 80009c6:	230c      	movs	r3, #12
 80009c8:	4630      	mov	r0, r6
 80009ca:	6033      	str	r3, [r6, #0]
 80009cc:	f000 f80c 	bl	80009e8 <__malloc_unlock>
 80009d0:	e794      	b.n	80008fc <_malloc_r+0x20>
 80009d2:	6005      	str	r5, [r0, #0]
 80009d4:	e7d6      	b.n	8000984 <_malloc_r+0xa8>
 80009d6:	bf00      	nop
 80009d8:	200001c4 	.word	0x200001c4

080009dc <__malloc_lock>:
 80009dc:	4801      	ldr	r0, [pc, #4]	@ (80009e4 <__malloc_lock+0x8>)
 80009de:	f7ff bf0e 	b.w	80007fe <__retarget_lock_acquire_recursive>
 80009e2:	bf00      	nop
 80009e4:	200001bc 	.word	0x200001bc

080009e8 <__malloc_unlock>:
 80009e8:	4801      	ldr	r0, [pc, #4]	@ (80009f0 <__malloc_unlock+0x8>)
 80009ea:	f7ff bf09 	b.w	8000800 <__retarget_lock_release_recursive>
 80009ee:	bf00      	nop
 80009f0:	200001bc 	.word	0x200001bc

080009f4 <__sfputc_r>:
 80009f4:	6893      	ldr	r3, [r2, #8]
 80009f6:	3b01      	subs	r3, #1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	b410      	push	{r4}
 80009fc:	6093      	str	r3, [r2, #8]
 80009fe:	da07      	bge.n	8000a10 <__sfputc_r+0x1c>
 8000a00:	6994      	ldr	r4, [r2, #24]
 8000a02:	42a3      	cmp	r3, r4
 8000a04:	db01      	blt.n	8000a0a <__sfputc_r+0x16>
 8000a06:	290a      	cmp	r1, #10
 8000a08:	d102      	bne.n	8000a10 <__sfputc_r+0x1c>
 8000a0a:	bc10      	pop	{r4}
 8000a0c:	f000 bb6a 	b.w	80010e4 <__swbuf_r>
 8000a10:	6813      	ldr	r3, [r2, #0]
 8000a12:	1c58      	adds	r0, r3, #1
 8000a14:	6010      	str	r0, [r2, #0]
 8000a16:	4608      	mov	r0, r1
 8000a18:	7019      	strb	r1, [r3, #0]
 8000a1a:	bc10      	pop	{r4}
 8000a1c:	4770      	bx	lr

08000a1e <__sfputs_r>:
 8000a1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a20:	4606      	mov	r6, r0
 8000a22:	460f      	mov	r7, r1
 8000a24:	4614      	mov	r4, r2
 8000a26:	18d5      	adds	r5, r2, r3
 8000a28:	42ac      	cmp	r4, r5
 8000a2a:	d101      	bne.n	8000a30 <__sfputs_r+0x12>
 8000a2c:	2000      	movs	r0, #0
 8000a2e:	e007      	b.n	8000a40 <__sfputs_r+0x22>
 8000a30:	463a      	mov	r2, r7
 8000a32:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a36:	4630      	mov	r0, r6
 8000a38:	f7ff ffdc 	bl	80009f4 <__sfputc_r>
 8000a3c:	1c43      	adds	r3, r0, #1
 8000a3e:	d1f3      	bne.n	8000a28 <__sfputs_r+0xa>
 8000a40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a44 <_vfiprintf_r>:
 8000a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a48:	460d      	mov	r5, r1
 8000a4a:	b09d      	sub	sp, #116	@ 0x74
 8000a4c:	4614      	mov	r4, r2
 8000a4e:	4698      	mov	r8, r3
 8000a50:	4606      	mov	r6, r0
 8000a52:	b118      	cbz	r0, 8000a5c <_vfiprintf_r+0x18>
 8000a54:	6a03      	ldr	r3, [r0, #32]
 8000a56:	b90b      	cbnz	r3, 8000a5c <_vfiprintf_r+0x18>
 8000a58:	f7ff fdcc 	bl	80005f4 <__sinit>
 8000a5c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a5e:	07d9      	lsls	r1, r3, #31
 8000a60:	d405      	bmi.n	8000a6e <_vfiprintf_r+0x2a>
 8000a62:	89ab      	ldrh	r3, [r5, #12]
 8000a64:	059a      	lsls	r2, r3, #22
 8000a66:	d402      	bmi.n	8000a6e <_vfiprintf_r+0x2a>
 8000a68:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a6a:	f7ff fec8 	bl	80007fe <__retarget_lock_acquire_recursive>
 8000a6e:	89ab      	ldrh	r3, [r5, #12]
 8000a70:	071b      	lsls	r3, r3, #28
 8000a72:	d501      	bpl.n	8000a78 <_vfiprintf_r+0x34>
 8000a74:	692b      	ldr	r3, [r5, #16]
 8000a76:	b99b      	cbnz	r3, 8000aa0 <_vfiprintf_r+0x5c>
 8000a78:	4629      	mov	r1, r5
 8000a7a:	4630      	mov	r0, r6
 8000a7c:	f000 fb70 	bl	8001160 <__swsetup_r>
 8000a80:	b170      	cbz	r0, 8000aa0 <_vfiprintf_r+0x5c>
 8000a82:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a84:	07dc      	lsls	r4, r3, #31
 8000a86:	d504      	bpl.n	8000a92 <_vfiprintf_r+0x4e>
 8000a88:	f04f 30ff 	mov.w	r0, #4294967295
 8000a8c:	b01d      	add	sp, #116	@ 0x74
 8000a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a92:	89ab      	ldrh	r3, [r5, #12]
 8000a94:	0598      	lsls	r0, r3, #22
 8000a96:	d4f7      	bmi.n	8000a88 <_vfiprintf_r+0x44>
 8000a98:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a9a:	f7ff feb1 	bl	8000800 <__retarget_lock_release_recursive>
 8000a9e:	e7f3      	b.n	8000a88 <_vfiprintf_r+0x44>
 8000aa0:	2300      	movs	r3, #0
 8000aa2:	f8cd 800c 	str.w	r8, [sp, #12]
 8000aa6:	f04f 0901 	mov.w	r9, #1
 8000aaa:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8000c60 <_vfiprintf_r+0x21c>
 8000aae:	9309      	str	r3, [sp, #36]	@ 0x24
 8000ab0:	2320      	movs	r3, #32
 8000ab2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000ab6:	2330      	movs	r3, #48	@ 0x30
 8000ab8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000abc:	4623      	mov	r3, r4
 8000abe:	469a      	mov	sl, r3
 8000ac0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ac4:	b10a      	cbz	r2, 8000aca <_vfiprintf_r+0x86>
 8000ac6:	2a25      	cmp	r2, #37	@ 0x25
 8000ac8:	d1f9      	bne.n	8000abe <_vfiprintf_r+0x7a>
 8000aca:	ebba 0b04 	subs.w	fp, sl, r4
 8000ace:	d00b      	beq.n	8000ae8 <_vfiprintf_r+0xa4>
 8000ad0:	465b      	mov	r3, fp
 8000ad2:	4622      	mov	r2, r4
 8000ad4:	4629      	mov	r1, r5
 8000ad6:	4630      	mov	r0, r6
 8000ad8:	f7ff ffa1 	bl	8000a1e <__sfputs_r>
 8000adc:	3001      	adds	r0, #1
 8000ade:	f000 80a7 	beq.w	8000c30 <_vfiprintf_r+0x1ec>
 8000ae2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000ae4:	445a      	add	r2, fp
 8000ae6:	9209      	str	r2, [sp, #36]	@ 0x24
 8000ae8:	f89a 3000 	ldrb.w	r3, [sl]
 8000aec:	2b00      	cmp	r3, #0
 8000aee:	f000 809f 	beq.w	8000c30 <_vfiprintf_r+0x1ec>
 8000af2:	2300      	movs	r3, #0
 8000af4:	f04f 32ff 	mov.w	r2, #4294967295
 8000af8:	f10a 0a01 	add.w	sl, sl, #1
 8000afc:	9304      	str	r3, [sp, #16]
 8000afe:	9307      	str	r3, [sp, #28]
 8000b00:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000b04:	931a      	str	r3, [sp, #104]	@ 0x68
 8000b06:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b0a:	4654      	mov	r4, sl
 8000b0c:	2205      	movs	r2, #5
 8000b0e:	4854      	ldr	r0, [pc, #336]	@ (8000c60 <_vfiprintf_r+0x21c>)
 8000b10:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b14:	f000 fb8a 	bl	800122c <memchr>
 8000b18:	9a04      	ldr	r2, [sp, #16]
 8000b1a:	b9d8      	cbnz	r0, 8000b54 <_vfiprintf_r+0x110>
 8000b1c:	06d1      	lsls	r1, r2, #27
 8000b1e:	bf44      	itt	mi
 8000b20:	2320      	movmi	r3, #32
 8000b22:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000b26:	0713      	lsls	r3, r2, #28
 8000b28:	bf44      	itt	mi
 8000b2a:	232b      	movmi	r3, #43	@ 0x2b
 8000b2c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000b30:	f89a 3000 	ldrb.w	r3, [sl]
 8000b34:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b36:	d015      	beq.n	8000b64 <_vfiprintf_r+0x120>
 8000b38:	9a07      	ldr	r2, [sp, #28]
 8000b3a:	4654      	mov	r4, sl
 8000b3c:	2000      	movs	r0, #0
 8000b3e:	f04f 0c0a 	mov.w	ip, #10
 8000b42:	4621      	mov	r1, r4
 8000b44:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b48:	3b30      	subs	r3, #48	@ 0x30
 8000b4a:	2b09      	cmp	r3, #9
 8000b4c:	d94b      	bls.n	8000be6 <_vfiprintf_r+0x1a2>
 8000b4e:	b1b0      	cbz	r0, 8000b7e <_vfiprintf_r+0x13a>
 8000b50:	9207      	str	r2, [sp, #28]
 8000b52:	e014      	b.n	8000b7e <_vfiprintf_r+0x13a>
 8000b54:	eba0 0308 	sub.w	r3, r0, r8
 8000b58:	46a2      	mov	sl, r4
 8000b5a:	fa09 f303 	lsl.w	r3, r9, r3
 8000b5e:	4313      	orrs	r3, r2
 8000b60:	9304      	str	r3, [sp, #16]
 8000b62:	e7d2      	b.n	8000b0a <_vfiprintf_r+0xc6>
 8000b64:	9b03      	ldr	r3, [sp, #12]
 8000b66:	1d19      	adds	r1, r3, #4
 8000b68:	681b      	ldr	r3, [r3, #0]
 8000b6a:	2b00      	cmp	r3, #0
 8000b6c:	9103      	str	r1, [sp, #12]
 8000b6e:	bfbb      	ittet	lt
 8000b70:	425b      	neglt	r3, r3
 8000b72:	f042 0202 	orrlt.w	r2, r2, #2
 8000b76:	9307      	strge	r3, [sp, #28]
 8000b78:	9307      	strlt	r3, [sp, #28]
 8000b7a:	bfb8      	it	lt
 8000b7c:	9204      	strlt	r2, [sp, #16]
 8000b7e:	7823      	ldrb	r3, [r4, #0]
 8000b80:	2b2e      	cmp	r3, #46	@ 0x2e
 8000b82:	d10a      	bne.n	8000b9a <_vfiprintf_r+0x156>
 8000b84:	7863      	ldrb	r3, [r4, #1]
 8000b86:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b88:	d132      	bne.n	8000bf0 <_vfiprintf_r+0x1ac>
 8000b8a:	9b03      	ldr	r3, [sp, #12]
 8000b8c:	3402      	adds	r4, #2
 8000b8e:	1d1a      	adds	r2, r3, #4
 8000b90:	681b      	ldr	r3, [r3, #0]
 8000b92:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000b96:	9203      	str	r2, [sp, #12]
 8000b98:	9305      	str	r3, [sp, #20]
 8000b9a:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000c64 <_vfiprintf_r+0x220>
 8000b9e:	2203      	movs	r2, #3
 8000ba0:	7821      	ldrb	r1, [r4, #0]
 8000ba2:	4650      	mov	r0, sl
 8000ba4:	f000 fb42 	bl	800122c <memchr>
 8000ba8:	b138      	cbz	r0, 8000bba <_vfiprintf_r+0x176>
 8000baa:	eba0 000a 	sub.w	r0, r0, sl
 8000bae:	2240      	movs	r2, #64	@ 0x40
 8000bb0:	9b04      	ldr	r3, [sp, #16]
 8000bb2:	3401      	adds	r4, #1
 8000bb4:	4082      	lsls	r2, r0
 8000bb6:	4313      	orrs	r3, r2
 8000bb8:	9304      	str	r3, [sp, #16]
 8000bba:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bbe:	2206      	movs	r2, #6
 8000bc0:	4829      	ldr	r0, [pc, #164]	@ (8000c68 <_vfiprintf_r+0x224>)
 8000bc2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000bc6:	f000 fb31 	bl	800122c <memchr>
 8000bca:	2800      	cmp	r0, #0
 8000bcc:	d03f      	beq.n	8000c4e <_vfiprintf_r+0x20a>
 8000bce:	4b27      	ldr	r3, [pc, #156]	@ (8000c6c <_vfiprintf_r+0x228>)
 8000bd0:	bb1b      	cbnz	r3, 8000c1a <_vfiprintf_r+0x1d6>
 8000bd2:	9b03      	ldr	r3, [sp, #12]
 8000bd4:	3307      	adds	r3, #7
 8000bd6:	f023 0307 	bic.w	r3, r3, #7
 8000bda:	3308      	adds	r3, #8
 8000bdc:	9303      	str	r3, [sp, #12]
 8000bde:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000be0:	443b      	add	r3, r7
 8000be2:	9309      	str	r3, [sp, #36]	@ 0x24
 8000be4:	e76a      	b.n	8000abc <_vfiprintf_r+0x78>
 8000be6:	fb0c 3202 	mla	r2, ip, r2, r3
 8000bea:	460c      	mov	r4, r1
 8000bec:	2001      	movs	r0, #1
 8000bee:	e7a8      	b.n	8000b42 <_vfiprintf_r+0xfe>
 8000bf0:	2300      	movs	r3, #0
 8000bf2:	3401      	adds	r4, #1
 8000bf4:	f04f 0c0a 	mov.w	ip, #10
 8000bf8:	4619      	mov	r1, r3
 8000bfa:	9305      	str	r3, [sp, #20]
 8000bfc:	4620      	mov	r0, r4
 8000bfe:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c02:	3a30      	subs	r2, #48	@ 0x30
 8000c04:	2a09      	cmp	r2, #9
 8000c06:	d903      	bls.n	8000c10 <_vfiprintf_r+0x1cc>
 8000c08:	2b00      	cmp	r3, #0
 8000c0a:	d0c6      	beq.n	8000b9a <_vfiprintf_r+0x156>
 8000c0c:	9105      	str	r1, [sp, #20]
 8000c0e:	e7c4      	b.n	8000b9a <_vfiprintf_r+0x156>
 8000c10:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c14:	4604      	mov	r4, r0
 8000c16:	2301      	movs	r3, #1
 8000c18:	e7f0      	b.n	8000bfc <_vfiprintf_r+0x1b8>
 8000c1a:	ab03      	add	r3, sp, #12
 8000c1c:	462a      	mov	r2, r5
 8000c1e:	a904      	add	r1, sp, #16
 8000c20:	4630      	mov	r0, r6
 8000c22:	9300      	str	r3, [sp, #0]
 8000c24:	4b12      	ldr	r3, [pc, #72]	@ (8000c70 <_vfiprintf_r+0x22c>)
 8000c26:	f3af 8000 	nop.w
 8000c2a:	4607      	mov	r7, r0
 8000c2c:	1c78      	adds	r0, r7, #1
 8000c2e:	d1d6      	bne.n	8000bde <_vfiprintf_r+0x19a>
 8000c30:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c32:	07d9      	lsls	r1, r3, #31
 8000c34:	d405      	bmi.n	8000c42 <_vfiprintf_r+0x1fe>
 8000c36:	89ab      	ldrh	r3, [r5, #12]
 8000c38:	059a      	lsls	r2, r3, #22
 8000c3a:	d402      	bmi.n	8000c42 <_vfiprintf_r+0x1fe>
 8000c3c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c3e:	f7ff fddf 	bl	8000800 <__retarget_lock_release_recursive>
 8000c42:	89ab      	ldrh	r3, [r5, #12]
 8000c44:	065b      	lsls	r3, r3, #25
 8000c46:	f53f af1f 	bmi.w	8000a88 <_vfiprintf_r+0x44>
 8000c4a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000c4c:	e71e      	b.n	8000a8c <_vfiprintf_r+0x48>
 8000c4e:	ab03      	add	r3, sp, #12
 8000c50:	462a      	mov	r2, r5
 8000c52:	a904      	add	r1, sp, #16
 8000c54:	4630      	mov	r0, r6
 8000c56:	9300      	str	r3, [sp, #0]
 8000c58:	4b05      	ldr	r3, [pc, #20]	@ (8000c70 <_vfiprintf_r+0x22c>)
 8000c5a:	f000 f87d 	bl	8000d58 <_printf_i>
 8000c5e:	e7e4      	b.n	8000c2a <_vfiprintf_r+0x1e6>
 8000c60:	080013f7 	.word	0x080013f7
 8000c64:	080013fd 	.word	0x080013fd
 8000c68:	08001401 	.word	0x08001401
 8000c6c:	00000000 	.word	0x00000000
 8000c70:	08000a1f 	.word	0x08000a1f

08000c74 <_printf_common>:
 8000c74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c78:	4616      	mov	r6, r2
 8000c7a:	4698      	mov	r8, r3
 8000c7c:	688a      	ldr	r2, [r1, #8]
 8000c7e:	4607      	mov	r7, r0
 8000c80:	690b      	ldr	r3, [r1, #16]
 8000c82:	460c      	mov	r4, r1
 8000c84:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000c88:	4293      	cmp	r3, r2
 8000c8a:	bfb8      	it	lt
 8000c8c:	4613      	movlt	r3, r2
 8000c8e:	6033      	str	r3, [r6, #0]
 8000c90:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000c94:	b10a      	cbz	r2, 8000c9a <_printf_common+0x26>
 8000c96:	3301      	adds	r3, #1
 8000c98:	6033      	str	r3, [r6, #0]
 8000c9a:	6823      	ldr	r3, [r4, #0]
 8000c9c:	0699      	lsls	r1, r3, #26
 8000c9e:	bf42      	ittt	mi
 8000ca0:	6833      	ldrmi	r3, [r6, #0]
 8000ca2:	3302      	addmi	r3, #2
 8000ca4:	6033      	strmi	r3, [r6, #0]
 8000ca6:	6825      	ldr	r5, [r4, #0]
 8000ca8:	f015 0506 	ands.w	r5, r5, #6
 8000cac:	d106      	bne.n	8000cbc <_printf_common+0x48>
 8000cae:	f104 0a19 	add.w	sl, r4, #25
 8000cb2:	68e3      	ldr	r3, [r4, #12]
 8000cb4:	6832      	ldr	r2, [r6, #0]
 8000cb6:	1a9b      	subs	r3, r3, r2
 8000cb8:	42ab      	cmp	r3, r5
 8000cba:	dc2b      	bgt.n	8000d14 <_printf_common+0xa0>
 8000cbc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000cc0:	6822      	ldr	r2, [r4, #0]
 8000cc2:	3b00      	subs	r3, #0
 8000cc4:	bf18      	it	ne
 8000cc6:	2301      	movne	r3, #1
 8000cc8:	0692      	lsls	r2, r2, #26
 8000cca:	d430      	bmi.n	8000d2e <_printf_common+0xba>
 8000ccc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000cd0:	4641      	mov	r1, r8
 8000cd2:	4638      	mov	r0, r7
 8000cd4:	47c8      	blx	r9
 8000cd6:	3001      	adds	r0, #1
 8000cd8:	d023      	beq.n	8000d22 <_printf_common+0xae>
 8000cda:	6823      	ldr	r3, [r4, #0]
 8000cdc:	341a      	adds	r4, #26
 8000cde:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8000ce2:	f003 0306 	and.w	r3, r3, #6
 8000ce6:	2b04      	cmp	r3, #4
 8000ce8:	bf0a      	itet	eq
 8000cea:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 8000cee:	2500      	movne	r5, #0
 8000cf0:	6833      	ldreq	r3, [r6, #0]
 8000cf2:	f04f 0600 	mov.w	r6, #0
 8000cf6:	bf08      	it	eq
 8000cf8:	1aed      	subeq	r5, r5, r3
 8000cfa:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000cfe:	bf08      	it	eq
 8000d00:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d04:	4293      	cmp	r3, r2
 8000d06:	bfc4      	itt	gt
 8000d08:	1a9b      	subgt	r3, r3, r2
 8000d0a:	18ed      	addgt	r5, r5, r3
 8000d0c:	42b5      	cmp	r5, r6
 8000d0e:	d11a      	bne.n	8000d46 <_printf_common+0xd2>
 8000d10:	2000      	movs	r0, #0
 8000d12:	e008      	b.n	8000d26 <_printf_common+0xb2>
 8000d14:	2301      	movs	r3, #1
 8000d16:	4652      	mov	r2, sl
 8000d18:	4641      	mov	r1, r8
 8000d1a:	4638      	mov	r0, r7
 8000d1c:	47c8      	blx	r9
 8000d1e:	3001      	adds	r0, #1
 8000d20:	d103      	bne.n	8000d2a <_printf_common+0xb6>
 8000d22:	f04f 30ff 	mov.w	r0, #4294967295
 8000d26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d2a:	3501      	adds	r5, #1
 8000d2c:	e7c1      	b.n	8000cb2 <_printf_common+0x3e>
 8000d2e:	18e1      	adds	r1, r4, r3
 8000d30:	1c5a      	adds	r2, r3, #1
 8000d32:	2030      	movs	r0, #48	@ 0x30
 8000d34:	3302      	adds	r3, #2
 8000d36:	4422      	add	r2, r4
 8000d38:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000d3c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000d40:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000d44:	e7c2      	b.n	8000ccc <_printf_common+0x58>
 8000d46:	2301      	movs	r3, #1
 8000d48:	4622      	mov	r2, r4
 8000d4a:	4641      	mov	r1, r8
 8000d4c:	4638      	mov	r0, r7
 8000d4e:	47c8      	blx	r9
 8000d50:	3001      	adds	r0, #1
 8000d52:	d0e6      	beq.n	8000d22 <_printf_common+0xae>
 8000d54:	3601      	adds	r6, #1
 8000d56:	e7d9      	b.n	8000d0c <_printf_common+0x98>

08000d58 <_printf_i>:
 8000d58:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d5c:	7e0f      	ldrb	r7, [r1, #24]
 8000d5e:	4691      	mov	r9, r2
 8000d60:	4680      	mov	r8, r0
 8000d62:	460c      	mov	r4, r1
 8000d64:	2f78      	cmp	r7, #120	@ 0x78
 8000d66:	469a      	mov	sl, r3
 8000d68:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000d6a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000d6e:	d807      	bhi.n	8000d80 <_printf_i+0x28>
 8000d70:	2f62      	cmp	r7, #98	@ 0x62
 8000d72:	d80a      	bhi.n	8000d8a <_printf_i+0x32>
 8000d74:	2f00      	cmp	r7, #0
 8000d76:	f000 80d1 	beq.w	8000f1c <_printf_i+0x1c4>
 8000d7a:	2f58      	cmp	r7, #88	@ 0x58
 8000d7c:	f000 80b8 	beq.w	8000ef0 <_printf_i+0x198>
 8000d80:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000d84:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000d88:	e03a      	b.n	8000e00 <_printf_i+0xa8>
 8000d8a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000d8e:	2b15      	cmp	r3, #21
 8000d90:	d8f6      	bhi.n	8000d80 <_printf_i+0x28>
 8000d92:	a101      	add	r1, pc, #4	@ (adr r1, 8000d98 <_printf_i+0x40>)
 8000d94:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d98:	08000df1 	.word	0x08000df1
 8000d9c:	08000e05 	.word	0x08000e05
 8000da0:	08000d81 	.word	0x08000d81
 8000da4:	08000d81 	.word	0x08000d81
 8000da8:	08000d81 	.word	0x08000d81
 8000dac:	08000d81 	.word	0x08000d81
 8000db0:	08000e05 	.word	0x08000e05
 8000db4:	08000d81 	.word	0x08000d81
 8000db8:	08000d81 	.word	0x08000d81
 8000dbc:	08000d81 	.word	0x08000d81
 8000dc0:	08000d81 	.word	0x08000d81
 8000dc4:	08000f03 	.word	0x08000f03
 8000dc8:	08000e2f 	.word	0x08000e2f
 8000dcc:	08000ebd 	.word	0x08000ebd
 8000dd0:	08000d81 	.word	0x08000d81
 8000dd4:	08000d81 	.word	0x08000d81
 8000dd8:	08000f25 	.word	0x08000f25
 8000ddc:	08000d81 	.word	0x08000d81
 8000de0:	08000e2f 	.word	0x08000e2f
 8000de4:	08000d81 	.word	0x08000d81
 8000de8:	08000d81 	.word	0x08000d81
 8000dec:	08000ec5 	.word	0x08000ec5
 8000df0:	6833      	ldr	r3, [r6, #0]
 8000df2:	1d1a      	adds	r2, r3, #4
 8000df4:	681b      	ldr	r3, [r3, #0]
 8000df6:	6032      	str	r2, [r6, #0]
 8000df8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000dfc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000e00:	2301      	movs	r3, #1
 8000e02:	e09c      	b.n	8000f3e <_printf_i+0x1e6>
 8000e04:	6833      	ldr	r3, [r6, #0]
 8000e06:	6820      	ldr	r0, [r4, #0]
 8000e08:	1d19      	adds	r1, r3, #4
 8000e0a:	6031      	str	r1, [r6, #0]
 8000e0c:	0606      	lsls	r6, r0, #24
 8000e0e:	d501      	bpl.n	8000e14 <_printf_i+0xbc>
 8000e10:	681d      	ldr	r5, [r3, #0]
 8000e12:	e003      	b.n	8000e1c <_printf_i+0xc4>
 8000e14:	0645      	lsls	r5, r0, #25
 8000e16:	d5fb      	bpl.n	8000e10 <_printf_i+0xb8>
 8000e18:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000e1c:	2d00      	cmp	r5, #0
 8000e1e:	da03      	bge.n	8000e28 <_printf_i+0xd0>
 8000e20:	232d      	movs	r3, #45	@ 0x2d
 8000e22:	426d      	negs	r5, r5
 8000e24:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e28:	4858      	ldr	r0, [pc, #352]	@ (8000f8c <_printf_i+0x234>)
 8000e2a:	230a      	movs	r3, #10
 8000e2c:	e011      	b.n	8000e52 <_printf_i+0xfa>
 8000e2e:	6821      	ldr	r1, [r4, #0]
 8000e30:	6833      	ldr	r3, [r6, #0]
 8000e32:	0608      	lsls	r0, r1, #24
 8000e34:	f853 5b04 	ldr.w	r5, [r3], #4
 8000e38:	d402      	bmi.n	8000e40 <_printf_i+0xe8>
 8000e3a:	0649      	lsls	r1, r1, #25
 8000e3c:	bf48      	it	mi
 8000e3e:	b2ad      	uxthmi	r5, r5
 8000e40:	2f6f      	cmp	r7, #111	@ 0x6f
 8000e42:	6033      	str	r3, [r6, #0]
 8000e44:	4851      	ldr	r0, [pc, #324]	@ (8000f8c <_printf_i+0x234>)
 8000e46:	bf14      	ite	ne
 8000e48:	230a      	movne	r3, #10
 8000e4a:	2308      	moveq	r3, #8
 8000e4c:	2100      	movs	r1, #0
 8000e4e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000e52:	6866      	ldr	r6, [r4, #4]
 8000e54:	2e00      	cmp	r6, #0
 8000e56:	60a6      	str	r6, [r4, #8]
 8000e58:	db05      	blt.n	8000e66 <_printf_i+0x10e>
 8000e5a:	6821      	ldr	r1, [r4, #0]
 8000e5c:	432e      	orrs	r6, r5
 8000e5e:	f021 0104 	bic.w	r1, r1, #4
 8000e62:	6021      	str	r1, [r4, #0]
 8000e64:	d04b      	beq.n	8000efe <_printf_i+0x1a6>
 8000e66:	4616      	mov	r6, r2
 8000e68:	fbb5 f1f3 	udiv	r1, r5, r3
 8000e6c:	fb03 5711 	mls	r7, r3, r1, r5
 8000e70:	5dc7      	ldrb	r7, [r0, r7]
 8000e72:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000e76:	462f      	mov	r7, r5
 8000e78:	460d      	mov	r5, r1
 8000e7a:	42bb      	cmp	r3, r7
 8000e7c:	d9f4      	bls.n	8000e68 <_printf_i+0x110>
 8000e7e:	2b08      	cmp	r3, #8
 8000e80:	d10b      	bne.n	8000e9a <_printf_i+0x142>
 8000e82:	6823      	ldr	r3, [r4, #0]
 8000e84:	07df      	lsls	r7, r3, #31
 8000e86:	d508      	bpl.n	8000e9a <_printf_i+0x142>
 8000e88:	6923      	ldr	r3, [r4, #16]
 8000e8a:	6861      	ldr	r1, [r4, #4]
 8000e8c:	4299      	cmp	r1, r3
 8000e8e:	bfde      	ittt	le
 8000e90:	2330      	movle	r3, #48	@ 0x30
 8000e92:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000e96:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000e9a:	1b92      	subs	r2, r2, r6
 8000e9c:	6122      	str	r2, [r4, #16]
 8000e9e:	464b      	mov	r3, r9
 8000ea0:	aa03      	add	r2, sp, #12
 8000ea2:	4621      	mov	r1, r4
 8000ea4:	4640      	mov	r0, r8
 8000ea6:	f8cd a000 	str.w	sl, [sp]
 8000eaa:	f7ff fee3 	bl	8000c74 <_printf_common>
 8000eae:	3001      	adds	r0, #1
 8000eb0:	d14a      	bne.n	8000f48 <_printf_i+0x1f0>
 8000eb2:	f04f 30ff 	mov.w	r0, #4294967295
 8000eb6:	b004      	add	sp, #16
 8000eb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ebc:	6823      	ldr	r3, [r4, #0]
 8000ebe:	f043 0320 	orr.w	r3, r3, #32
 8000ec2:	6023      	str	r3, [r4, #0]
 8000ec4:	2778      	movs	r7, #120	@ 0x78
 8000ec6:	4832      	ldr	r0, [pc, #200]	@ (8000f90 <_printf_i+0x238>)
 8000ec8:	6823      	ldr	r3, [r4, #0]
 8000eca:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000ece:	061f      	lsls	r7, r3, #24
 8000ed0:	6831      	ldr	r1, [r6, #0]
 8000ed2:	f851 5b04 	ldr.w	r5, [r1], #4
 8000ed6:	d402      	bmi.n	8000ede <_printf_i+0x186>
 8000ed8:	065f      	lsls	r7, r3, #25
 8000eda:	bf48      	it	mi
 8000edc:	b2ad      	uxthmi	r5, r5
 8000ede:	6031      	str	r1, [r6, #0]
 8000ee0:	07d9      	lsls	r1, r3, #31
 8000ee2:	bf44      	itt	mi
 8000ee4:	f043 0320 	orrmi.w	r3, r3, #32
 8000ee8:	6023      	strmi	r3, [r4, #0]
 8000eea:	b11d      	cbz	r5, 8000ef4 <_printf_i+0x19c>
 8000eec:	2310      	movs	r3, #16
 8000eee:	e7ad      	b.n	8000e4c <_printf_i+0xf4>
 8000ef0:	4826      	ldr	r0, [pc, #152]	@ (8000f8c <_printf_i+0x234>)
 8000ef2:	e7e9      	b.n	8000ec8 <_printf_i+0x170>
 8000ef4:	6823      	ldr	r3, [r4, #0]
 8000ef6:	f023 0320 	bic.w	r3, r3, #32
 8000efa:	6023      	str	r3, [r4, #0]
 8000efc:	e7f6      	b.n	8000eec <_printf_i+0x194>
 8000efe:	4616      	mov	r6, r2
 8000f00:	e7bd      	b.n	8000e7e <_printf_i+0x126>
 8000f02:	6833      	ldr	r3, [r6, #0]
 8000f04:	6825      	ldr	r5, [r4, #0]
 8000f06:	1d18      	adds	r0, r3, #4
 8000f08:	6961      	ldr	r1, [r4, #20]
 8000f0a:	6030      	str	r0, [r6, #0]
 8000f0c:	062e      	lsls	r6, r5, #24
 8000f0e:	681b      	ldr	r3, [r3, #0]
 8000f10:	d501      	bpl.n	8000f16 <_printf_i+0x1be>
 8000f12:	6019      	str	r1, [r3, #0]
 8000f14:	e002      	b.n	8000f1c <_printf_i+0x1c4>
 8000f16:	0668      	lsls	r0, r5, #25
 8000f18:	d5fb      	bpl.n	8000f12 <_printf_i+0x1ba>
 8000f1a:	8019      	strh	r1, [r3, #0]
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	4616      	mov	r6, r2
 8000f20:	6123      	str	r3, [r4, #16]
 8000f22:	e7bc      	b.n	8000e9e <_printf_i+0x146>
 8000f24:	6833      	ldr	r3, [r6, #0]
 8000f26:	2100      	movs	r1, #0
 8000f28:	1d1a      	adds	r2, r3, #4
 8000f2a:	6032      	str	r2, [r6, #0]
 8000f2c:	681e      	ldr	r6, [r3, #0]
 8000f2e:	6862      	ldr	r2, [r4, #4]
 8000f30:	4630      	mov	r0, r6
 8000f32:	f000 f97b 	bl	800122c <memchr>
 8000f36:	b108      	cbz	r0, 8000f3c <_printf_i+0x1e4>
 8000f38:	1b80      	subs	r0, r0, r6
 8000f3a:	6060      	str	r0, [r4, #4]
 8000f3c:	6863      	ldr	r3, [r4, #4]
 8000f3e:	6123      	str	r3, [r4, #16]
 8000f40:	2300      	movs	r3, #0
 8000f42:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000f46:	e7aa      	b.n	8000e9e <_printf_i+0x146>
 8000f48:	6923      	ldr	r3, [r4, #16]
 8000f4a:	4632      	mov	r2, r6
 8000f4c:	4649      	mov	r1, r9
 8000f4e:	4640      	mov	r0, r8
 8000f50:	47d0      	blx	sl
 8000f52:	3001      	adds	r0, #1
 8000f54:	d0ad      	beq.n	8000eb2 <_printf_i+0x15a>
 8000f56:	6823      	ldr	r3, [r4, #0]
 8000f58:	079b      	lsls	r3, r3, #30
 8000f5a:	d413      	bmi.n	8000f84 <_printf_i+0x22c>
 8000f5c:	68e0      	ldr	r0, [r4, #12]
 8000f5e:	9b03      	ldr	r3, [sp, #12]
 8000f60:	4298      	cmp	r0, r3
 8000f62:	bfb8      	it	lt
 8000f64:	4618      	movlt	r0, r3
 8000f66:	e7a6      	b.n	8000eb6 <_printf_i+0x15e>
 8000f68:	2301      	movs	r3, #1
 8000f6a:	4632      	mov	r2, r6
 8000f6c:	4649      	mov	r1, r9
 8000f6e:	4640      	mov	r0, r8
 8000f70:	47d0      	blx	sl
 8000f72:	3001      	adds	r0, #1
 8000f74:	d09d      	beq.n	8000eb2 <_printf_i+0x15a>
 8000f76:	3501      	adds	r5, #1
 8000f78:	68e3      	ldr	r3, [r4, #12]
 8000f7a:	9903      	ldr	r1, [sp, #12]
 8000f7c:	1a5b      	subs	r3, r3, r1
 8000f7e:	42ab      	cmp	r3, r5
 8000f80:	dcf2      	bgt.n	8000f68 <_printf_i+0x210>
 8000f82:	e7eb      	b.n	8000f5c <_printf_i+0x204>
 8000f84:	2500      	movs	r5, #0
 8000f86:	f104 0619 	add.w	r6, r4, #25
 8000f8a:	e7f5      	b.n	8000f78 <_printf_i+0x220>
 8000f8c:	08001408 	.word	0x08001408
 8000f90:	08001419 	.word	0x08001419

08000f94 <__sflush_r>:
 8000f94:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f9a:	0716      	lsls	r6, r2, #28
 8000f9c:	4605      	mov	r5, r0
 8000f9e:	460c      	mov	r4, r1
 8000fa0:	d454      	bmi.n	800104c <__sflush_r+0xb8>
 8000fa2:	684b      	ldr	r3, [r1, #4]
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	dc02      	bgt.n	8000fae <__sflush_r+0x1a>
 8000fa8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	dd48      	ble.n	8001040 <__sflush_r+0xac>
 8000fae:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000fb0:	2e00      	cmp	r6, #0
 8000fb2:	d045      	beq.n	8001040 <__sflush_r+0xac>
 8000fb4:	2300      	movs	r3, #0
 8000fb6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000fba:	682f      	ldr	r7, [r5, #0]
 8000fbc:	6a21      	ldr	r1, [r4, #32]
 8000fbe:	602b      	str	r3, [r5, #0]
 8000fc0:	d030      	beq.n	8001024 <__sflush_r+0x90>
 8000fc2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000fc4:	89a3      	ldrh	r3, [r4, #12]
 8000fc6:	0759      	lsls	r1, r3, #29
 8000fc8:	d505      	bpl.n	8000fd6 <__sflush_r+0x42>
 8000fca:	6863      	ldr	r3, [r4, #4]
 8000fcc:	1ad2      	subs	r2, r2, r3
 8000fce:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000fd0:	b10b      	cbz	r3, 8000fd6 <__sflush_r+0x42>
 8000fd2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000fd4:	1ad2      	subs	r2, r2, r3
 8000fd6:	2300      	movs	r3, #0
 8000fd8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000fda:	6a21      	ldr	r1, [r4, #32]
 8000fdc:	4628      	mov	r0, r5
 8000fde:	47b0      	blx	r6
 8000fe0:	1c43      	adds	r3, r0, #1
 8000fe2:	89a3      	ldrh	r3, [r4, #12]
 8000fe4:	d106      	bne.n	8000ff4 <__sflush_r+0x60>
 8000fe6:	6829      	ldr	r1, [r5, #0]
 8000fe8:	291d      	cmp	r1, #29
 8000fea:	d82b      	bhi.n	8001044 <__sflush_r+0xb0>
 8000fec:	4a28      	ldr	r2, [pc, #160]	@ (8001090 <__sflush_r+0xfc>)
 8000fee:	40ca      	lsrs	r2, r1
 8000ff0:	07d6      	lsls	r6, r2, #31
 8000ff2:	d527      	bpl.n	8001044 <__sflush_r+0xb0>
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	04d9      	lsls	r1, r3, #19
 8000ff8:	6062      	str	r2, [r4, #4]
 8000ffa:	6922      	ldr	r2, [r4, #16]
 8000ffc:	6022      	str	r2, [r4, #0]
 8000ffe:	d504      	bpl.n	800100a <__sflush_r+0x76>
 8001000:	1c42      	adds	r2, r0, #1
 8001002:	d101      	bne.n	8001008 <__sflush_r+0x74>
 8001004:	682b      	ldr	r3, [r5, #0]
 8001006:	b903      	cbnz	r3, 800100a <__sflush_r+0x76>
 8001008:	6560      	str	r0, [r4, #84]	@ 0x54
 800100a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800100c:	602f      	str	r7, [r5, #0]
 800100e:	b1b9      	cbz	r1, 8001040 <__sflush_r+0xac>
 8001010:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001014:	4299      	cmp	r1, r3
 8001016:	d002      	beq.n	800101e <__sflush_r+0x8a>
 8001018:	4628      	mov	r0, r5
 800101a:	f7ff fbf3 	bl	8000804 <_free_r>
 800101e:	2300      	movs	r3, #0
 8001020:	6363      	str	r3, [r4, #52]	@ 0x34
 8001022:	e00d      	b.n	8001040 <__sflush_r+0xac>
 8001024:	2301      	movs	r3, #1
 8001026:	4628      	mov	r0, r5
 8001028:	47b0      	blx	r6
 800102a:	4602      	mov	r2, r0
 800102c:	1c50      	adds	r0, r2, #1
 800102e:	d1c9      	bne.n	8000fc4 <__sflush_r+0x30>
 8001030:	682b      	ldr	r3, [r5, #0]
 8001032:	2b00      	cmp	r3, #0
 8001034:	d0c6      	beq.n	8000fc4 <__sflush_r+0x30>
 8001036:	2b1d      	cmp	r3, #29
 8001038:	d001      	beq.n	800103e <__sflush_r+0xaa>
 800103a:	2b16      	cmp	r3, #22
 800103c:	d11c      	bne.n	8001078 <__sflush_r+0xe4>
 800103e:	602f      	str	r7, [r5, #0]
 8001040:	2000      	movs	r0, #0
 8001042:	e020      	b.n	8001086 <__sflush_r+0xf2>
 8001044:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001048:	b21b      	sxth	r3, r3
 800104a:	e019      	b.n	8001080 <__sflush_r+0xec>
 800104c:	690f      	ldr	r7, [r1, #16]
 800104e:	2f00      	cmp	r7, #0
 8001050:	d0f6      	beq.n	8001040 <__sflush_r+0xac>
 8001052:	0793      	lsls	r3, r2, #30
 8001054:	680e      	ldr	r6, [r1, #0]
 8001056:	600f      	str	r7, [r1, #0]
 8001058:	bf0c      	ite	eq
 800105a:	694b      	ldreq	r3, [r1, #20]
 800105c:	2300      	movne	r3, #0
 800105e:	1bf6      	subs	r6, r6, r7
 8001060:	608b      	str	r3, [r1, #8]
 8001062:	2e00      	cmp	r6, #0
 8001064:	ddec      	ble.n	8001040 <__sflush_r+0xac>
 8001066:	4633      	mov	r3, r6
 8001068:	463a      	mov	r2, r7
 800106a:	6a21      	ldr	r1, [r4, #32]
 800106c:	4628      	mov	r0, r5
 800106e:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8001072:	47e0      	blx	ip
 8001074:	2800      	cmp	r0, #0
 8001076:	dc07      	bgt.n	8001088 <__sflush_r+0xf4>
 8001078:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800107c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001080:	f04f 30ff 	mov.w	r0, #4294967295
 8001084:	81a3      	strh	r3, [r4, #12]
 8001086:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001088:	4407      	add	r7, r0
 800108a:	1a36      	subs	r6, r6, r0
 800108c:	e7e9      	b.n	8001062 <__sflush_r+0xce>
 800108e:	bf00      	nop
 8001090:	20400001 	.word	0x20400001

08001094 <_fflush_r>:
 8001094:	b538      	push	{r3, r4, r5, lr}
 8001096:	690b      	ldr	r3, [r1, #16]
 8001098:	4605      	mov	r5, r0
 800109a:	460c      	mov	r4, r1
 800109c:	b913      	cbnz	r3, 80010a4 <_fflush_r+0x10>
 800109e:	2500      	movs	r5, #0
 80010a0:	4628      	mov	r0, r5
 80010a2:	bd38      	pop	{r3, r4, r5, pc}
 80010a4:	b118      	cbz	r0, 80010ae <_fflush_r+0x1a>
 80010a6:	6a03      	ldr	r3, [r0, #32]
 80010a8:	b90b      	cbnz	r3, 80010ae <_fflush_r+0x1a>
 80010aa:	f7ff faa3 	bl	80005f4 <__sinit>
 80010ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010b2:	2b00      	cmp	r3, #0
 80010b4:	d0f3      	beq.n	800109e <_fflush_r+0xa>
 80010b6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80010b8:	07d0      	lsls	r0, r2, #31
 80010ba:	d404      	bmi.n	80010c6 <_fflush_r+0x32>
 80010bc:	0599      	lsls	r1, r3, #22
 80010be:	d402      	bmi.n	80010c6 <_fflush_r+0x32>
 80010c0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80010c2:	f7ff fb9c 	bl	80007fe <__retarget_lock_acquire_recursive>
 80010c6:	4628      	mov	r0, r5
 80010c8:	4621      	mov	r1, r4
 80010ca:	f7ff ff63 	bl	8000f94 <__sflush_r>
 80010ce:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80010d0:	4605      	mov	r5, r0
 80010d2:	07da      	lsls	r2, r3, #31
 80010d4:	d4e4      	bmi.n	80010a0 <_fflush_r+0xc>
 80010d6:	89a3      	ldrh	r3, [r4, #12]
 80010d8:	059b      	lsls	r3, r3, #22
 80010da:	d4e1      	bmi.n	80010a0 <_fflush_r+0xc>
 80010dc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80010de:	f7ff fb8f 	bl	8000800 <__retarget_lock_release_recursive>
 80010e2:	e7dd      	b.n	80010a0 <_fflush_r+0xc>

080010e4 <__swbuf_r>:
 80010e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010e6:	460e      	mov	r6, r1
 80010e8:	4614      	mov	r4, r2
 80010ea:	4605      	mov	r5, r0
 80010ec:	b118      	cbz	r0, 80010f6 <__swbuf_r+0x12>
 80010ee:	6a03      	ldr	r3, [r0, #32]
 80010f0:	b90b      	cbnz	r3, 80010f6 <__swbuf_r+0x12>
 80010f2:	f7ff fa7f 	bl	80005f4 <__sinit>
 80010f6:	69a3      	ldr	r3, [r4, #24]
 80010f8:	60a3      	str	r3, [r4, #8]
 80010fa:	89a3      	ldrh	r3, [r4, #12]
 80010fc:	071a      	lsls	r2, r3, #28
 80010fe:	d501      	bpl.n	8001104 <__swbuf_r+0x20>
 8001100:	6923      	ldr	r3, [r4, #16]
 8001102:	b943      	cbnz	r3, 8001116 <__swbuf_r+0x32>
 8001104:	4621      	mov	r1, r4
 8001106:	4628      	mov	r0, r5
 8001108:	f000 f82a 	bl	8001160 <__swsetup_r>
 800110c:	b118      	cbz	r0, 8001116 <__swbuf_r+0x32>
 800110e:	f04f 37ff 	mov.w	r7, #4294967295
 8001112:	4638      	mov	r0, r7
 8001114:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001116:	6823      	ldr	r3, [r4, #0]
 8001118:	b2f6      	uxtb	r6, r6
 800111a:	6922      	ldr	r2, [r4, #16]
 800111c:	4637      	mov	r7, r6
 800111e:	1a98      	subs	r0, r3, r2
 8001120:	6963      	ldr	r3, [r4, #20]
 8001122:	4283      	cmp	r3, r0
 8001124:	dc05      	bgt.n	8001132 <__swbuf_r+0x4e>
 8001126:	4621      	mov	r1, r4
 8001128:	4628      	mov	r0, r5
 800112a:	f7ff ffb3 	bl	8001094 <_fflush_r>
 800112e:	2800      	cmp	r0, #0
 8001130:	d1ed      	bne.n	800110e <__swbuf_r+0x2a>
 8001132:	68a3      	ldr	r3, [r4, #8]
 8001134:	3b01      	subs	r3, #1
 8001136:	60a3      	str	r3, [r4, #8]
 8001138:	6823      	ldr	r3, [r4, #0]
 800113a:	1c5a      	adds	r2, r3, #1
 800113c:	6022      	str	r2, [r4, #0]
 800113e:	701e      	strb	r6, [r3, #0]
 8001140:	1c43      	adds	r3, r0, #1
 8001142:	6962      	ldr	r2, [r4, #20]
 8001144:	429a      	cmp	r2, r3
 8001146:	d004      	beq.n	8001152 <__swbuf_r+0x6e>
 8001148:	89a3      	ldrh	r3, [r4, #12]
 800114a:	07db      	lsls	r3, r3, #31
 800114c:	d5e1      	bpl.n	8001112 <__swbuf_r+0x2e>
 800114e:	2e0a      	cmp	r6, #10
 8001150:	d1df      	bne.n	8001112 <__swbuf_r+0x2e>
 8001152:	4621      	mov	r1, r4
 8001154:	4628      	mov	r0, r5
 8001156:	f7ff ff9d 	bl	8001094 <_fflush_r>
 800115a:	2800      	cmp	r0, #0
 800115c:	d0d9      	beq.n	8001112 <__swbuf_r+0x2e>
 800115e:	e7d6      	b.n	800110e <__swbuf_r+0x2a>

08001160 <__swsetup_r>:
 8001160:	b538      	push	{r3, r4, r5, lr}
 8001162:	4b29      	ldr	r3, [pc, #164]	@ (8001208 <__swsetup_r+0xa8>)
 8001164:	4605      	mov	r5, r0
 8001166:	460c      	mov	r4, r1
 8001168:	6818      	ldr	r0, [r3, #0]
 800116a:	b118      	cbz	r0, 8001174 <__swsetup_r+0x14>
 800116c:	6a03      	ldr	r3, [r0, #32]
 800116e:	b90b      	cbnz	r3, 8001174 <__swsetup_r+0x14>
 8001170:	f7ff fa40 	bl	80005f4 <__sinit>
 8001174:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001178:	0719      	lsls	r1, r3, #28
 800117a:	d422      	bmi.n	80011c2 <__swsetup_r+0x62>
 800117c:	06da      	lsls	r2, r3, #27
 800117e:	d407      	bmi.n	8001190 <__swsetup_r+0x30>
 8001180:	2209      	movs	r2, #9
 8001182:	602a      	str	r2, [r5, #0]
 8001184:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001188:	f04f 30ff 	mov.w	r0, #4294967295
 800118c:	81a3      	strh	r3, [r4, #12]
 800118e:	e033      	b.n	80011f8 <__swsetup_r+0x98>
 8001190:	0758      	lsls	r0, r3, #29
 8001192:	d512      	bpl.n	80011ba <__swsetup_r+0x5a>
 8001194:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001196:	b141      	cbz	r1, 80011aa <__swsetup_r+0x4a>
 8001198:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800119c:	4299      	cmp	r1, r3
 800119e:	d002      	beq.n	80011a6 <__swsetup_r+0x46>
 80011a0:	4628      	mov	r0, r5
 80011a2:	f7ff fb2f 	bl	8000804 <_free_r>
 80011a6:	2300      	movs	r3, #0
 80011a8:	6363      	str	r3, [r4, #52]	@ 0x34
 80011aa:	89a3      	ldrh	r3, [r4, #12]
 80011ac:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80011b0:	81a3      	strh	r3, [r4, #12]
 80011b2:	2300      	movs	r3, #0
 80011b4:	6063      	str	r3, [r4, #4]
 80011b6:	6923      	ldr	r3, [r4, #16]
 80011b8:	6023      	str	r3, [r4, #0]
 80011ba:	89a3      	ldrh	r3, [r4, #12]
 80011bc:	f043 0308 	orr.w	r3, r3, #8
 80011c0:	81a3      	strh	r3, [r4, #12]
 80011c2:	6923      	ldr	r3, [r4, #16]
 80011c4:	b94b      	cbnz	r3, 80011da <__swsetup_r+0x7a>
 80011c6:	89a3      	ldrh	r3, [r4, #12]
 80011c8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80011cc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80011d0:	d003      	beq.n	80011da <__swsetup_r+0x7a>
 80011d2:	4621      	mov	r1, r4
 80011d4:	4628      	mov	r0, r5
 80011d6:	f000 f85c 	bl	8001292 <__smakebuf_r>
 80011da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011de:	f013 0201 	ands.w	r2, r3, #1
 80011e2:	d00a      	beq.n	80011fa <__swsetup_r+0x9a>
 80011e4:	2200      	movs	r2, #0
 80011e6:	60a2      	str	r2, [r4, #8]
 80011e8:	6962      	ldr	r2, [r4, #20]
 80011ea:	4252      	negs	r2, r2
 80011ec:	61a2      	str	r2, [r4, #24]
 80011ee:	6922      	ldr	r2, [r4, #16]
 80011f0:	b942      	cbnz	r2, 8001204 <__swsetup_r+0xa4>
 80011f2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80011f6:	d1c5      	bne.n	8001184 <__swsetup_r+0x24>
 80011f8:	bd38      	pop	{r3, r4, r5, pc}
 80011fa:	0799      	lsls	r1, r3, #30
 80011fc:	bf58      	it	pl
 80011fe:	6962      	ldrpl	r2, [r4, #20]
 8001200:	60a2      	str	r2, [r4, #8]
 8001202:	e7f4      	b.n	80011ee <__swsetup_r+0x8e>
 8001204:	2000      	movs	r0, #0
 8001206:	e7f7      	b.n	80011f8 <__swsetup_r+0x98>
 8001208:	2000000c 	.word	0x2000000c

0800120c <_sbrk_r>:
 800120c:	b538      	push	{r3, r4, r5, lr}
 800120e:	2300      	movs	r3, #0
 8001210:	4d05      	ldr	r5, [pc, #20]	@ (8001228 <_sbrk_r+0x1c>)
 8001212:	4604      	mov	r4, r0
 8001214:	4608      	mov	r0, r1
 8001216:	602b      	str	r3, [r5, #0]
 8001218:	f7ff f900 	bl	800041c <_sbrk>
 800121c:	1c43      	adds	r3, r0, #1
 800121e:	d102      	bne.n	8001226 <_sbrk_r+0x1a>
 8001220:	682b      	ldr	r3, [r5, #0]
 8001222:	b103      	cbz	r3, 8001226 <_sbrk_r+0x1a>
 8001224:	6023      	str	r3, [r4, #0]
 8001226:	bd38      	pop	{r3, r4, r5, pc}
 8001228:	200001b8 	.word	0x200001b8

0800122c <memchr>:
 800122c:	b2c9      	uxtb	r1, r1
 800122e:	4603      	mov	r3, r0
 8001230:	4402      	add	r2, r0
 8001232:	b510      	push	{r4, lr}
 8001234:	4293      	cmp	r3, r2
 8001236:	4618      	mov	r0, r3
 8001238:	d101      	bne.n	800123e <memchr+0x12>
 800123a:	2000      	movs	r0, #0
 800123c:	e003      	b.n	8001246 <memchr+0x1a>
 800123e:	7804      	ldrb	r4, [r0, #0]
 8001240:	3301      	adds	r3, #1
 8001242:	428c      	cmp	r4, r1
 8001244:	d1f6      	bne.n	8001234 <memchr+0x8>
 8001246:	bd10      	pop	{r4, pc}

08001248 <__swhatbuf_r>:
 8001248:	b570      	push	{r4, r5, r6, lr}
 800124a:	460c      	mov	r4, r1
 800124c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001250:	b096      	sub	sp, #88	@ 0x58
 8001252:	4615      	mov	r5, r2
 8001254:	2900      	cmp	r1, #0
 8001256:	461e      	mov	r6, r3
 8001258:	da0c      	bge.n	8001274 <__swhatbuf_r+0x2c>
 800125a:	89a3      	ldrh	r3, [r4, #12]
 800125c:	2100      	movs	r1, #0
 800125e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001262:	bf14      	ite	ne
 8001264:	2340      	movne	r3, #64	@ 0x40
 8001266:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800126a:	2000      	movs	r0, #0
 800126c:	6031      	str	r1, [r6, #0]
 800126e:	602b      	str	r3, [r5, #0]
 8001270:	b016      	add	sp, #88	@ 0x58
 8001272:	bd70      	pop	{r4, r5, r6, pc}
 8001274:	466a      	mov	r2, sp
 8001276:	f000 f849 	bl	800130c <_fstat_r>
 800127a:	2800      	cmp	r0, #0
 800127c:	dbed      	blt.n	800125a <__swhatbuf_r+0x12>
 800127e:	9901      	ldr	r1, [sp, #4]
 8001280:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001284:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001288:	4259      	negs	r1, r3
 800128a:	4159      	adcs	r1, r3
 800128c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001290:	e7eb      	b.n	800126a <__swhatbuf_r+0x22>

08001292 <__smakebuf_r>:
 8001292:	898b      	ldrh	r3, [r1, #12]
 8001294:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001296:	079d      	lsls	r5, r3, #30
 8001298:	4606      	mov	r6, r0
 800129a:	460c      	mov	r4, r1
 800129c:	d507      	bpl.n	80012ae <__smakebuf_r+0x1c>
 800129e:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80012a2:	6023      	str	r3, [r4, #0]
 80012a4:	6123      	str	r3, [r4, #16]
 80012a6:	2301      	movs	r3, #1
 80012a8:	6163      	str	r3, [r4, #20]
 80012aa:	b003      	add	sp, #12
 80012ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012ae:	ab01      	add	r3, sp, #4
 80012b0:	466a      	mov	r2, sp
 80012b2:	f7ff ffc9 	bl	8001248 <__swhatbuf_r>
 80012b6:	9f00      	ldr	r7, [sp, #0]
 80012b8:	4605      	mov	r5, r0
 80012ba:	4630      	mov	r0, r6
 80012bc:	4639      	mov	r1, r7
 80012be:	f7ff fb0d 	bl	80008dc <_malloc_r>
 80012c2:	b948      	cbnz	r0, 80012d8 <__smakebuf_r+0x46>
 80012c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012c8:	059a      	lsls	r2, r3, #22
 80012ca:	d4ee      	bmi.n	80012aa <__smakebuf_r+0x18>
 80012cc:	f023 0303 	bic.w	r3, r3, #3
 80012d0:	f043 0302 	orr.w	r3, r3, #2
 80012d4:	81a3      	strh	r3, [r4, #12]
 80012d6:	e7e2      	b.n	800129e <__smakebuf_r+0xc>
 80012d8:	89a3      	ldrh	r3, [r4, #12]
 80012da:	6020      	str	r0, [r4, #0]
 80012dc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80012e0:	81a3      	strh	r3, [r4, #12]
 80012e2:	9b01      	ldr	r3, [sp, #4]
 80012e4:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80012e8:	b15b      	cbz	r3, 8001302 <__smakebuf_r+0x70>
 80012ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012ee:	4630      	mov	r0, r6
 80012f0:	f000 f81e 	bl	8001330 <_isatty_r>
 80012f4:	b128      	cbz	r0, 8001302 <__smakebuf_r+0x70>
 80012f6:	89a3      	ldrh	r3, [r4, #12]
 80012f8:	f023 0303 	bic.w	r3, r3, #3
 80012fc:	f043 0301 	orr.w	r3, r3, #1
 8001300:	81a3      	strh	r3, [r4, #12]
 8001302:	89a3      	ldrh	r3, [r4, #12]
 8001304:	431d      	orrs	r5, r3
 8001306:	81a5      	strh	r5, [r4, #12]
 8001308:	e7cf      	b.n	80012aa <__smakebuf_r+0x18>
	...

0800130c <_fstat_r>:
 800130c:	b538      	push	{r3, r4, r5, lr}
 800130e:	2300      	movs	r3, #0
 8001310:	4d06      	ldr	r5, [pc, #24]	@ (800132c <_fstat_r+0x20>)
 8001312:	4604      	mov	r4, r0
 8001314:	4608      	mov	r0, r1
 8001316:	4611      	mov	r1, r2
 8001318:	602b      	str	r3, [r5, #0]
 800131a:	f7ff f859 	bl	80003d0 <_fstat>
 800131e:	1c43      	adds	r3, r0, #1
 8001320:	d102      	bne.n	8001328 <_fstat_r+0x1c>
 8001322:	682b      	ldr	r3, [r5, #0]
 8001324:	b103      	cbz	r3, 8001328 <_fstat_r+0x1c>
 8001326:	6023      	str	r3, [r4, #0]
 8001328:	bd38      	pop	{r3, r4, r5, pc}
 800132a:	bf00      	nop
 800132c:	200001b8 	.word	0x200001b8

08001330 <_isatty_r>:
 8001330:	b538      	push	{r3, r4, r5, lr}
 8001332:	2300      	movs	r3, #0
 8001334:	4d05      	ldr	r5, [pc, #20]	@ (800134c <_isatty_r+0x1c>)
 8001336:	4604      	mov	r4, r0
 8001338:	4608      	mov	r0, r1
 800133a:	602b      	str	r3, [r5, #0]
 800133c:	f7ff f857 	bl	80003ee <_isatty>
 8001340:	1c43      	adds	r3, r0, #1
 8001342:	d102      	bne.n	800134a <_isatty_r+0x1a>
 8001344:	682b      	ldr	r3, [r5, #0]
 8001346:	b103      	cbz	r3, 800134a <_isatty_r+0x1a>
 8001348:	6023      	str	r3, [r4, #0]
 800134a:	bd38      	pop	{r3, r4, r5, pc}
 800134c:	200001b8 	.word	0x200001b8

08001350 <_init>:
 8001350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001352:	bf00      	nop
 8001354:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001356:	bc08      	pop	{r3}
 8001358:	469e      	mov	lr, r3
 800135a:	4770      	bx	lr

0800135c <_fini>:
 800135c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800135e:	bf00      	nop
 8001360:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001362:	bc08      	pop	{r3}
 8001364:	469e      	mov	lr, r3
 8001366:	4770      	bx	lr
