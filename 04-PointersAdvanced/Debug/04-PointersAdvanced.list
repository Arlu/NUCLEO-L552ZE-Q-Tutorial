
04-PointersAdvanced.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000011b8  080001f0  080001f0  000011f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000038  080013a8  080013a8  000023a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080013e0  080013e0  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080013e0  080013e0  0000305c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080013e0  080013e0  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080013e0  080013e0  000023e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080013e4  080013e4  000023e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080013e8  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001444  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001444  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b85  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000482  00000000  00000000  00003c11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000168  00000000  00000000  00004098  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000f5  00000000  00000000  00004200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002d99  00000000  00000000  000042f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000192b  00000000  00000000  0000708e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009983  00000000  00000000  000089b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0001233c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c4c  00000000  00000000  00012380  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  00012fcc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f0 <__do_global_dtors_aux>:
 80001f0:	b510      	push	{r4, lr}
 80001f2:	4c05      	ldr	r4, [pc, #20]	@ (8000208 <__do_global_dtors_aux+0x18>)
 80001f4:	7823      	ldrb	r3, [r4, #0]
 80001f6:	b933      	cbnz	r3, 8000206 <__do_global_dtors_aux+0x16>
 80001f8:	4b04      	ldr	r3, [pc, #16]	@ (800020c <__do_global_dtors_aux+0x1c>)
 80001fa:	b113      	cbz	r3, 8000202 <__do_global_dtors_aux+0x12>
 80001fc:	4804      	ldr	r0, [pc, #16]	@ (8000210 <__do_global_dtors_aux+0x20>)
 80001fe:	f3af 8000 	nop.w
 8000202:	2301      	movs	r3, #1
 8000204:	7023      	strb	r3, [r4, #0]
 8000206:	bd10      	pop	{r4, pc}
 8000208:	2000005c 	.word	0x2000005c
 800020c:	00000000 	.word	0x00000000
 8000210:	08001390 	.word	0x08001390

08000214 <frame_dummy>:
 8000214:	b508      	push	{r3, lr}
 8000216:	4b03      	ldr	r3, [pc, #12]	@ (8000224 <frame_dummy+0x10>)
 8000218:	b11b      	cbz	r3, 8000222 <frame_dummy+0xe>
 800021a:	4903      	ldr	r1, [pc, #12]	@ (8000228 <frame_dummy+0x14>)
 800021c:	4803      	ldr	r0, [pc, #12]	@ (800022c <frame_dummy+0x18>)
 800021e:	f3af 8000 	nop.w
 8000222:	bd08      	pop	{r3, pc}
 8000224:	00000000 	.word	0x00000000
 8000228:	20000060 	.word	0x20000060
 800022c:	08001390 	.word	0x08001390

08000230 <ITM_SendChar>:
#define ITM_STIMULUS_PORT0     *((volatile uint32_t*) 0xE0000000 )
/* ITM Trace Enable Register */
#define ITM_TRACE_EN           *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000230:	b480      	push	{r7}
 8000232:	b083      	sub	sp, #12
 8000234:	af00      	add	r7, sp, #0
 8000236:	4603      	mov	r3, r0
 8000238:	71fb      	strb	r3, [r7, #7]
    // Enable TRCENA (Trace Enable)
    DEMCR |= (1 << 24);
 800023a:	4b0e      	ldr	r3, [pc, #56]	@ (8000274 <ITM_SendChar+0x44>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4a0d      	ldr	r2, [pc, #52]	@ (8000274 <ITM_SendChar+0x44>)
 8000240:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000244:	6013      	str	r3, [r2, #0]

    // Enable stimulus port 0
    ITM_TRACE_EN |= (1 << 0);
 8000246:	4b0c      	ldr	r3, [pc, #48]	@ (8000278 <ITM_SendChar+0x48>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a0b      	ldr	r2, [pc, #44]	@ (8000278 <ITM_SendChar+0x48>)
 800024c:	f043 0301 	orr.w	r3, r3, #1
 8000250:	6013      	str	r3, [r2, #0]

    // Wait until FIFO is ready in bit [0]
    while (!(ITM_STIMULUS_PORT0 & 1));
 8000252:	bf00      	nop
 8000254:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	f003 0301 	and.w	r3, r3, #1
 800025e:	2b00      	cmp	r3, #0
 8000260:	d0f8      	beq.n	8000254 <ITM_SendChar+0x24>

    // Write to ITM stimulus port 0
    ITM_STIMULUS_PORT0 = ch;
 8000262:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000266:	79fb      	ldrb	r3, [r7, #7]
 8000268:	6013      	str	r3, [r2, #0]
}
 800026a:	bf00      	nop
 800026c:	370c      	adds	r7, #12
 800026e:	46bd      	mov	sp, r7
 8000270:	bc80      	pop	{r7}
 8000272:	4770      	bx	lr
 8000274:	e000edfc 	.word	0xe000edfc
 8000278:	e0000e00 	.word	0xe0000e00

0800027c <_write>:

int _write(int file, char *ptr, int len)
{
 800027c:	b580      	push	{r7, lr}
 800027e:	b086      	sub	sp, #24
 8000280:	af00      	add	r7, sp, #0
 8000282:	60f8      	str	r0, [r7, #12]
 8000284:	60b9      	str	r1, [r7, #8]
 8000286:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000288:	2300      	movs	r3, #0
 800028a:	617b      	str	r3, [r7, #20]
 800028c:	e009      	b.n	80002a2 <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 800028e:	68bb      	ldr	r3, [r7, #8]
 8000290:	1c5a      	adds	r2, r3, #1
 8000292:	60ba      	str	r2, [r7, #8]
 8000294:	781b      	ldrb	r3, [r3, #0]
 8000296:	4618      	mov	r0, r3
 8000298:	f7ff ffca 	bl	8000230 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800029c:	697b      	ldr	r3, [r7, #20]
 800029e:	3301      	adds	r3, #1
 80002a0:	617b      	str	r3, [r7, #20]
 80002a2:	697a      	ldr	r2, [r7, #20]
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	429a      	cmp	r2, r3
 80002a8:	dbf1      	blt.n	800028e <_write+0x12>
  }
  return len;
 80002aa:	687b      	ldr	r3, [r7, #4]
}
 80002ac:	4618      	mov	r0, r3
 80002ae:	3718      	adds	r7, #24
 80002b0:	46bd      	mov	sp, r7
 80002b2:	bd80      	pop	{r7, pc}

080002b4 <add>:
#endif

/********************* function pointers *******************/
typedef int (*Operation)(int, int);

int add(int a, int b) { return a + b; }
 80002b4:	b480      	push	{r7}
 80002b6:	b083      	sub	sp, #12
 80002b8:	af00      	add	r7, sp, #0
 80002ba:	6078      	str	r0, [r7, #4]
 80002bc:	6039      	str	r1, [r7, #0]
 80002be:	687a      	ldr	r2, [r7, #4]
 80002c0:	683b      	ldr	r3, [r7, #0]
 80002c2:	4413      	add	r3, r2
 80002c4:	4618      	mov	r0, r3
 80002c6:	370c      	adds	r7, #12
 80002c8:	46bd      	mov	sp, r7
 80002ca:	bc80      	pop	{r7}
 80002cc:	4770      	bx	lr

080002ce <multiply>:
int multiply(int a, int b) { return a * b; }
 80002ce:	b480      	push	{r7}
 80002d0:	b083      	sub	sp, #12
 80002d2:	af00      	add	r7, sp, #0
 80002d4:	6078      	str	r0, [r7, #4]
 80002d6:	6039      	str	r1, [r7, #0]
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	683a      	ldr	r2, [r7, #0]
 80002dc:	fb02 f303 	mul.w	r3, r2, r3
 80002e0:	4618      	mov	r0, r3
 80002e2:	370c      	adds	r7, #12
 80002e4:	46bd      	mov	sp, r7
 80002e6:	bc80      	pop	{r7}
 80002e8:	4770      	bx	lr

080002ea <calculate>:

int calculate(int x, int y, Operation op) {
 80002ea:	b580      	push	{r7, lr}
 80002ec:	b084      	sub	sp, #16
 80002ee:	af00      	add	r7, sp, #0
 80002f0:	60f8      	str	r0, [r7, #12]
 80002f2:	60b9      	str	r1, [r7, #8]
 80002f4:	607a      	str	r2, [r7, #4]
    return op(x, y); // Call the function through pointer
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	68b9      	ldr	r1, [r7, #8]
 80002fa:	68f8      	ldr	r0, [r7, #12]
 80002fc:	4798      	blx	r3
 80002fe:	4603      	mov	r3, r0
}
 8000300:	4618      	mov	r0, r3
 8000302:	3710      	adds	r7, #16
 8000304:	46bd      	mov	sp, r7
 8000306:	bd80      	pop	{r7, pc}

08000308 <modifyValue>:
//
//void passToModifier(int **pp) {
//    modifyValue(&pp); // Pass address of the pointer-to-pointer
//}

void modifyValue(int *ppp) {
 8000308:	b480      	push	{r7}
 800030a:	b083      	sub	sp, #12
 800030c:	af00      	add	r7, sp, #0
 800030e:	6078      	str	r0, [r7, #4]
    *ppp = 100; // Modify through three levels of indirection
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	2264      	movs	r2, #100	@ 0x64
 8000314:	601a      	str	r2, [r3, #0]
}
 8000316:	bf00      	nop
 8000318:	370c      	adds	r7, #12
 800031a:	46bd      	mov	sp, r7
 800031c:	bc80      	pop	{r7}
 800031e:	4770      	bx	lr

08000320 <passToModifier>:

void passToModifier(int *pp) {
 8000320:	b580      	push	{r7, lr}
 8000322:	b082      	sub	sp, #8
 8000324:	af00      	add	r7, sp, #0
 8000326:	6078      	str	r0, [r7, #4]
    modifyValue(pp); // Pass address of the pointer-to-pointer
 8000328:	6878      	ldr	r0, [r7, #4]
 800032a:	f7ff ffed 	bl	8000308 <modifyValue>
}
 800032e:	bf00      	nop
 8000330:	3708      	adds	r7, #8
 8000332:	46bd      	mov	sp, r7
 8000334:	bd80      	pop	{r7, pc}

08000336 <updateVariable>:

void updateVariable(int *p) {
 8000336:	b580      	push	{r7, lr}
 8000338:	b082      	sub	sp, #8
 800033a:	af00      	add	r7, sp, #0
 800033c:	6078      	str	r0, [r7, #4]
    passToModifier(p); // Pass address of the pointer
 800033e:	6878      	ldr	r0, [r7, #4]
 8000340:	f7ff ffee 	bl	8000320 <passToModifier>
}
 8000344:	bf00      	nop
 8000346:	3708      	adds	r7, #8
 8000348:	46bd      	mov	sp, r7
 800034a:	bd80      	pop	{r7, pc}

0800034c <main>:
/********************* end *******************/

int main(void)
{
 800034c:	b580      	push	{r7, lr}
 800034e:	b084      	sub	sp, #16
 8000350:	af00      	add	r7, sp, #0
	// pointer to pointer
	int value = 42;
 8000352:	232a      	movs	r3, #42	@ 0x2a
 8000354:	60bb      	str	r3, [r7, #8]
	int *ptr1 = &value;    // Points to value
 8000356:	f107 0308 	add.w	r3, r7, #8
 800035a:	607b      	str	r3, [r7, #4]
	int **ptr2 = &ptr1;    // Points to ptr1
 800035c:	1d3b      	adds	r3, r7, #4
 800035e:	60fb      	str	r3, [r7, #12]

	**ptr2 = 100;          // Changes value through two levels
 8000360:	68fb      	ldr	r3, [r7, #12]
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	2264      	movs	r2, #100	@ 0x64
 8000366:	601a      	str	r2, [r3, #0]
	printf("%d\n", value); // Prints 100
 8000368:	68bb      	ldr	r3, [r7, #8]
 800036a:	4619      	mov	r1, r3
 800036c:	4811      	ldr	r0, [pc, #68]	@ (80003b4 <main+0x68>)
 800036e:	f000 f997 	bl	80006a0 <iprintf>

	//passing pointers to functions:
	int x = 5;
 8000372:	2305      	movs	r3, #5
 8000374:	603b      	str	r3, [r7, #0]
	updateVariable(&x); // Pass address of x
 8000376:	463b      	mov	r3, r7
 8000378:	4618      	mov	r0, r3
 800037a:	f7ff ffdc 	bl	8000336 <updateVariable>
	printf("%d\n", x);  // Prints 100
 800037e:	683b      	ldr	r3, [r7, #0]
 8000380:	4619      	mov	r1, r3
 8000382:	480c      	ldr	r0, [pc, #48]	@ (80003b4 <main+0x68>)
 8000384:	f000 f98c 	bl	80006a0 <iprintf>

	//	function pointers
	printf("%d\n", calculate(5, 3, add));      // Prints 8
 8000388:	4a0b      	ldr	r2, [pc, #44]	@ (80003b8 <main+0x6c>)
 800038a:	2103      	movs	r1, #3
 800038c:	2005      	movs	r0, #5
 800038e:	f7ff ffac 	bl	80002ea <calculate>
 8000392:	4603      	mov	r3, r0
 8000394:	4619      	mov	r1, r3
 8000396:	4807      	ldr	r0, [pc, #28]	@ (80003b4 <main+0x68>)
 8000398:	f000 f982 	bl	80006a0 <iprintf>
	printf("%d\n", calculate(5, 3, multiply)); // Prints 15
 800039c:	4a07      	ldr	r2, [pc, #28]	@ (80003bc <main+0x70>)
 800039e:	2103      	movs	r1, #3
 80003a0:	2005      	movs	r0, #5
 80003a2:	f7ff ffa2 	bl	80002ea <calculate>
 80003a6:	4603      	mov	r3, r0
 80003a8:	4619      	mov	r1, r3
 80003aa:	4802      	ldr	r0, [pc, #8]	@ (80003b4 <main+0x68>)
 80003ac:	f000 f978 	bl	80006a0 <iprintf>

    /* Loop forever */
	for(;;);
 80003b0:	bf00      	nop
 80003b2:	e7fd      	b.n	80003b0 <main+0x64>
 80003b4:	080013a8 	.word	0x080013a8
 80003b8:	080002b5 	.word	0x080002b5
 80003bc:	080002cf 	.word	0x080002cf

080003c0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003c0:	b580      	push	{r7, lr}
 80003c2:	b086      	sub	sp, #24
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	60f8      	str	r0, [r7, #12]
 80003c8:	60b9      	str	r1, [r7, #8]
 80003ca:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003cc:	2300      	movs	r3, #0
 80003ce:	617b      	str	r3, [r7, #20]
 80003d0:	e00a      	b.n	80003e8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003d2:	f3af 8000 	nop.w
 80003d6:	4601      	mov	r1, r0
 80003d8:	68bb      	ldr	r3, [r7, #8]
 80003da:	1c5a      	adds	r2, r3, #1
 80003dc:	60ba      	str	r2, [r7, #8]
 80003de:	b2ca      	uxtb	r2, r1
 80003e0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	3301      	adds	r3, #1
 80003e6:	617b      	str	r3, [r7, #20]
 80003e8:	697a      	ldr	r2, [r7, #20]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	429a      	cmp	r2, r3
 80003ee:	dbf0      	blt.n	80003d2 <_read+0x12>
  }

  return len;
 80003f0:	687b      	ldr	r3, [r7, #4]
}
 80003f2:	4618      	mov	r0, r3
 80003f4:	3718      	adds	r7, #24
 80003f6:	46bd      	mov	sp, r7
 80003f8:	bd80      	pop	{r7, pc}

080003fa <_close>:
  }
  return len;
}

int _close(int file)
{
 80003fa:	b480      	push	{r7}
 80003fc:	b083      	sub	sp, #12
 80003fe:	af00      	add	r7, sp, #0
 8000400:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000402:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000406:	4618      	mov	r0, r3
 8000408:	370c      	adds	r7, #12
 800040a:	46bd      	mov	sp, r7
 800040c:	bc80      	pop	{r7}
 800040e:	4770      	bx	lr

08000410 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000410:	b480      	push	{r7}
 8000412:	b083      	sub	sp, #12
 8000414:	af00      	add	r7, sp, #0
 8000416:	6078      	str	r0, [r7, #4]
 8000418:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800041a:	683b      	ldr	r3, [r7, #0]
 800041c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000420:	605a      	str	r2, [r3, #4]
  return 0;
 8000422:	2300      	movs	r3, #0
}
 8000424:	4618      	mov	r0, r3
 8000426:	370c      	adds	r7, #12
 8000428:	46bd      	mov	sp, r7
 800042a:	bc80      	pop	{r7}
 800042c:	4770      	bx	lr

0800042e <_isatty>:

int _isatty(int file)
{
 800042e:	b480      	push	{r7}
 8000430:	b083      	sub	sp, #12
 8000432:	af00      	add	r7, sp, #0
 8000434:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000436:	2301      	movs	r3, #1
}
 8000438:	4618      	mov	r0, r3
 800043a:	370c      	adds	r7, #12
 800043c:	46bd      	mov	sp, r7
 800043e:	bc80      	pop	{r7}
 8000440:	4770      	bx	lr

08000442 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000442:	b480      	push	{r7}
 8000444:	b085      	sub	sp, #20
 8000446:	af00      	add	r7, sp, #0
 8000448:	60f8      	str	r0, [r7, #12]
 800044a:	60b9      	str	r1, [r7, #8]
 800044c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800044e:	2300      	movs	r3, #0
}
 8000450:	4618      	mov	r0, r3
 8000452:	3714      	adds	r7, #20
 8000454:	46bd      	mov	sp, r7
 8000456:	bc80      	pop	{r7}
 8000458:	4770      	bx	lr
	...

0800045c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800045c:	b580      	push	{r7, lr}
 800045e:	b086      	sub	sp, #24
 8000460:	af00      	add	r7, sp, #0
 8000462:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000464:	4a14      	ldr	r2, [pc, #80]	@ (80004b8 <_sbrk+0x5c>)
 8000466:	4b15      	ldr	r3, [pc, #84]	@ (80004bc <_sbrk+0x60>)
 8000468:	1ad3      	subs	r3, r2, r3
 800046a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800046c:	697b      	ldr	r3, [r7, #20]
 800046e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000470:	4b13      	ldr	r3, [pc, #76]	@ (80004c0 <_sbrk+0x64>)
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	2b00      	cmp	r3, #0
 8000476:	d102      	bne.n	800047e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000478:	4b11      	ldr	r3, [pc, #68]	@ (80004c0 <_sbrk+0x64>)
 800047a:	4a12      	ldr	r2, [pc, #72]	@ (80004c4 <_sbrk+0x68>)
 800047c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800047e:	4b10      	ldr	r3, [pc, #64]	@ (80004c0 <_sbrk+0x64>)
 8000480:	681a      	ldr	r2, [r3, #0]
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	4413      	add	r3, r2
 8000486:	693a      	ldr	r2, [r7, #16]
 8000488:	429a      	cmp	r2, r3
 800048a:	d207      	bcs.n	800049c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800048c:	f000 f9ac 	bl	80007e8 <__errno>
 8000490:	4603      	mov	r3, r0
 8000492:	220c      	movs	r2, #12
 8000494:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000496:	f04f 33ff 	mov.w	r3, #4294967295
 800049a:	e009      	b.n	80004b0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800049c:	4b08      	ldr	r3, [pc, #32]	@ (80004c0 <_sbrk+0x64>)
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004a2:	4b07      	ldr	r3, [pc, #28]	@ (80004c0 <_sbrk+0x64>)
 80004a4:	681a      	ldr	r2, [r3, #0]
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	4413      	add	r3, r2
 80004aa:	4a05      	ldr	r2, [pc, #20]	@ (80004c0 <_sbrk+0x64>)
 80004ac:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004ae:	68fb      	ldr	r3, [r7, #12]
}
 80004b0:	4618      	mov	r0, r3
 80004b2:	3718      	adds	r7, #24
 80004b4:	46bd      	mov	sp, r7
 80004b6:	bd80      	pop	{r7, pc}
 80004b8:	20030000 	.word	0x20030000
 80004bc:	00000400 	.word	0x00000400
 80004c0:	20000078 	.word	0x20000078
 80004c4:	200001c8 	.word	0x200001c8

080004c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004c8:	480d      	ldr	r0, [pc, #52]	@ (8000500 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ca:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004cc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004d0:	480c      	ldr	r0, [pc, #48]	@ (8000504 <LoopForever+0x6>)
  ldr r1, =_edata
 80004d2:	490d      	ldr	r1, [pc, #52]	@ (8000508 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004d4:	4a0d      	ldr	r2, [pc, #52]	@ (800050c <LoopForever+0xe>)
  movs r3, #0
 80004d6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004d8:	e002      	b.n	80004e0 <LoopCopyDataInit>

080004da <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004da:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004dc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004de:	3304      	adds	r3, #4

080004e0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004e0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004e2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e4:	d3f9      	bcc.n	80004da <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004e6:	4a0a      	ldr	r2, [pc, #40]	@ (8000510 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004e8:	4c0a      	ldr	r4, [pc, #40]	@ (8000514 <LoopForever+0x16>)
  movs r3, #0
 80004ea:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004ec:	e001      	b.n	80004f2 <LoopFillZerobss>

080004ee <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ee:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004f0:	3204      	adds	r2, #4

080004f2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004f2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f4:	d3fb      	bcc.n	80004ee <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004f6:	f000 f97d 	bl	80007f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004fa:	f7ff ff27 	bl	800034c <main>

080004fe <LoopForever>:

LoopForever:
  b LoopForever
 80004fe:	e7fe      	b.n	80004fe <LoopForever>
  ldr   r0, =_estack
 8000500:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000504:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000508:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 800050c:	080013e8 	.word	0x080013e8
  ldr r2, =_sbss
 8000510:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000514:	200001c8 	.word	0x200001c8

08000518 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000518:	e7fe      	b.n	8000518 <ADC1_2_IRQHandler>
	...

0800051c <std>:
 800051c:	2300      	movs	r3, #0
 800051e:	b510      	push	{r4, lr}
 8000520:	4604      	mov	r4, r0
 8000522:	6083      	str	r3, [r0, #8]
 8000524:	8181      	strh	r1, [r0, #12]
 8000526:	4619      	mov	r1, r3
 8000528:	6643      	str	r3, [r0, #100]	@ 0x64
 800052a:	81c2      	strh	r2, [r0, #14]
 800052c:	2208      	movs	r2, #8
 800052e:	6183      	str	r3, [r0, #24]
 8000530:	e9c0 3300 	strd	r3, r3, [r0]
 8000534:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000538:	305c      	adds	r0, #92	@ 0x5c
 800053a:	f000 f906 	bl	800074a <memset>
 800053e:	4b0d      	ldr	r3, [pc, #52]	@ (8000574 <std+0x58>)
 8000540:	6224      	str	r4, [r4, #32]
 8000542:	6263      	str	r3, [r4, #36]	@ 0x24
 8000544:	4b0c      	ldr	r3, [pc, #48]	@ (8000578 <std+0x5c>)
 8000546:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000548:	4b0c      	ldr	r3, [pc, #48]	@ (800057c <std+0x60>)
 800054a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800054c:	4b0c      	ldr	r3, [pc, #48]	@ (8000580 <std+0x64>)
 800054e:	6323      	str	r3, [r4, #48]	@ 0x30
 8000550:	4b0c      	ldr	r3, [pc, #48]	@ (8000584 <std+0x68>)
 8000552:	429c      	cmp	r4, r3
 8000554:	d006      	beq.n	8000564 <std+0x48>
 8000556:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800055a:	4294      	cmp	r4, r2
 800055c:	d002      	beq.n	8000564 <std+0x48>
 800055e:	33d0      	adds	r3, #208	@ 0xd0
 8000560:	429c      	cmp	r4, r3
 8000562:	d105      	bne.n	8000570 <std+0x54>
 8000564:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000568:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800056c:	f000 b966 	b.w	800083c <__retarget_lock_init_recursive>
 8000570:	bd10      	pop	{r4, pc}
 8000572:	bf00      	nop
 8000574:	080006c5 	.word	0x080006c5
 8000578:	080006e7 	.word	0x080006e7
 800057c:	0800071f 	.word	0x0800071f
 8000580:	08000743 	.word	0x08000743
 8000584:	2000007c 	.word	0x2000007c

08000588 <stdio_exit_handler>:
 8000588:	4a02      	ldr	r2, [pc, #8]	@ (8000594 <stdio_exit_handler+0xc>)
 800058a:	4903      	ldr	r1, [pc, #12]	@ (8000598 <stdio_exit_handler+0x10>)
 800058c:	4803      	ldr	r0, [pc, #12]	@ (800059c <stdio_exit_handler+0x14>)
 800058e:	f000 b869 	b.w	8000664 <_fwalk_sglue>
 8000592:	bf00      	nop
 8000594:	20000000 	.word	0x20000000
 8000598:	080010d5 	.word	0x080010d5
 800059c:	20000010 	.word	0x20000010

080005a0 <cleanup_stdio>:
 80005a0:	6841      	ldr	r1, [r0, #4]
 80005a2:	4b0c      	ldr	r3, [pc, #48]	@ (80005d4 <cleanup_stdio+0x34>)
 80005a4:	4299      	cmp	r1, r3
 80005a6:	b510      	push	{r4, lr}
 80005a8:	4604      	mov	r4, r0
 80005aa:	d001      	beq.n	80005b0 <cleanup_stdio+0x10>
 80005ac:	f000 fd92 	bl	80010d4 <_fflush_r>
 80005b0:	68a1      	ldr	r1, [r4, #8]
 80005b2:	4b09      	ldr	r3, [pc, #36]	@ (80005d8 <cleanup_stdio+0x38>)
 80005b4:	4299      	cmp	r1, r3
 80005b6:	d002      	beq.n	80005be <cleanup_stdio+0x1e>
 80005b8:	4620      	mov	r0, r4
 80005ba:	f000 fd8b 	bl	80010d4 <_fflush_r>
 80005be:	68e1      	ldr	r1, [r4, #12]
 80005c0:	4b06      	ldr	r3, [pc, #24]	@ (80005dc <cleanup_stdio+0x3c>)
 80005c2:	4299      	cmp	r1, r3
 80005c4:	d004      	beq.n	80005d0 <cleanup_stdio+0x30>
 80005c6:	4620      	mov	r0, r4
 80005c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005cc:	f000 bd82 	b.w	80010d4 <_fflush_r>
 80005d0:	bd10      	pop	{r4, pc}
 80005d2:	bf00      	nop
 80005d4:	2000007c 	.word	0x2000007c
 80005d8:	200000e4 	.word	0x200000e4
 80005dc:	2000014c 	.word	0x2000014c

080005e0 <global_stdio_init.part.0>:
 80005e0:	b510      	push	{r4, lr}
 80005e2:	4b0b      	ldr	r3, [pc, #44]	@ (8000610 <global_stdio_init.part.0+0x30>)
 80005e4:	2104      	movs	r1, #4
 80005e6:	4c0b      	ldr	r4, [pc, #44]	@ (8000614 <global_stdio_init.part.0+0x34>)
 80005e8:	4a0b      	ldr	r2, [pc, #44]	@ (8000618 <global_stdio_init.part.0+0x38>)
 80005ea:	4620      	mov	r0, r4
 80005ec:	601a      	str	r2, [r3, #0]
 80005ee:	2200      	movs	r2, #0
 80005f0:	f7ff ff94 	bl	800051c <std>
 80005f4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80005f8:	2201      	movs	r2, #1
 80005fa:	2109      	movs	r1, #9
 80005fc:	f7ff ff8e 	bl	800051c <std>
 8000600:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000604:	2202      	movs	r2, #2
 8000606:	2112      	movs	r1, #18
 8000608:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800060c:	f7ff bf86 	b.w	800051c <std>
 8000610:	200001b4 	.word	0x200001b4
 8000614:	2000007c 	.word	0x2000007c
 8000618:	08000589 	.word	0x08000589

0800061c <__sfp_lock_acquire>:
 800061c:	4801      	ldr	r0, [pc, #4]	@ (8000624 <__sfp_lock_acquire+0x8>)
 800061e:	f000 b90e 	b.w	800083e <__retarget_lock_acquire_recursive>
 8000622:	bf00      	nop
 8000624:	200001bd 	.word	0x200001bd

08000628 <__sfp_lock_release>:
 8000628:	4801      	ldr	r0, [pc, #4]	@ (8000630 <__sfp_lock_release+0x8>)
 800062a:	f000 b909 	b.w	8000840 <__retarget_lock_release_recursive>
 800062e:	bf00      	nop
 8000630:	200001bd 	.word	0x200001bd

08000634 <__sinit>:
 8000634:	b510      	push	{r4, lr}
 8000636:	4604      	mov	r4, r0
 8000638:	f7ff fff0 	bl	800061c <__sfp_lock_acquire>
 800063c:	6a23      	ldr	r3, [r4, #32]
 800063e:	b11b      	cbz	r3, 8000648 <__sinit+0x14>
 8000640:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000644:	f7ff bff0 	b.w	8000628 <__sfp_lock_release>
 8000648:	4b04      	ldr	r3, [pc, #16]	@ (800065c <__sinit+0x28>)
 800064a:	6223      	str	r3, [r4, #32]
 800064c:	4b04      	ldr	r3, [pc, #16]	@ (8000660 <__sinit+0x2c>)
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	2b00      	cmp	r3, #0
 8000652:	d1f5      	bne.n	8000640 <__sinit+0xc>
 8000654:	f7ff ffc4 	bl	80005e0 <global_stdio_init.part.0>
 8000658:	e7f2      	b.n	8000640 <__sinit+0xc>
 800065a:	bf00      	nop
 800065c:	080005a1 	.word	0x080005a1
 8000660:	200001b4 	.word	0x200001b4

08000664 <_fwalk_sglue>:
 8000664:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000668:	4607      	mov	r7, r0
 800066a:	4688      	mov	r8, r1
 800066c:	4614      	mov	r4, r2
 800066e:	2600      	movs	r6, #0
 8000670:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000674:	f1b9 0901 	subs.w	r9, r9, #1
 8000678:	d505      	bpl.n	8000686 <_fwalk_sglue+0x22>
 800067a:	6824      	ldr	r4, [r4, #0]
 800067c:	2c00      	cmp	r4, #0
 800067e:	d1f7      	bne.n	8000670 <_fwalk_sglue+0xc>
 8000680:	4630      	mov	r0, r6
 8000682:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000686:	89ab      	ldrh	r3, [r5, #12]
 8000688:	2b01      	cmp	r3, #1
 800068a:	d907      	bls.n	800069c <_fwalk_sglue+0x38>
 800068c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000690:	3301      	adds	r3, #1
 8000692:	d003      	beq.n	800069c <_fwalk_sglue+0x38>
 8000694:	4629      	mov	r1, r5
 8000696:	4638      	mov	r0, r7
 8000698:	47c0      	blx	r8
 800069a:	4306      	orrs	r6, r0
 800069c:	3568      	adds	r5, #104	@ 0x68
 800069e:	e7e9      	b.n	8000674 <_fwalk_sglue+0x10>

080006a0 <iprintf>:
 80006a0:	b40f      	push	{r0, r1, r2, r3}
 80006a2:	b507      	push	{r0, r1, r2, lr}
 80006a4:	4906      	ldr	r1, [pc, #24]	@ (80006c0 <iprintf+0x20>)
 80006a6:	ab04      	add	r3, sp, #16
 80006a8:	6808      	ldr	r0, [r1, #0]
 80006aa:	f853 2b04 	ldr.w	r2, [r3], #4
 80006ae:	6881      	ldr	r1, [r0, #8]
 80006b0:	9301      	str	r3, [sp, #4]
 80006b2:	f000 f9e7 	bl	8000a84 <_vfiprintf_r>
 80006b6:	b003      	add	sp, #12
 80006b8:	f85d eb04 	ldr.w	lr, [sp], #4
 80006bc:	b004      	add	sp, #16
 80006be:	4770      	bx	lr
 80006c0:	2000000c 	.word	0x2000000c

080006c4 <__sread>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	460c      	mov	r4, r1
 80006c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006cc:	f000 f868 	bl	80007a0 <_read_r>
 80006d0:	2800      	cmp	r0, #0
 80006d2:	bfab      	itete	ge
 80006d4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80006d6:	89a3      	ldrhlt	r3, [r4, #12]
 80006d8:	181b      	addge	r3, r3, r0
 80006da:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80006de:	bfac      	ite	ge
 80006e0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80006e2:	81a3      	strhlt	r3, [r4, #12]
 80006e4:	bd10      	pop	{r4, pc}

080006e6 <__swrite>:
 80006e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006ea:	461f      	mov	r7, r3
 80006ec:	898b      	ldrh	r3, [r1, #12]
 80006ee:	4605      	mov	r5, r0
 80006f0:	460c      	mov	r4, r1
 80006f2:	05db      	lsls	r3, r3, #23
 80006f4:	4616      	mov	r6, r2
 80006f6:	d505      	bpl.n	8000704 <__swrite+0x1e>
 80006f8:	2302      	movs	r3, #2
 80006fa:	2200      	movs	r2, #0
 80006fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000700:	f000 f83c 	bl	800077c <_lseek_r>
 8000704:	89a3      	ldrh	r3, [r4, #12]
 8000706:	4632      	mov	r2, r6
 8000708:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800070c:	4628      	mov	r0, r5
 800070e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000712:	81a3      	strh	r3, [r4, #12]
 8000714:	463b      	mov	r3, r7
 8000716:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800071a:	f000 b853 	b.w	80007c4 <_write_r>

0800071e <__sseek>:
 800071e:	b510      	push	{r4, lr}
 8000720:	460c      	mov	r4, r1
 8000722:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000726:	f000 f829 	bl	800077c <_lseek_r>
 800072a:	1c43      	adds	r3, r0, #1
 800072c:	89a3      	ldrh	r3, [r4, #12]
 800072e:	bf15      	itete	ne
 8000730:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000732:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000736:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800073a:	81a3      	strheq	r3, [r4, #12]
 800073c:	bf18      	it	ne
 800073e:	81a3      	strhne	r3, [r4, #12]
 8000740:	bd10      	pop	{r4, pc}

08000742 <__sclose>:
 8000742:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000746:	f000 b809 	b.w	800075c <_close_r>

0800074a <memset>:
 800074a:	4402      	add	r2, r0
 800074c:	4603      	mov	r3, r0
 800074e:	4293      	cmp	r3, r2
 8000750:	d100      	bne.n	8000754 <memset+0xa>
 8000752:	4770      	bx	lr
 8000754:	f803 1b01 	strb.w	r1, [r3], #1
 8000758:	e7f9      	b.n	800074e <memset+0x4>
	...

0800075c <_close_r>:
 800075c:	b538      	push	{r3, r4, r5, lr}
 800075e:	2300      	movs	r3, #0
 8000760:	4d05      	ldr	r5, [pc, #20]	@ (8000778 <_close_r+0x1c>)
 8000762:	4604      	mov	r4, r0
 8000764:	4608      	mov	r0, r1
 8000766:	602b      	str	r3, [r5, #0]
 8000768:	f7ff fe47 	bl	80003fa <_close>
 800076c:	1c43      	adds	r3, r0, #1
 800076e:	d102      	bne.n	8000776 <_close_r+0x1a>
 8000770:	682b      	ldr	r3, [r5, #0]
 8000772:	b103      	cbz	r3, 8000776 <_close_r+0x1a>
 8000774:	6023      	str	r3, [r4, #0]
 8000776:	bd38      	pop	{r3, r4, r5, pc}
 8000778:	200001b8 	.word	0x200001b8

0800077c <_lseek_r>:
 800077c:	b538      	push	{r3, r4, r5, lr}
 800077e:	4604      	mov	r4, r0
 8000780:	4d06      	ldr	r5, [pc, #24]	@ (800079c <_lseek_r+0x20>)
 8000782:	4608      	mov	r0, r1
 8000784:	4611      	mov	r1, r2
 8000786:	2200      	movs	r2, #0
 8000788:	602a      	str	r2, [r5, #0]
 800078a:	461a      	mov	r2, r3
 800078c:	f7ff fe59 	bl	8000442 <_lseek>
 8000790:	1c43      	adds	r3, r0, #1
 8000792:	d102      	bne.n	800079a <_lseek_r+0x1e>
 8000794:	682b      	ldr	r3, [r5, #0]
 8000796:	b103      	cbz	r3, 800079a <_lseek_r+0x1e>
 8000798:	6023      	str	r3, [r4, #0]
 800079a:	bd38      	pop	{r3, r4, r5, pc}
 800079c:	200001b8 	.word	0x200001b8

080007a0 <_read_r>:
 80007a0:	b538      	push	{r3, r4, r5, lr}
 80007a2:	4604      	mov	r4, r0
 80007a4:	4d06      	ldr	r5, [pc, #24]	@ (80007c0 <_read_r+0x20>)
 80007a6:	4608      	mov	r0, r1
 80007a8:	4611      	mov	r1, r2
 80007aa:	2200      	movs	r2, #0
 80007ac:	602a      	str	r2, [r5, #0]
 80007ae:	461a      	mov	r2, r3
 80007b0:	f7ff fe06 	bl	80003c0 <_read>
 80007b4:	1c43      	adds	r3, r0, #1
 80007b6:	d102      	bne.n	80007be <_read_r+0x1e>
 80007b8:	682b      	ldr	r3, [r5, #0]
 80007ba:	b103      	cbz	r3, 80007be <_read_r+0x1e>
 80007bc:	6023      	str	r3, [r4, #0]
 80007be:	bd38      	pop	{r3, r4, r5, pc}
 80007c0:	200001b8 	.word	0x200001b8

080007c4 <_write_r>:
 80007c4:	b538      	push	{r3, r4, r5, lr}
 80007c6:	4604      	mov	r4, r0
 80007c8:	4d06      	ldr	r5, [pc, #24]	@ (80007e4 <_write_r+0x20>)
 80007ca:	4608      	mov	r0, r1
 80007cc:	4611      	mov	r1, r2
 80007ce:	2200      	movs	r2, #0
 80007d0:	602a      	str	r2, [r5, #0]
 80007d2:	461a      	mov	r2, r3
 80007d4:	f7ff fd52 	bl	800027c <_write>
 80007d8:	1c43      	adds	r3, r0, #1
 80007da:	d102      	bne.n	80007e2 <_write_r+0x1e>
 80007dc:	682b      	ldr	r3, [r5, #0]
 80007de:	b103      	cbz	r3, 80007e2 <_write_r+0x1e>
 80007e0:	6023      	str	r3, [r4, #0]
 80007e2:	bd38      	pop	{r3, r4, r5, pc}
 80007e4:	200001b8 	.word	0x200001b8

080007e8 <__errno>:
 80007e8:	4b01      	ldr	r3, [pc, #4]	@ (80007f0 <__errno+0x8>)
 80007ea:	6818      	ldr	r0, [r3, #0]
 80007ec:	4770      	bx	lr
 80007ee:	bf00      	nop
 80007f0:	2000000c 	.word	0x2000000c

080007f4 <__libc_init_array>:
 80007f4:	b570      	push	{r4, r5, r6, lr}
 80007f6:	4d0d      	ldr	r5, [pc, #52]	@ (800082c <__libc_init_array+0x38>)
 80007f8:	2600      	movs	r6, #0
 80007fa:	4c0d      	ldr	r4, [pc, #52]	@ (8000830 <__libc_init_array+0x3c>)
 80007fc:	1b64      	subs	r4, r4, r5
 80007fe:	10a4      	asrs	r4, r4, #2
 8000800:	42a6      	cmp	r6, r4
 8000802:	d109      	bne.n	8000818 <__libc_init_array+0x24>
 8000804:	4d0b      	ldr	r5, [pc, #44]	@ (8000834 <__libc_init_array+0x40>)
 8000806:	2600      	movs	r6, #0
 8000808:	4c0b      	ldr	r4, [pc, #44]	@ (8000838 <__libc_init_array+0x44>)
 800080a:	f000 fdc1 	bl	8001390 <_init>
 800080e:	1b64      	subs	r4, r4, r5
 8000810:	10a4      	asrs	r4, r4, #2
 8000812:	42a6      	cmp	r6, r4
 8000814:	d105      	bne.n	8000822 <__libc_init_array+0x2e>
 8000816:	bd70      	pop	{r4, r5, r6, pc}
 8000818:	f855 3b04 	ldr.w	r3, [r5], #4
 800081c:	3601      	adds	r6, #1
 800081e:	4798      	blx	r3
 8000820:	e7ee      	b.n	8000800 <__libc_init_array+0xc>
 8000822:	f855 3b04 	ldr.w	r3, [r5], #4
 8000826:	3601      	adds	r6, #1
 8000828:	4798      	blx	r3
 800082a:	e7f2      	b.n	8000812 <__libc_init_array+0x1e>
 800082c:	080013e0 	.word	0x080013e0
 8000830:	080013e0 	.word	0x080013e0
 8000834:	080013e0 	.word	0x080013e0
 8000838:	080013e4 	.word	0x080013e4

0800083c <__retarget_lock_init_recursive>:
 800083c:	4770      	bx	lr

0800083e <__retarget_lock_acquire_recursive>:
 800083e:	4770      	bx	lr

08000840 <__retarget_lock_release_recursive>:
 8000840:	4770      	bx	lr
	...

08000844 <_free_r>:
 8000844:	b538      	push	{r3, r4, r5, lr}
 8000846:	4605      	mov	r5, r0
 8000848:	2900      	cmp	r1, #0
 800084a:	d041      	beq.n	80008d0 <_free_r+0x8c>
 800084c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000850:	1f0c      	subs	r4, r1, #4
 8000852:	2b00      	cmp	r3, #0
 8000854:	bfb8      	it	lt
 8000856:	18e4      	addlt	r4, r4, r3
 8000858:	f000 f8e0 	bl	8000a1c <__malloc_lock>
 800085c:	4a1d      	ldr	r2, [pc, #116]	@ (80008d4 <_free_r+0x90>)
 800085e:	6813      	ldr	r3, [r2, #0]
 8000860:	b933      	cbnz	r3, 8000870 <_free_r+0x2c>
 8000862:	6063      	str	r3, [r4, #4]
 8000864:	6014      	str	r4, [r2, #0]
 8000866:	4628      	mov	r0, r5
 8000868:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800086c:	f000 b8dc 	b.w	8000a28 <__malloc_unlock>
 8000870:	42a3      	cmp	r3, r4
 8000872:	d908      	bls.n	8000886 <_free_r+0x42>
 8000874:	6820      	ldr	r0, [r4, #0]
 8000876:	1821      	adds	r1, r4, r0
 8000878:	428b      	cmp	r3, r1
 800087a:	bf01      	itttt	eq
 800087c:	6819      	ldreq	r1, [r3, #0]
 800087e:	685b      	ldreq	r3, [r3, #4]
 8000880:	1809      	addeq	r1, r1, r0
 8000882:	6021      	streq	r1, [r4, #0]
 8000884:	e7ed      	b.n	8000862 <_free_r+0x1e>
 8000886:	461a      	mov	r2, r3
 8000888:	685b      	ldr	r3, [r3, #4]
 800088a:	b10b      	cbz	r3, 8000890 <_free_r+0x4c>
 800088c:	42a3      	cmp	r3, r4
 800088e:	d9fa      	bls.n	8000886 <_free_r+0x42>
 8000890:	6811      	ldr	r1, [r2, #0]
 8000892:	1850      	adds	r0, r2, r1
 8000894:	42a0      	cmp	r0, r4
 8000896:	d10b      	bne.n	80008b0 <_free_r+0x6c>
 8000898:	6820      	ldr	r0, [r4, #0]
 800089a:	4401      	add	r1, r0
 800089c:	1850      	adds	r0, r2, r1
 800089e:	6011      	str	r1, [r2, #0]
 80008a0:	4283      	cmp	r3, r0
 80008a2:	d1e0      	bne.n	8000866 <_free_r+0x22>
 80008a4:	6818      	ldr	r0, [r3, #0]
 80008a6:	685b      	ldr	r3, [r3, #4]
 80008a8:	4408      	add	r0, r1
 80008aa:	6053      	str	r3, [r2, #4]
 80008ac:	6010      	str	r0, [r2, #0]
 80008ae:	e7da      	b.n	8000866 <_free_r+0x22>
 80008b0:	d902      	bls.n	80008b8 <_free_r+0x74>
 80008b2:	230c      	movs	r3, #12
 80008b4:	602b      	str	r3, [r5, #0]
 80008b6:	e7d6      	b.n	8000866 <_free_r+0x22>
 80008b8:	6820      	ldr	r0, [r4, #0]
 80008ba:	1821      	adds	r1, r4, r0
 80008bc:	428b      	cmp	r3, r1
 80008be:	bf02      	ittt	eq
 80008c0:	6819      	ldreq	r1, [r3, #0]
 80008c2:	685b      	ldreq	r3, [r3, #4]
 80008c4:	1809      	addeq	r1, r1, r0
 80008c6:	6063      	str	r3, [r4, #4]
 80008c8:	bf08      	it	eq
 80008ca:	6021      	streq	r1, [r4, #0]
 80008cc:	6054      	str	r4, [r2, #4]
 80008ce:	e7ca      	b.n	8000866 <_free_r+0x22>
 80008d0:	bd38      	pop	{r3, r4, r5, pc}
 80008d2:	bf00      	nop
 80008d4:	200001c4 	.word	0x200001c4

080008d8 <sbrk_aligned>:
 80008d8:	b570      	push	{r4, r5, r6, lr}
 80008da:	4e0f      	ldr	r6, [pc, #60]	@ (8000918 <sbrk_aligned+0x40>)
 80008dc:	460c      	mov	r4, r1
 80008de:	4605      	mov	r5, r0
 80008e0:	6831      	ldr	r1, [r6, #0]
 80008e2:	b911      	cbnz	r1, 80008ea <sbrk_aligned+0x12>
 80008e4:	f000 fcb2 	bl	800124c <_sbrk_r>
 80008e8:	6030      	str	r0, [r6, #0]
 80008ea:	4621      	mov	r1, r4
 80008ec:	4628      	mov	r0, r5
 80008ee:	f000 fcad 	bl	800124c <_sbrk_r>
 80008f2:	1c43      	adds	r3, r0, #1
 80008f4:	d103      	bne.n	80008fe <sbrk_aligned+0x26>
 80008f6:	f04f 34ff 	mov.w	r4, #4294967295
 80008fa:	4620      	mov	r0, r4
 80008fc:	bd70      	pop	{r4, r5, r6, pc}
 80008fe:	1cc4      	adds	r4, r0, #3
 8000900:	f024 0403 	bic.w	r4, r4, #3
 8000904:	42a0      	cmp	r0, r4
 8000906:	d0f8      	beq.n	80008fa <sbrk_aligned+0x22>
 8000908:	1a21      	subs	r1, r4, r0
 800090a:	4628      	mov	r0, r5
 800090c:	f000 fc9e 	bl	800124c <_sbrk_r>
 8000910:	3001      	adds	r0, #1
 8000912:	d1f2      	bne.n	80008fa <sbrk_aligned+0x22>
 8000914:	e7ef      	b.n	80008f6 <sbrk_aligned+0x1e>
 8000916:	bf00      	nop
 8000918:	200001c0 	.word	0x200001c0

0800091c <_malloc_r>:
 800091c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000920:	1ccd      	adds	r5, r1, #3
 8000922:	4606      	mov	r6, r0
 8000924:	f025 0503 	bic.w	r5, r5, #3
 8000928:	3508      	adds	r5, #8
 800092a:	2d0c      	cmp	r5, #12
 800092c:	bf38      	it	cc
 800092e:	250c      	movcc	r5, #12
 8000930:	2d00      	cmp	r5, #0
 8000932:	db01      	blt.n	8000938 <_malloc_r+0x1c>
 8000934:	42a9      	cmp	r1, r5
 8000936:	d904      	bls.n	8000942 <_malloc_r+0x26>
 8000938:	230c      	movs	r3, #12
 800093a:	6033      	str	r3, [r6, #0]
 800093c:	2000      	movs	r0, #0
 800093e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000942:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000a18 <_malloc_r+0xfc>
 8000946:	f000 f869 	bl	8000a1c <__malloc_lock>
 800094a:	f8d8 3000 	ldr.w	r3, [r8]
 800094e:	461c      	mov	r4, r3
 8000950:	bb44      	cbnz	r4, 80009a4 <_malloc_r+0x88>
 8000952:	4629      	mov	r1, r5
 8000954:	4630      	mov	r0, r6
 8000956:	f7ff ffbf 	bl	80008d8 <sbrk_aligned>
 800095a:	1c43      	adds	r3, r0, #1
 800095c:	4604      	mov	r4, r0
 800095e:	d158      	bne.n	8000a12 <_malloc_r+0xf6>
 8000960:	f8d8 4000 	ldr.w	r4, [r8]
 8000964:	4627      	mov	r7, r4
 8000966:	2f00      	cmp	r7, #0
 8000968:	d143      	bne.n	80009f2 <_malloc_r+0xd6>
 800096a:	2c00      	cmp	r4, #0
 800096c:	d04b      	beq.n	8000a06 <_malloc_r+0xea>
 800096e:	6823      	ldr	r3, [r4, #0]
 8000970:	4639      	mov	r1, r7
 8000972:	4630      	mov	r0, r6
 8000974:	eb04 0903 	add.w	r9, r4, r3
 8000978:	f000 fc68 	bl	800124c <_sbrk_r>
 800097c:	4581      	cmp	r9, r0
 800097e:	d142      	bne.n	8000a06 <_malloc_r+0xea>
 8000980:	6821      	ldr	r1, [r4, #0]
 8000982:	4630      	mov	r0, r6
 8000984:	1a6d      	subs	r5, r5, r1
 8000986:	4629      	mov	r1, r5
 8000988:	f7ff ffa6 	bl	80008d8 <sbrk_aligned>
 800098c:	3001      	adds	r0, #1
 800098e:	d03a      	beq.n	8000a06 <_malloc_r+0xea>
 8000990:	6823      	ldr	r3, [r4, #0]
 8000992:	442b      	add	r3, r5
 8000994:	6023      	str	r3, [r4, #0]
 8000996:	f8d8 3000 	ldr.w	r3, [r8]
 800099a:	685a      	ldr	r2, [r3, #4]
 800099c:	bb62      	cbnz	r2, 80009f8 <_malloc_r+0xdc>
 800099e:	f8c8 7000 	str.w	r7, [r8]
 80009a2:	e00f      	b.n	80009c4 <_malloc_r+0xa8>
 80009a4:	6822      	ldr	r2, [r4, #0]
 80009a6:	1b52      	subs	r2, r2, r5
 80009a8:	d420      	bmi.n	80009ec <_malloc_r+0xd0>
 80009aa:	2a0b      	cmp	r2, #11
 80009ac:	d917      	bls.n	80009de <_malloc_r+0xc2>
 80009ae:	1961      	adds	r1, r4, r5
 80009b0:	42a3      	cmp	r3, r4
 80009b2:	6025      	str	r5, [r4, #0]
 80009b4:	bf18      	it	ne
 80009b6:	6059      	strne	r1, [r3, #4]
 80009b8:	6863      	ldr	r3, [r4, #4]
 80009ba:	bf08      	it	eq
 80009bc:	f8c8 1000 	streq.w	r1, [r8]
 80009c0:	5162      	str	r2, [r4, r5]
 80009c2:	604b      	str	r3, [r1, #4]
 80009c4:	4630      	mov	r0, r6
 80009c6:	f000 f82f 	bl	8000a28 <__malloc_unlock>
 80009ca:	f104 000b 	add.w	r0, r4, #11
 80009ce:	1d23      	adds	r3, r4, #4
 80009d0:	f020 0007 	bic.w	r0, r0, #7
 80009d4:	1ac2      	subs	r2, r0, r3
 80009d6:	bf1c      	itt	ne
 80009d8:	1a1b      	subne	r3, r3, r0
 80009da:	50a3      	strne	r3, [r4, r2]
 80009dc:	e7af      	b.n	800093e <_malloc_r+0x22>
 80009de:	6862      	ldr	r2, [r4, #4]
 80009e0:	42a3      	cmp	r3, r4
 80009e2:	bf0c      	ite	eq
 80009e4:	f8c8 2000 	streq.w	r2, [r8]
 80009e8:	605a      	strne	r2, [r3, #4]
 80009ea:	e7eb      	b.n	80009c4 <_malloc_r+0xa8>
 80009ec:	4623      	mov	r3, r4
 80009ee:	6864      	ldr	r4, [r4, #4]
 80009f0:	e7ae      	b.n	8000950 <_malloc_r+0x34>
 80009f2:	463c      	mov	r4, r7
 80009f4:	687f      	ldr	r7, [r7, #4]
 80009f6:	e7b6      	b.n	8000966 <_malloc_r+0x4a>
 80009f8:	461a      	mov	r2, r3
 80009fa:	685b      	ldr	r3, [r3, #4]
 80009fc:	42a3      	cmp	r3, r4
 80009fe:	d1fb      	bne.n	80009f8 <_malloc_r+0xdc>
 8000a00:	2300      	movs	r3, #0
 8000a02:	6053      	str	r3, [r2, #4]
 8000a04:	e7de      	b.n	80009c4 <_malloc_r+0xa8>
 8000a06:	230c      	movs	r3, #12
 8000a08:	4630      	mov	r0, r6
 8000a0a:	6033      	str	r3, [r6, #0]
 8000a0c:	f000 f80c 	bl	8000a28 <__malloc_unlock>
 8000a10:	e794      	b.n	800093c <_malloc_r+0x20>
 8000a12:	6005      	str	r5, [r0, #0]
 8000a14:	e7d6      	b.n	80009c4 <_malloc_r+0xa8>
 8000a16:	bf00      	nop
 8000a18:	200001c4 	.word	0x200001c4

08000a1c <__malloc_lock>:
 8000a1c:	4801      	ldr	r0, [pc, #4]	@ (8000a24 <__malloc_lock+0x8>)
 8000a1e:	f7ff bf0e 	b.w	800083e <__retarget_lock_acquire_recursive>
 8000a22:	bf00      	nop
 8000a24:	200001bc 	.word	0x200001bc

08000a28 <__malloc_unlock>:
 8000a28:	4801      	ldr	r0, [pc, #4]	@ (8000a30 <__malloc_unlock+0x8>)
 8000a2a:	f7ff bf09 	b.w	8000840 <__retarget_lock_release_recursive>
 8000a2e:	bf00      	nop
 8000a30:	200001bc 	.word	0x200001bc

08000a34 <__sfputc_r>:
 8000a34:	6893      	ldr	r3, [r2, #8]
 8000a36:	3b01      	subs	r3, #1
 8000a38:	2b00      	cmp	r3, #0
 8000a3a:	b410      	push	{r4}
 8000a3c:	6093      	str	r3, [r2, #8]
 8000a3e:	da07      	bge.n	8000a50 <__sfputc_r+0x1c>
 8000a40:	6994      	ldr	r4, [r2, #24]
 8000a42:	42a3      	cmp	r3, r4
 8000a44:	db01      	blt.n	8000a4a <__sfputc_r+0x16>
 8000a46:	290a      	cmp	r1, #10
 8000a48:	d102      	bne.n	8000a50 <__sfputc_r+0x1c>
 8000a4a:	bc10      	pop	{r4}
 8000a4c:	f000 bb6a 	b.w	8001124 <__swbuf_r>
 8000a50:	6813      	ldr	r3, [r2, #0]
 8000a52:	1c58      	adds	r0, r3, #1
 8000a54:	6010      	str	r0, [r2, #0]
 8000a56:	4608      	mov	r0, r1
 8000a58:	7019      	strb	r1, [r3, #0]
 8000a5a:	bc10      	pop	{r4}
 8000a5c:	4770      	bx	lr

08000a5e <__sfputs_r>:
 8000a5e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a60:	4606      	mov	r6, r0
 8000a62:	460f      	mov	r7, r1
 8000a64:	4614      	mov	r4, r2
 8000a66:	18d5      	adds	r5, r2, r3
 8000a68:	42ac      	cmp	r4, r5
 8000a6a:	d101      	bne.n	8000a70 <__sfputs_r+0x12>
 8000a6c:	2000      	movs	r0, #0
 8000a6e:	e007      	b.n	8000a80 <__sfputs_r+0x22>
 8000a70:	463a      	mov	r2, r7
 8000a72:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a76:	4630      	mov	r0, r6
 8000a78:	f7ff ffdc 	bl	8000a34 <__sfputc_r>
 8000a7c:	1c43      	adds	r3, r0, #1
 8000a7e:	d1f3      	bne.n	8000a68 <__sfputs_r+0xa>
 8000a80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a84 <_vfiprintf_r>:
 8000a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a88:	460d      	mov	r5, r1
 8000a8a:	b09d      	sub	sp, #116	@ 0x74
 8000a8c:	4614      	mov	r4, r2
 8000a8e:	4698      	mov	r8, r3
 8000a90:	4606      	mov	r6, r0
 8000a92:	b118      	cbz	r0, 8000a9c <_vfiprintf_r+0x18>
 8000a94:	6a03      	ldr	r3, [r0, #32]
 8000a96:	b90b      	cbnz	r3, 8000a9c <_vfiprintf_r+0x18>
 8000a98:	f7ff fdcc 	bl	8000634 <__sinit>
 8000a9c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a9e:	07d9      	lsls	r1, r3, #31
 8000aa0:	d405      	bmi.n	8000aae <_vfiprintf_r+0x2a>
 8000aa2:	89ab      	ldrh	r3, [r5, #12]
 8000aa4:	059a      	lsls	r2, r3, #22
 8000aa6:	d402      	bmi.n	8000aae <_vfiprintf_r+0x2a>
 8000aa8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000aaa:	f7ff fec8 	bl	800083e <__retarget_lock_acquire_recursive>
 8000aae:	89ab      	ldrh	r3, [r5, #12]
 8000ab0:	071b      	lsls	r3, r3, #28
 8000ab2:	d501      	bpl.n	8000ab8 <_vfiprintf_r+0x34>
 8000ab4:	692b      	ldr	r3, [r5, #16]
 8000ab6:	b99b      	cbnz	r3, 8000ae0 <_vfiprintf_r+0x5c>
 8000ab8:	4629      	mov	r1, r5
 8000aba:	4630      	mov	r0, r6
 8000abc:	f000 fb70 	bl	80011a0 <__swsetup_r>
 8000ac0:	b170      	cbz	r0, 8000ae0 <_vfiprintf_r+0x5c>
 8000ac2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000ac4:	07dc      	lsls	r4, r3, #31
 8000ac6:	d504      	bpl.n	8000ad2 <_vfiprintf_r+0x4e>
 8000ac8:	f04f 30ff 	mov.w	r0, #4294967295
 8000acc:	b01d      	add	sp, #116	@ 0x74
 8000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ad2:	89ab      	ldrh	r3, [r5, #12]
 8000ad4:	0598      	lsls	r0, r3, #22
 8000ad6:	d4f7      	bmi.n	8000ac8 <_vfiprintf_r+0x44>
 8000ad8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ada:	f7ff feb1 	bl	8000840 <__retarget_lock_release_recursive>
 8000ade:	e7f3      	b.n	8000ac8 <_vfiprintf_r+0x44>
 8000ae0:	2300      	movs	r3, #0
 8000ae2:	f8cd 800c 	str.w	r8, [sp, #12]
 8000ae6:	f04f 0901 	mov.w	r9, #1
 8000aea:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8000ca0 <_vfiprintf_r+0x21c>
 8000aee:	9309      	str	r3, [sp, #36]	@ 0x24
 8000af0:	2320      	movs	r3, #32
 8000af2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000af6:	2330      	movs	r3, #48	@ 0x30
 8000af8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000afc:	4623      	mov	r3, r4
 8000afe:	469a      	mov	sl, r3
 8000b00:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b04:	b10a      	cbz	r2, 8000b0a <_vfiprintf_r+0x86>
 8000b06:	2a25      	cmp	r2, #37	@ 0x25
 8000b08:	d1f9      	bne.n	8000afe <_vfiprintf_r+0x7a>
 8000b0a:	ebba 0b04 	subs.w	fp, sl, r4
 8000b0e:	d00b      	beq.n	8000b28 <_vfiprintf_r+0xa4>
 8000b10:	465b      	mov	r3, fp
 8000b12:	4622      	mov	r2, r4
 8000b14:	4629      	mov	r1, r5
 8000b16:	4630      	mov	r0, r6
 8000b18:	f7ff ffa1 	bl	8000a5e <__sfputs_r>
 8000b1c:	3001      	adds	r0, #1
 8000b1e:	f000 80a7 	beq.w	8000c70 <_vfiprintf_r+0x1ec>
 8000b22:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000b24:	445a      	add	r2, fp
 8000b26:	9209      	str	r2, [sp, #36]	@ 0x24
 8000b28:	f89a 3000 	ldrb.w	r3, [sl]
 8000b2c:	2b00      	cmp	r3, #0
 8000b2e:	f000 809f 	beq.w	8000c70 <_vfiprintf_r+0x1ec>
 8000b32:	2300      	movs	r3, #0
 8000b34:	f04f 32ff 	mov.w	r2, #4294967295
 8000b38:	f10a 0a01 	add.w	sl, sl, #1
 8000b3c:	9304      	str	r3, [sp, #16]
 8000b3e:	9307      	str	r3, [sp, #28]
 8000b40:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000b44:	931a      	str	r3, [sp, #104]	@ 0x68
 8000b46:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b4a:	4654      	mov	r4, sl
 8000b4c:	2205      	movs	r2, #5
 8000b4e:	4854      	ldr	r0, [pc, #336]	@ (8000ca0 <_vfiprintf_r+0x21c>)
 8000b50:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b54:	f000 fb8a 	bl	800126c <memchr>
 8000b58:	9a04      	ldr	r2, [sp, #16]
 8000b5a:	b9d8      	cbnz	r0, 8000b94 <_vfiprintf_r+0x110>
 8000b5c:	06d1      	lsls	r1, r2, #27
 8000b5e:	bf44      	itt	mi
 8000b60:	2320      	movmi	r3, #32
 8000b62:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000b66:	0713      	lsls	r3, r2, #28
 8000b68:	bf44      	itt	mi
 8000b6a:	232b      	movmi	r3, #43	@ 0x2b
 8000b6c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000b70:	f89a 3000 	ldrb.w	r3, [sl]
 8000b74:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b76:	d015      	beq.n	8000ba4 <_vfiprintf_r+0x120>
 8000b78:	9a07      	ldr	r2, [sp, #28]
 8000b7a:	4654      	mov	r4, sl
 8000b7c:	2000      	movs	r0, #0
 8000b7e:	f04f 0c0a 	mov.w	ip, #10
 8000b82:	4621      	mov	r1, r4
 8000b84:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b88:	3b30      	subs	r3, #48	@ 0x30
 8000b8a:	2b09      	cmp	r3, #9
 8000b8c:	d94b      	bls.n	8000c26 <_vfiprintf_r+0x1a2>
 8000b8e:	b1b0      	cbz	r0, 8000bbe <_vfiprintf_r+0x13a>
 8000b90:	9207      	str	r2, [sp, #28]
 8000b92:	e014      	b.n	8000bbe <_vfiprintf_r+0x13a>
 8000b94:	eba0 0308 	sub.w	r3, r0, r8
 8000b98:	46a2      	mov	sl, r4
 8000b9a:	fa09 f303 	lsl.w	r3, r9, r3
 8000b9e:	4313      	orrs	r3, r2
 8000ba0:	9304      	str	r3, [sp, #16]
 8000ba2:	e7d2      	b.n	8000b4a <_vfiprintf_r+0xc6>
 8000ba4:	9b03      	ldr	r3, [sp, #12]
 8000ba6:	1d19      	adds	r1, r3, #4
 8000ba8:	681b      	ldr	r3, [r3, #0]
 8000baa:	2b00      	cmp	r3, #0
 8000bac:	9103      	str	r1, [sp, #12]
 8000bae:	bfbb      	ittet	lt
 8000bb0:	425b      	neglt	r3, r3
 8000bb2:	f042 0202 	orrlt.w	r2, r2, #2
 8000bb6:	9307      	strge	r3, [sp, #28]
 8000bb8:	9307      	strlt	r3, [sp, #28]
 8000bba:	bfb8      	it	lt
 8000bbc:	9204      	strlt	r2, [sp, #16]
 8000bbe:	7823      	ldrb	r3, [r4, #0]
 8000bc0:	2b2e      	cmp	r3, #46	@ 0x2e
 8000bc2:	d10a      	bne.n	8000bda <_vfiprintf_r+0x156>
 8000bc4:	7863      	ldrb	r3, [r4, #1]
 8000bc6:	2b2a      	cmp	r3, #42	@ 0x2a
 8000bc8:	d132      	bne.n	8000c30 <_vfiprintf_r+0x1ac>
 8000bca:	9b03      	ldr	r3, [sp, #12]
 8000bcc:	3402      	adds	r4, #2
 8000bce:	1d1a      	adds	r2, r3, #4
 8000bd0:	681b      	ldr	r3, [r3, #0]
 8000bd2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000bd6:	9203      	str	r2, [sp, #12]
 8000bd8:	9305      	str	r3, [sp, #20]
 8000bda:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000ca4 <_vfiprintf_r+0x220>
 8000bde:	2203      	movs	r2, #3
 8000be0:	7821      	ldrb	r1, [r4, #0]
 8000be2:	4650      	mov	r0, sl
 8000be4:	f000 fb42 	bl	800126c <memchr>
 8000be8:	b138      	cbz	r0, 8000bfa <_vfiprintf_r+0x176>
 8000bea:	eba0 000a 	sub.w	r0, r0, sl
 8000bee:	2240      	movs	r2, #64	@ 0x40
 8000bf0:	9b04      	ldr	r3, [sp, #16]
 8000bf2:	3401      	adds	r4, #1
 8000bf4:	4082      	lsls	r2, r0
 8000bf6:	4313      	orrs	r3, r2
 8000bf8:	9304      	str	r3, [sp, #16]
 8000bfa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bfe:	2206      	movs	r2, #6
 8000c00:	4829      	ldr	r0, [pc, #164]	@ (8000ca8 <_vfiprintf_r+0x224>)
 8000c02:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000c06:	f000 fb31 	bl	800126c <memchr>
 8000c0a:	2800      	cmp	r0, #0
 8000c0c:	d03f      	beq.n	8000c8e <_vfiprintf_r+0x20a>
 8000c0e:	4b27      	ldr	r3, [pc, #156]	@ (8000cac <_vfiprintf_r+0x228>)
 8000c10:	bb1b      	cbnz	r3, 8000c5a <_vfiprintf_r+0x1d6>
 8000c12:	9b03      	ldr	r3, [sp, #12]
 8000c14:	3307      	adds	r3, #7
 8000c16:	f023 0307 	bic.w	r3, r3, #7
 8000c1a:	3308      	adds	r3, #8
 8000c1c:	9303      	str	r3, [sp, #12]
 8000c1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000c20:	443b      	add	r3, r7
 8000c22:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c24:	e76a      	b.n	8000afc <_vfiprintf_r+0x78>
 8000c26:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c2a:	460c      	mov	r4, r1
 8000c2c:	2001      	movs	r0, #1
 8000c2e:	e7a8      	b.n	8000b82 <_vfiprintf_r+0xfe>
 8000c30:	2300      	movs	r3, #0
 8000c32:	3401      	adds	r4, #1
 8000c34:	f04f 0c0a 	mov.w	ip, #10
 8000c38:	4619      	mov	r1, r3
 8000c3a:	9305      	str	r3, [sp, #20]
 8000c3c:	4620      	mov	r0, r4
 8000c3e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c42:	3a30      	subs	r2, #48	@ 0x30
 8000c44:	2a09      	cmp	r2, #9
 8000c46:	d903      	bls.n	8000c50 <_vfiprintf_r+0x1cc>
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d0c6      	beq.n	8000bda <_vfiprintf_r+0x156>
 8000c4c:	9105      	str	r1, [sp, #20]
 8000c4e:	e7c4      	b.n	8000bda <_vfiprintf_r+0x156>
 8000c50:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c54:	4604      	mov	r4, r0
 8000c56:	2301      	movs	r3, #1
 8000c58:	e7f0      	b.n	8000c3c <_vfiprintf_r+0x1b8>
 8000c5a:	ab03      	add	r3, sp, #12
 8000c5c:	462a      	mov	r2, r5
 8000c5e:	a904      	add	r1, sp, #16
 8000c60:	4630      	mov	r0, r6
 8000c62:	9300      	str	r3, [sp, #0]
 8000c64:	4b12      	ldr	r3, [pc, #72]	@ (8000cb0 <_vfiprintf_r+0x22c>)
 8000c66:	f3af 8000 	nop.w
 8000c6a:	4607      	mov	r7, r0
 8000c6c:	1c78      	adds	r0, r7, #1
 8000c6e:	d1d6      	bne.n	8000c1e <_vfiprintf_r+0x19a>
 8000c70:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c72:	07d9      	lsls	r1, r3, #31
 8000c74:	d405      	bmi.n	8000c82 <_vfiprintf_r+0x1fe>
 8000c76:	89ab      	ldrh	r3, [r5, #12]
 8000c78:	059a      	lsls	r2, r3, #22
 8000c7a:	d402      	bmi.n	8000c82 <_vfiprintf_r+0x1fe>
 8000c7c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c7e:	f7ff fddf 	bl	8000840 <__retarget_lock_release_recursive>
 8000c82:	89ab      	ldrh	r3, [r5, #12]
 8000c84:	065b      	lsls	r3, r3, #25
 8000c86:	f53f af1f 	bmi.w	8000ac8 <_vfiprintf_r+0x44>
 8000c8a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000c8c:	e71e      	b.n	8000acc <_vfiprintf_r+0x48>
 8000c8e:	ab03      	add	r3, sp, #12
 8000c90:	462a      	mov	r2, r5
 8000c92:	a904      	add	r1, sp, #16
 8000c94:	4630      	mov	r0, r6
 8000c96:	9300      	str	r3, [sp, #0]
 8000c98:	4b05      	ldr	r3, [pc, #20]	@ (8000cb0 <_vfiprintf_r+0x22c>)
 8000c9a:	f000 f87d 	bl	8000d98 <_printf_i>
 8000c9e:	e7e4      	b.n	8000c6a <_vfiprintf_r+0x1e6>
 8000ca0:	080013ac 	.word	0x080013ac
 8000ca4:	080013b2 	.word	0x080013b2
 8000ca8:	080013b6 	.word	0x080013b6
 8000cac:	00000000 	.word	0x00000000
 8000cb0:	08000a5f 	.word	0x08000a5f

08000cb4 <_printf_common>:
 8000cb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cb8:	4616      	mov	r6, r2
 8000cba:	4698      	mov	r8, r3
 8000cbc:	688a      	ldr	r2, [r1, #8]
 8000cbe:	4607      	mov	r7, r0
 8000cc0:	690b      	ldr	r3, [r1, #16]
 8000cc2:	460c      	mov	r4, r1
 8000cc4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000cc8:	4293      	cmp	r3, r2
 8000cca:	bfb8      	it	lt
 8000ccc:	4613      	movlt	r3, r2
 8000cce:	6033      	str	r3, [r6, #0]
 8000cd0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000cd4:	b10a      	cbz	r2, 8000cda <_printf_common+0x26>
 8000cd6:	3301      	adds	r3, #1
 8000cd8:	6033      	str	r3, [r6, #0]
 8000cda:	6823      	ldr	r3, [r4, #0]
 8000cdc:	0699      	lsls	r1, r3, #26
 8000cde:	bf42      	ittt	mi
 8000ce0:	6833      	ldrmi	r3, [r6, #0]
 8000ce2:	3302      	addmi	r3, #2
 8000ce4:	6033      	strmi	r3, [r6, #0]
 8000ce6:	6825      	ldr	r5, [r4, #0]
 8000ce8:	f015 0506 	ands.w	r5, r5, #6
 8000cec:	d106      	bne.n	8000cfc <_printf_common+0x48>
 8000cee:	f104 0a19 	add.w	sl, r4, #25
 8000cf2:	68e3      	ldr	r3, [r4, #12]
 8000cf4:	6832      	ldr	r2, [r6, #0]
 8000cf6:	1a9b      	subs	r3, r3, r2
 8000cf8:	42ab      	cmp	r3, r5
 8000cfa:	dc2b      	bgt.n	8000d54 <_printf_common+0xa0>
 8000cfc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000d00:	6822      	ldr	r2, [r4, #0]
 8000d02:	3b00      	subs	r3, #0
 8000d04:	bf18      	it	ne
 8000d06:	2301      	movne	r3, #1
 8000d08:	0692      	lsls	r2, r2, #26
 8000d0a:	d430      	bmi.n	8000d6e <_printf_common+0xba>
 8000d0c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000d10:	4641      	mov	r1, r8
 8000d12:	4638      	mov	r0, r7
 8000d14:	47c8      	blx	r9
 8000d16:	3001      	adds	r0, #1
 8000d18:	d023      	beq.n	8000d62 <_printf_common+0xae>
 8000d1a:	6823      	ldr	r3, [r4, #0]
 8000d1c:	341a      	adds	r4, #26
 8000d1e:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8000d22:	f003 0306 	and.w	r3, r3, #6
 8000d26:	2b04      	cmp	r3, #4
 8000d28:	bf0a      	itet	eq
 8000d2a:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 8000d2e:	2500      	movne	r5, #0
 8000d30:	6833      	ldreq	r3, [r6, #0]
 8000d32:	f04f 0600 	mov.w	r6, #0
 8000d36:	bf08      	it	eq
 8000d38:	1aed      	subeq	r5, r5, r3
 8000d3a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000d3e:	bf08      	it	eq
 8000d40:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d44:	4293      	cmp	r3, r2
 8000d46:	bfc4      	itt	gt
 8000d48:	1a9b      	subgt	r3, r3, r2
 8000d4a:	18ed      	addgt	r5, r5, r3
 8000d4c:	42b5      	cmp	r5, r6
 8000d4e:	d11a      	bne.n	8000d86 <_printf_common+0xd2>
 8000d50:	2000      	movs	r0, #0
 8000d52:	e008      	b.n	8000d66 <_printf_common+0xb2>
 8000d54:	2301      	movs	r3, #1
 8000d56:	4652      	mov	r2, sl
 8000d58:	4641      	mov	r1, r8
 8000d5a:	4638      	mov	r0, r7
 8000d5c:	47c8      	blx	r9
 8000d5e:	3001      	adds	r0, #1
 8000d60:	d103      	bne.n	8000d6a <_printf_common+0xb6>
 8000d62:	f04f 30ff 	mov.w	r0, #4294967295
 8000d66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d6a:	3501      	adds	r5, #1
 8000d6c:	e7c1      	b.n	8000cf2 <_printf_common+0x3e>
 8000d6e:	18e1      	adds	r1, r4, r3
 8000d70:	1c5a      	adds	r2, r3, #1
 8000d72:	2030      	movs	r0, #48	@ 0x30
 8000d74:	3302      	adds	r3, #2
 8000d76:	4422      	add	r2, r4
 8000d78:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000d7c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000d80:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000d84:	e7c2      	b.n	8000d0c <_printf_common+0x58>
 8000d86:	2301      	movs	r3, #1
 8000d88:	4622      	mov	r2, r4
 8000d8a:	4641      	mov	r1, r8
 8000d8c:	4638      	mov	r0, r7
 8000d8e:	47c8      	blx	r9
 8000d90:	3001      	adds	r0, #1
 8000d92:	d0e6      	beq.n	8000d62 <_printf_common+0xae>
 8000d94:	3601      	adds	r6, #1
 8000d96:	e7d9      	b.n	8000d4c <_printf_common+0x98>

08000d98 <_printf_i>:
 8000d98:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d9c:	7e0f      	ldrb	r7, [r1, #24]
 8000d9e:	4691      	mov	r9, r2
 8000da0:	4680      	mov	r8, r0
 8000da2:	460c      	mov	r4, r1
 8000da4:	2f78      	cmp	r7, #120	@ 0x78
 8000da6:	469a      	mov	sl, r3
 8000da8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000daa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000dae:	d807      	bhi.n	8000dc0 <_printf_i+0x28>
 8000db0:	2f62      	cmp	r7, #98	@ 0x62
 8000db2:	d80a      	bhi.n	8000dca <_printf_i+0x32>
 8000db4:	2f00      	cmp	r7, #0
 8000db6:	f000 80d1 	beq.w	8000f5c <_printf_i+0x1c4>
 8000dba:	2f58      	cmp	r7, #88	@ 0x58
 8000dbc:	f000 80b8 	beq.w	8000f30 <_printf_i+0x198>
 8000dc0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000dc4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000dc8:	e03a      	b.n	8000e40 <_printf_i+0xa8>
 8000dca:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000dce:	2b15      	cmp	r3, #21
 8000dd0:	d8f6      	bhi.n	8000dc0 <_printf_i+0x28>
 8000dd2:	a101      	add	r1, pc, #4	@ (adr r1, 8000dd8 <_printf_i+0x40>)
 8000dd4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000dd8:	08000e31 	.word	0x08000e31
 8000ddc:	08000e45 	.word	0x08000e45
 8000de0:	08000dc1 	.word	0x08000dc1
 8000de4:	08000dc1 	.word	0x08000dc1
 8000de8:	08000dc1 	.word	0x08000dc1
 8000dec:	08000dc1 	.word	0x08000dc1
 8000df0:	08000e45 	.word	0x08000e45
 8000df4:	08000dc1 	.word	0x08000dc1
 8000df8:	08000dc1 	.word	0x08000dc1
 8000dfc:	08000dc1 	.word	0x08000dc1
 8000e00:	08000dc1 	.word	0x08000dc1
 8000e04:	08000f43 	.word	0x08000f43
 8000e08:	08000e6f 	.word	0x08000e6f
 8000e0c:	08000efd 	.word	0x08000efd
 8000e10:	08000dc1 	.word	0x08000dc1
 8000e14:	08000dc1 	.word	0x08000dc1
 8000e18:	08000f65 	.word	0x08000f65
 8000e1c:	08000dc1 	.word	0x08000dc1
 8000e20:	08000e6f 	.word	0x08000e6f
 8000e24:	08000dc1 	.word	0x08000dc1
 8000e28:	08000dc1 	.word	0x08000dc1
 8000e2c:	08000f05 	.word	0x08000f05
 8000e30:	6833      	ldr	r3, [r6, #0]
 8000e32:	1d1a      	adds	r2, r3, #4
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	6032      	str	r2, [r6, #0]
 8000e38:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000e3c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000e40:	2301      	movs	r3, #1
 8000e42:	e09c      	b.n	8000f7e <_printf_i+0x1e6>
 8000e44:	6833      	ldr	r3, [r6, #0]
 8000e46:	6820      	ldr	r0, [r4, #0]
 8000e48:	1d19      	adds	r1, r3, #4
 8000e4a:	6031      	str	r1, [r6, #0]
 8000e4c:	0606      	lsls	r6, r0, #24
 8000e4e:	d501      	bpl.n	8000e54 <_printf_i+0xbc>
 8000e50:	681d      	ldr	r5, [r3, #0]
 8000e52:	e003      	b.n	8000e5c <_printf_i+0xc4>
 8000e54:	0645      	lsls	r5, r0, #25
 8000e56:	d5fb      	bpl.n	8000e50 <_printf_i+0xb8>
 8000e58:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000e5c:	2d00      	cmp	r5, #0
 8000e5e:	da03      	bge.n	8000e68 <_printf_i+0xd0>
 8000e60:	232d      	movs	r3, #45	@ 0x2d
 8000e62:	426d      	negs	r5, r5
 8000e64:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e68:	4858      	ldr	r0, [pc, #352]	@ (8000fcc <_printf_i+0x234>)
 8000e6a:	230a      	movs	r3, #10
 8000e6c:	e011      	b.n	8000e92 <_printf_i+0xfa>
 8000e6e:	6821      	ldr	r1, [r4, #0]
 8000e70:	6833      	ldr	r3, [r6, #0]
 8000e72:	0608      	lsls	r0, r1, #24
 8000e74:	f853 5b04 	ldr.w	r5, [r3], #4
 8000e78:	d402      	bmi.n	8000e80 <_printf_i+0xe8>
 8000e7a:	0649      	lsls	r1, r1, #25
 8000e7c:	bf48      	it	mi
 8000e7e:	b2ad      	uxthmi	r5, r5
 8000e80:	2f6f      	cmp	r7, #111	@ 0x6f
 8000e82:	6033      	str	r3, [r6, #0]
 8000e84:	4851      	ldr	r0, [pc, #324]	@ (8000fcc <_printf_i+0x234>)
 8000e86:	bf14      	ite	ne
 8000e88:	230a      	movne	r3, #10
 8000e8a:	2308      	moveq	r3, #8
 8000e8c:	2100      	movs	r1, #0
 8000e8e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000e92:	6866      	ldr	r6, [r4, #4]
 8000e94:	2e00      	cmp	r6, #0
 8000e96:	60a6      	str	r6, [r4, #8]
 8000e98:	db05      	blt.n	8000ea6 <_printf_i+0x10e>
 8000e9a:	6821      	ldr	r1, [r4, #0]
 8000e9c:	432e      	orrs	r6, r5
 8000e9e:	f021 0104 	bic.w	r1, r1, #4
 8000ea2:	6021      	str	r1, [r4, #0]
 8000ea4:	d04b      	beq.n	8000f3e <_printf_i+0x1a6>
 8000ea6:	4616      	mov	r6, r2
 8000ea8:	fbb5 f1f3 	udiv	r1, r5, r3
 8000eac:	fb03 5711 	mls	r7, r3, r1, r5
 8000eb0:	5dc7      	ldrb	r7, [r0, r7]
 8000eb2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000eb6:	462f      	mov	r7, r5
 8000eb8:	460d      	mov	r5, r1
 8000eba:	42bb      	cmp	r3, r7
 8000ebc:	d9f4      	bls.n	8000ea8 <_printf_i+0x110>
 8000ebe:	2b08      	cmp	r3, #8
 8000ec0:	d10b      	bne.n	8000eda <_printf_i+0x142>
 8000ec2:	6823      	ldr	r3, [r4, #0]
 8000ec4:	07df      	lsls	r7, r3, #31
 8000ec6:	d508      	bpl.n	8000eda <_printf_i+0x142>
 8000ec8:	6923      	ldr	r3, [r4, #16]
 8000eca:	6861      	ldr	r1, [r4, #4]
 8000ecc:	4299      	cmp	r1, r3
 8000ece:	bfde      	ittt	le
 8000ed0:	2330      	movle	r3, #48	@ 0x30
 8000ed2:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000ed6:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000eda:	1b92      	subs	r2, r2, r6
 8000edc:	6122      	str	r2, [r4, #16]
 8000ede:	464b      	mov	r3, r9
 8000ee0:	aa03      	add	r2, sp, #12
 8000ee2:	4621      	mov	r1, r4
 8000ee4:	4640      	mov	r0, r8
 8000ee6:	f8cd a000 	str.w	sl, [sp]
 8000eea:	f7ff fee3 	bl	8000cb4 <_printf_common>
 8000eee:	3001      	adds	r0, #1
 8000ef0:	d14a      	bne.n	8000f88 <_printf_i+0x1f0>
 8000ef2:	f04f 30ff 	mov.w	r0, #4294967295
 8000ef6:	b004      	add	sp, #16
 8000ef8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000efc:	6823      	ldr	r3, [r4, #0]
 8000efe:	f043 0320 	orr.w	r3, r3, #32
 8000f02:	6023      	str	r3, [r4, #0]
 8000f04:	2778      	movs	r7, #120	@ 0x78
 8000f06:	4832      	ldr	r0, [pc, #200]	@ (8000fd0 <_printf_i+0x238>)
 8000f08:	6823      	ldr	r3, [r4, #0]
 8000f0a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000f0e:	061f      	lsls	r7, r3, #24
 8000f10:	6831      	ldr	r1, [r6, #0]
 8000f12:	f851 5b04 	ldr.w	r5, [r1], #4
 8000f16:	d402      	bmi.n	8000f1e <_printf_i+0x186>
 8000f18:	065f      	lsls	r7, r3, #25
 8000f1a:	bf48      	it	mi
 8000f1c:	b2ad      	uxthmi	r5, r5
 8000f1e:	6031      	str	r1, [r6, #0]
 8000f20:	07d9      	lsls	r1, r3, #31
 8000f22:	bf44      	itt	mi
 8000f24:	f043 0320 	orrmi.w	r3, r3, #32
 8000f28:	6023      	strmi	r3, [r4, #0]
 8000f2a:	b11d      	cbz	r5, 8000f34 <_printf_i+0x19c>
 8000f2c:	2310      	movs	r3, #16
 8000f2e:	e7ad      	b.n	8000e8c <_printf_i+0xf4>
 8000f30:	4826      	ldr	r0, [pc, #152]	@ (8000fcc <_printf_i+0x234>)
 8000f32:	e7e9      	b.n	8000f08 <_printf_i+0x170>
 8000f34:	6823      	ldr	r3, [r4, #0]
 8000f36:	f023 0320 	bic.w	r3, r3, #32
 8000f3a:	6023      	str	r3, [r4, #0]
 8000f3c:	e7f6      	b.n	8000f2c <_printf_i+0x194>
 8000f3e:	4616      	mov	r6, r2
 8000f40:	e7bd      	b.n	8000ebe <_printf_i+0x126>
 8000f42:	6833      	ldr	r3, [r6, #0]
 8000f44:	6825      	ldr	r5, [r4, #0]
 8000f46:	1d18      	adds	r0, r3, #4
 8000f48:	6961      	ldr	r1, [r4, #20]
 8000f4a:	6030      	str	r0, [r6, #0]
 8000f4c:	062e      	lsls	r6, r5, #24
 8000f4e:	681b      	ldr	r3, [r3, #0]
 8000f50:	d501      	bpl.n	8000f56 <_printf_i+0x1be>
 8000f52:	6019      	str	r1, [r3, #0]
 8000f54:	e002      	b.n	8000f5c <_printf_i+0x1c4>
 8000f56:	0668      	lsls	r0, r5, #25
 8000f58:	d5fb      	bpl.n	8000f52 <_printf_i+0x1ba>
 8000f5a:	8019      	strh	r1, [r3, #0]
 8000f5c:	2300      	movs	r3, #0
 8000f5e:	4616      	mov	r6, r2
 8000f60:	6123      	str	r3, [r4, #16]
 8000f62:	e7bc      	b.n	8000ede <_printf_i+0x146>
 8000f64:	6833      	ldr	r3, [r6, #0]
 8000f66:	2100      	movs	r1, #0
 8000f68:	1d1a      	adds	r2, r3, #4
 8000f6a:	6032      	str	r2, [r6, #0]
 8000f6c:	681e      	ldr	r6, [r3, #0]
 8000f6e:	6862      	ldr	r2, [r4, #4]
 8000f70:	4630      	mov	r0, r6
 8000f72:	f000 f97b 	bl	800126c <memchr>
 8000f76:	b108      	cbz	r0, 8000f7c <_printf_i+0x1e4>
 8000f78:	1b80      	subs	r0, r0, r6
 8000f7a:	6060      	str	r0, [r4, #4]
 8000f7c:	6863      	ldr	r3, [r4, #4]
 8000f7e:	6123      	str	r3, [r4, #16]
 8000f80:	2300      	movs	r3, #0
 8000f82:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000f86:	e7aa      	b.n	8000ede <_printf_i+0x146>
 8000f88:	6923      	ldr	r3, [r4, #16]
 8000f8a:	4632      	mov	r2, r6
 8000f8c:	4649      	mov	r1, r9
 8000f8e:	4640      	mov	r0, r8
 8000f90:	47d0      	blx	sl
 8000f92:	3001      	adds	r0, #1
 8000f94:	d0ad      	beq.n	8000ef2 <_printf_i+0x15a>
 8000f96:	6823      	ldr	r3, [r4, #0]
 8000f98:	079b      	lsls	r3, r3, #30
 8000f9a:	d413      	bmi.n	8000fc4 <_printf_i+0x22c>
 8000f9c:	68e0      	ldr	r0, [r4, #12]
 8000f9e:	9b03      	ldr	r3, [sp, #12]
 8000fa0:	4298      	cmp	r0, r3
 8000fa2:	bfb8      	it	lt
 8000fa4:	4618      	movlt	r0, r3
 8000fa6:	e7a6      	b.n	8000ef6 <_printf_i+0x15e>
 8000fa8:	2301      	movs	r3, #1
 8000faa:	4632      	mov	r2, r6
 8000fac:	4649      	mov	r1, r9
 8000fae:	4640      	mov	r0, r8
 8000fb0:	47d0      	blx	sl
 8000fb2:	3001      	adds	r0, #1
 8000fb4:	d09d      	beq.n	8000ef2 <_printf_i+0x15a>
 8000fb6:	3501      	adds	r5, #1
 8000fb8:	68e3      	ldr	r3, [r4, #12]
 8000fba:	9903      	ldr	r1, [sp, #12]
 8000fbc:	1a5b      	subs	r3, r3, r1
 8000fbe:	42ab      	cmp	r3, r5
 8000fc0:	dcf2      	bgt.n	8000fa8 <_printf_i+0x210>
 8000fc2:	e7eb      	b.n	8000f9c <_printf_i+0x204>
 8000fc4:	2500      	movs	r5, #0
 8000fc6:	f104 0619 	add.w	r6, r4, #25
 8000fca:	e7f5      	b.n	8000fb8 <_printf_i+0x220>
 8000fcc:	080013bd 	.word	0x080013bd
 8000fd0:	080013ce 	.word	0x080013ce

08000fd4 <__sflush_r>:
 8000fd4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fda:	0716      	lsls	r6, r2, #28
 8000fdc:	4605      	mov	r5, r0
 8000fde:	460c      	mov	r4, r1
 8000fe0:	d454      	bmi.n	800108c <__sflush_r+0xb8>
 8000fe2:	684b      	ldr	r3, [r1, #4]
 8000fe4:	2b00      	cmp	r3, #0
 8000fe6:	dc02      	bgt.n	8000fee <__sflush_r+0x1a>
 8000fe8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000fea:	2b00      	cmp	r3, #0
 8000fec:	dd48      	ble.n	8001080 <__sflush_r+0xac>
 8000fee:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000ff0:	2e00      	cmp	r6, #0
 8000ff2:	d045      	beq.n	8001080 <__sflush_r+0xac>
 8000ff4:	2300      	movs	r3, #0
 8000ff6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000ffa:	682f      	ldr	r7, [r5, #0]
 8000ffc:	6a21      	ldr	r1, [r4, #32]
 8000ffe:	602b      	str	r3, [r5, #0]
 8001000:	d030      	beq.n	8001064 <__sflush_r+0x90>
 8001002:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001004:	89a3      	ldrh	r3, [r4, #12]
 8001006:	0759      	lsls	r1, r3, #29
 8001008:	d505      	bpl.n	8001016 <__sflush_r+0x42>
 800100a:	6863      	ldr	r3, [r4, #4]
 800100c:	1ad2      	subs	r2, r2, r3
 800100e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001010:	b10b      	cbz	r3, 8001016 <__sflush_r+0x42>
 8001012:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001014:	1ad2      	subs	r2, r2, r3
 8001016:	2300      	movs	r3, #0
 8001018:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800101a:	6a21      	ldr	r1, [r4, #32]
 800101c:	4628      	mov	r0, r5
 800101e:	47b0      	blx	r6
 8001020:	1c43      	adds	r3, r0, #1
 8001022:	89a3      	ldrh	r3, [r4, #12]
 8001024:	d106      	bne.n	8001034 <__sflush_r+0x60>
 8001026:	6829      	ldr	r1, [r5, #0]
 8001028:	291d      	cmp	r1, #29
 800102a:	d82b      	bhi.n	8001084 <__sflush_r+0xb0>
 800102c:	4a28      	ldr	r2, [pc, #160]	@ (80010d0 <__sflush_r+0xfc>)
 800102e:	40ca      	lsrs	r2, r1
 8001030:	07d6      	lsls	r6, r2, #31
 8001032:	d527      	bpl.n	8001084 <__sflush_r+0xb0>
 8001034:	2200      	movs	r2, #0
 8001036:	04d9      	lsls	r1, r3, #19
 8001038:	6062      	str	r2, [r4, #4]
 800103a:	6922      	ldr	r2, [r4, #16]
 800103c:	6022      	str	r2, [r4, #0]
 800103e:	d504      	bpl.n	800104a <__sflush_r+0x76>
 8001040:	1c42      	adds	r2, r0, #1
 8001042:	d101      	bne.n	8001048 <__sflush_r+0x74>
 8001044:	682b      	ldr	r3, [r5, #0]
 8001046:	b903      	cbnz	r3, 800104a <__sflush_r+0x76>
 8001048:	6560      	str	r0, [r4, #84]	@ 0x54
 800104a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800104c:	602f      	str	r7, [r5, #0]
 800104e:	b1b9      	cbz	r1, 8001080 <__sflush_r+0xac>
 8001050:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001054:	4299      	cmp	r1, r3
 8001056:	d002      	beq.n	800105e <__sflush_r+0x8a>
 8001058:	4628      	mov	r0, r5
 800105a:	f7ff fbf3 	bl	8000844 <_free_r>
 800105e:	2300      	movs	r3, #0
 8001060:	6363      	str	r3, [r4, #52]	@ 0x34
 8001062:	e00d      	b.n	8001080 <__sflush_r+0xac>
 8001064:	2301      	movs	r3, #1
 8001066:	4628      	mov	r0, r5
 8001068:	47b0      	blx	r6
 800106a:	4602      	mov	r2, r0
 800106c:	1c50      	adds	r0, r2, #1
 800106e:	d1c9      	bne.n	8001004 <__sflush_r+0x30>
 8001070:	682b      	ldr	r3, [r5, #0]
 8001072:	2b00      	cmp	r3, #0
 8001074:	d0c6      	beq.n	8001004 <__sflush_r+0x30>
 8001076:	2b1d      	cmp	r3, #29
 8001078:	d001      	beq.n	800107e <__sflush_r+0xaa>
 800107a:	2b16      	cmp	r3, #22
 800107c:	d11c      	bne.n	80010b8 <__sflush_r+0xe4>
 800107e:	602f      	str	r7, [r5, #0]
 8001080:	2000      	movs	r0, #0
 8001082:	e020      	b.n	80010c6 <__sflush_r+0xf2>
 8001084:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001088:	b21b      	sxth	r3, r3
 800108a:	e019      	b.n	80010c0 <__sflush_r+0xec>
 800108c:	690f      	ldr	r7, [r1, #16]
 800108e:	2f00      	cmp	r7, #0
 8001090:	d0f6      	beq.n	8001080 <__sflush_r+0xac>
 8001092:	0793      	lsls	r3, r2, #30
 8001094:	680e      	ldr	r6, [r1, #0]
 8001096:	600f      	str	r7, [r1, #0]
 8001098:	bf0c      	ite	eq
 800109a:	694b      	ldreq	r3, [r1, #20]
 800109c:	2300      	movne	r3, #0
 800109e:	1bf6      	subs	r6, r6, r7
 80010a0:	608b      	str	r3, [r1, #8]
 80010a2:	2e00      	cmp	r6, #0
 80010a4:	ddec      	ble.n	8001080 <__sflush_r+0xac>
 80010a6:	4633      	mov	r3, r6
 80010a8:	463a      	mov	r2, r7
 80010aa:	6a21      	ldr	r1, [r4, #32]
 80010ac:	4628      	mov	r0, r5
 80010ae:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80010b2:	47e0      	blx	ip
 80010b4:	2800      	cmp	r0, #0
 80010b6:	dc07      	bgt.n	80010c8 <__sflush_r+0xf4>
 80010b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010bc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010c0:	f04f 30ff 	mov.w	r0, #4294967295
 80010c4:	81a3      	strh	r3, [r4, #12]
 80010c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010c8:	4407      	add	r7, r0
 80010ca:	1a36      	subs	r6, r6, r0
 80010cc:	e7e9      	b.n	80010a2 <__sflush_r+0xce>
 80010ce:	bf00      	nop
 80010d0:	20400001 	.word	0x20400001

080010d4 <_fflush_r>:
 80010d4:	b538      	push	{r3, r4, r5, lr}
 80010d6:	690b      	ldr	r3, [r1, #16]
 80010d8:	4605      	mov	r5, r0
 80010da:	460c      	mov	r4, r1
 80010dc:	b913      	cbnz	r3, 80010e4 <_fflush_r+0x10>
 80010de:	2500      	movs	r5, #0
 80010e0:	4628      	mov	r0, r5
 80010e2:	bd38      	pop	{r3, r4, r5, pc}
 80010e4:	b118      	cbz	r0, 80010ee <_fflush_r+0x1a>
 80010e6:	6a03      	ldr	r3, [r0, #32]
 80010e8:	b90b      	cbnz	r3, 80010ee <_fflush_r+0x1a>
 80010ea:	f7ff faa3 	bl	8000634 <__sinit>
 80010ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010f2:	2b00      	cmp	r3, #0
 80010f4:	d0f3      	beq.n	80010de <_fflush_r+0xa>
 80010f6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80010f8:	07d0      	lsls	r0, r2, #31
 80010fa:	d404      	bmi.n	8001106 <_fflush_r+0x32>
 80010fc:	0599      	lsls	r1, r3, #22
 80010fe:	d402      	bmi.n	8001106 <_fflush_r+0x32>
 8001100:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001102:	f7ff fb9c 	bl	800083e <__retarget_lock_acquire_recursive>
 8001106:	4628      	mov	r0, r5
 8001108:	4621      	mov	r1, r4
 800110a:	f7ff ff63 	bl	8000fd4 <__sflush_r>
 800110e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001110:	4605      	mov	r5, r0
 8001112:	07da      	lsls	r2, r3, #31
 8001114:	d4e4      	bmi.n	80010e0 <_fflush_r+0xc>
 8001116:	89a3      	ldrh	r3, [r4, #12]
 8001118:	059b      	lsls	r3, r3, #22
 800111a:	d4e1      	bmi.n	80010e0 <_fflush_r+0xc>
 800111c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800111e:	f7ff fb8f 	bl	8000840 <__retarget_lock_release_recursive>
 8001122:	e7dd      	b.n	80010e0 <_fflush_r+0xc>

08001124 <__swbuf_r>:
 8001124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001126:	460e      	mov	r6, r1
 8001128:	4614      	mov	r4, r2
 800112a:	4605      	mov	r5, r0
 800112c:	b118      	cbz	r0, 8001136 <__swbuf_r+0x12>
 800112e:	6a03      	ldr	r3, [r0, #32]
 8001130:	b90b      	cbnz	r3, 8001136 <__swbuf_r+0x12>
 8001132:	f7ff fa7f 	bl	8000634 <__sinit>
 8001136:	69a3      	ldr	r3, [r4, #24]
 8001138:	60a3      	str	r3, [r4, #8]
 800113a:	89a3      	ldrh	r3, [r4, #12]
 800113c:	071a      	lsls	r2, r3, #28
 800113e:	d501      	bpl.n	8001144 <__swbuf_r+0x20>
 8001140:	6923      	ldr	r3, [r4, #16]
 8001142:	b943      	cbnz	r3, 8001156 <__swbuf_r+0x32>
 8001144:	4621      	mov	r1, r4
 8001146:	4628      	mov	r0, r5
 8001148:	f000 f82a 	bl	80011a0 <__swsetup_r>
 800114c:	b118      	cbz	r0, 8001156 <__swbuf_r+0x32>
 800114e:	f04f 37ff 	mov.w	r7, #4294967295
 8001152:	4638      	mov	r0, r7
 8001154:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001156:	6823      	ldr	r3, [r4, #0]
 8001158:	b2f6      	uxtb	r6, r6
 800115a:	6922      	ldr	r2, [r4, #16]
 800115c:	4637      	mov	r7, r6
 800115e:	1a98      	subs	r0, r3, r2
 8001160:	6963      	ldr	r3, [r4, #20]
 8001162:	4283      	cmp	r3, r0
 8001164:	dc05      	bgt.n	8001172 <__swbuf_r+0x4e>
 8001166:	4621      	mov	r1, r4
 8001168:	4628      	mov	r0, r5
 800116a:	f7ff ffb3 	bl	80010d4 <_fflush_r>
 800116e:	2800      	cmp	r0, #0
 8001170:	d1ed      	bne.n	800114e <__swbuf_r+0x2a>
 8001172:	68a3      	ldr	r3, [r4, #8]
 8001174:	3b01      	subs	r3, #1
 8001176:	60a3      	str	r3, [r4, #8]
 8001178:	6823      	ldr	r3, [r4, #0]
 800117a:	1c5a      	adds	r2, r3, #1
 800117c:	6022      	str	r2, [r4, #0]
 800117e:	701e      	strb	r6, [r3, #0]
 8001180:	1c43      	adds	r3, r0, #1
 8001182:	6962      	ldr	r2, [r4, #20]
 8001184:	429a      	cmp	r2, r3
 8001186:	d004      	beq.n	8001192 <__swbuf_r+0x6e>
 8001188:	89a3      	ldrh	r3, [r4, #12]
 800118a:	07db      	lsls	r3, r3, #31
 800118c:	d5e1      	bpl.n	8001152 <__swbuf_r+0x2e>
 800118e:	2e0a      	cmp	r6, #10
 8001190:	d1df      	bne.n	8001152 <__swbuf_r+0x2e>
 8001192:	4621      	mov	r1, r4
 8001194:	4628      	mov	r0, r5
 8001196:	f7ff ff9d 	bl	80010d4 <_fflush_r>
 800119a:	2800      	cmp	r0, #0
 800119c:	d0d9      	beq.n	8001152 <__swbuf_r+0x2e>
 800119e:	e7d6      	b.n	800114e <__swbuf_r+0x2a>

080011a0 <__swsetup_r>:
 80011a0:	b538      	push	{r3, r4, r5, lr}
 80011a2:	4b29      	ldr	r3, [pc, #164]	@ (8001248 <__swsetup_r+0xa8>)
 80011a4:	4605      	mov	r5, r0
 80011a6:	460c      	mov	r4, r1
 80011a8:	6818      	ldr	r0, [r3, #0]
 80011aa:	b118      	cbz	r0, 80011b4 <__swsetup_r+0x14>
 80011ac:	6a03      	ldr	r3, [r0, #32]
 80011ae:	b90b      	cbnz	r3, 80011b4 <__swsetup_r+0x14>
 80011b0:	f7ff fa40 	bl	8000634 <__sinit>
 80011b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011b8:	0719      	lsls	r1, r3, #28
 80011ba:	d422      	bmi.n	8001202 <__swsetup_r+0x62>
 80011bc:	06da      	lsls	r2, r3, #27
 80011be:	d407      	bmi.n	80011d0 <__swsetup_r+0x30>
 80011c0:	2209      	movs	r2, #9
 80011c2:	602a      	str	r2, [r5, #0]
 80011c4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011c8:	f04f 30ff 	mov.w	r0, #4294967295
 80011cc:	81a3      	strh	r3, [r4, #12]
 80011ce:	e033      	b.n	8001238 <__swsetup_r+0x98>
 80011d0:	0758      	lsls	r0, r3, #29
 80011d2:	d512      	bpl.n	80011fa <__swsetup_r+0x5a>
 80011d4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80011d6:	b141      	cbz	r1, 80011ea <__swsetup_r+0x4a>
 80011d8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80011dc:	4299      	cmp	r1, r3
 80011de:	d002      	beq.n	80011e6 <__swsetup_r+0x46>
 80011e0:	4628      	mov	r0, r5
 80011e2:	f7ff fb2f 	bl	8000844 <_free_r>
 80011e6:	2300      	movs	r3, #0
 80011e8:	6363      	str	r3, [r4, #52]	@ 0x34
 80011ea:	89a3      	ldrh	r3, [r4, #12]
 80011ec:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80011f0:	81a3      	strh	r3, [r4, #12]
 80011f2:	2300      	movs	r3, #0
 80011f4:	6063      	str	r3, [r4, #4]
 80011f6:	6923      	ldr	r3, [r4, #16]
 80011f8:	6023      	str	r3, [r4, #0]
 80011fa:	89a3      	ldrh	r3, [r4, #12]
 80011fc:	f043 0308 	orr.w	r3, r3, #8
 8001200:	81a3      	strh	r3, [r4, #12]
 8001202:	6923      	ldr	r3, [r4, #16]
 8001204:	b94b      	cbnz	r3, 800121a <__swsetup_r+0x7a>
 8001206:	89a3      	ldrh	r3, [r4, #12]
 8001208:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800120c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001210:	d003      	beq.n	800121a <__swsetup_r+0x7a>
 8001212:	4621      	mov	r1, r4
 8001214:	4628      	mov	r0, r5
 8001216:	f000 f85c 	bl	80012d2 <__smakebuf_r>
 800121a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800121e:	f013 0201 	ands.w	r2, r3, #1
 8001222:	d00a      	beq.n	800123a <__swsetup_r+0x9a>
 8001224:	2200      	movs	r2, #0
 8001226:	60a2      	str	r2, [r4, #8]
 8001228:	6962      	ldr	r2, [r4, #20]
 800122a:	4252      	negs	r2, r2
 800122c:	61a2      	str	r2, [r4, #24]
 800122e:	6922      	ldr	r2, [r4, #16]
 8001230:	b942      	cbnz	r2, 8001244 <__swsetup_r+0xa4>
 8001232:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001236:	d1c5      	bne.n	80011c4 <__swsetup_r+0x24>
 8001238:	bd38      	pop	{r3, r4, r5, pc}
 800123a:	0799      	lsls	r1, r3, #30
 800123c:	bf58      	it	pl
 800123e:	6962      	ldrpl	r2, [r4, #20]
 8001240:	60a2      	str	r2, [r4, #8]
 8001242:	e7f4      	b.n	800122e <__swsetup_r+0x8e>
 8001244:	2000      	movs	r0, #0
 8001246:	e7f7      	b.n	8001238 <__swsetup_r+0x98>
 8001248:	2000000c 	.word	0x2000000c

0800124c <_sbrk_r>:
 800124c:	b538      	push	{r3, r4, r5, lr}
 800124e:	2300      	movs	r3, #0
 8001250:	4d05      	ldr	r5, [pc, #20]	@ (8001268 <_sbrk_r+0x1c>)
 8001252:	4604      	mov	r4, r0
 8001254:	4608      	mov	r0, r1
 8001256:	602b      	str	r3, [r5, #0]
 8001258:	f7ff f900 	bl	800045c <_sbrk>
 800125c:	1c43      	adds	r3, r0, #1
 800125e:	d102      	bne.n	8001266 <_sbrk_r+0x1a>
 8001260:	682b      	ldr	r3, [r5, #0]
 8001262:	b103      	cbz	r3, 8001266 <_sbrk_r+0x1a>
 8001264:	6023      	str	r3, [r4, #0]
 8001266:	bd38      	pop	{r3, r4, r5, pc}
 8001268:	200001b8 	.word	0x200001b8

0800126c <memchr>:
 800126c:	b2c9      	uxtb	r1, r1
 800126e:	4603      	mov	r3, r0
 8001270:	4402      	add	r2, r0
 8001272:	b510      	push	{r4, lr}
 8001274:	4293      	cmp	r3, r2
 8001276:	4618      	mov	r0, r3
 8001278:	d101      	bne.n	800127e <memchr+0x12>
 800127a:	2000      	movs	r0, #0
 800127c:	e003      	b.n	8001286 <memchr+0x1a>
 800127e:	7804      	ldrb	r4, [r0, #0]
 8001280:	3301      	adds	r3, #1
 8001282:	428c      	cmp	r4, r1
 8001284:	d1f6      	bne.n	8001274 <memchr+0x8>
 8001286:	bd10      	pop	{r4, pc}

08001288 <__swhatbuf_r>:
 8001288:	b570      	push	{r4, r5, r6, lr}
 800128a:	460c      	mov	r4, r1
 800128c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001290:	b096      	sub	sp, #88	@ 0x58
 8001292:	4615      	mov	r5, r2
 8001294:	2900      	cmp	r1, #0
 8001296:	461e      	mov	r6, r3
 8001298:	da0c      	bge.n	80012b4 <__swhatbuf_r+0x2c>
 800129a:	89a3      	ldrh	r3, [r4, #12]
 800129c:	2100      	movs	r1, #0
 800129e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80012a2:	bf14      	ite	ne
 80012a4:	2340      	movne	r3, #64	@ 0x40
 80012a6:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80012aa:	2000      	movs	r0, #0
 80012ac:	6031      	str	r1, [r6, #0]
 80012ae:	602b      	str	r3, [r5, #0]
 80012b0:	b016      	add	sp, #88	@ 0x58
 80012b2:	bd70      	pop	{r4, r5, r6, pc}
 80012b4:	466a      	mov	r2, sp
 80012b6:	f000 f849 	bl	800134c <_fstat_r>
 80012ba:	2800      	cmp	r0, #0
 80012bc:	dbed      	blt.n	800129a <__swhatbuf_r+0x12>
 80012be:	9901      	ldr	r1, [sp, #4]
 80012c0:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80012c4:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80012c8:	4259      	negs	r1, r3
 80012ca:	4159      	adcs	r1, r3
 80012cc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80012d0:	e7eb      	b.n	80012aa <__swhatbuf_r+0x22>

080012d2 <__smakebuf_r>:
 80012d2:	898b      	ldrh	r3, [r1, #12]
 80012d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012d6:	079d      	lsls	r5, r3, #30
 80012d8:	4606      	mov	r6, r0
 80012da:	460c      	mov	r4, r1
 80012dc:	d507      	bpl.n	80012ee <__smakebuf_r+0x1c>
 80012de:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80012e2:	6023      	str	r3, [r4, #0]
 80012e4:	6123      	str	r3, [r4, #16]
 80012e6:	2301      	movs	r3, #1
 80012e8:	6163      	str	r3, [r4, #20]
 80012ea:	b003      	add	sp, #12
 80012ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012ee:	ab01      	add	r3, sp, #4
 80012f0:	466a      	mov	r2, sp
 80012f2:	f7ff ffc9 	bl	8001288 <__swhatbuf_r>
 80012f6:	9f00      	ldr	r7, [sp, #0]
 80012f8:	4605      	mov	r5, r0
 80012fa:	4630      	mov	r0, r6
 80012fc:	4639      	mov	r1, r7
 80012fe:	f7ff fb0d 	bl	800091c <_malloc_r>
 8001302:	b948      	cbnz	r0, 8001318 <__smakebuf_r+0x46>
 8001304:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001308:	059a      	lsls	r2, r3, #22
 800130a:	d4ee      	bmi.n	80012ea <__smakebuf_r+0x18>
 800130c:	f023 0303 	bic.w	r3, r3, #3
 8001310:	f043 0302 	orr.w	r3, r3, #2
 8001314:	81a3      	strh	r3, [r4, #12]
 8001316:	e7e2      	b.n	80012de <__smakebuf_r+0xc>
 8001318:	89a3      	ldrh	r3, [r4, #12]
 800131a:	6020      	str	r0, [r4, #0]
 800131c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001320:	81a3      	strh	r3, [r4, #12]
 8001322:	9b01      	ldr	r3, [sp, #4]
 8001324:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001328:	b15b      	cbz	r3, 8001342 <__smakebuf_r+0x70>
 800132a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800132e:	4630      	mov	r0, r6
 8001330:	f000 f81e 	bl	8001370 <_isatty_r>
 8001334:	b128      	cbz	r0, 8001342 <__smakebuf_r+0x70>
 8001336:	89a3      	ldrh	r3, [r4, #12]
 8001338:	f023 0303 	bic.w	r3, r3, #3
 800133c:	f043 0301 	orr.w	r3, r3, #1
 8001340:	81a3      	strh	r3, [r4, #12]
 8001342:	89a3      	ldrh	r3, [r4, #12]
 8001344:	431d      	orrs	r5, r3
 8001346:	81a5      	strh	r5, [r4, #12]
 8001348:	e7cf      	b.n	80012ea <__smakebuf_r+0x18>
	...

0800134c <_fstat_r>:
 800134c:	b538      	push	{r3, r4, r5, lr}
 800134e:	2300      	movs	r3, #0
 8001350:	4d06      	ldr	r5, [pc, #24]	@ (800136c <_fstat_r+0x20>)
 8001352:	4604      	mov	r4, r0
 8001354:	4608      	mov	r0, r1
 8001356:	4611      	mov	r1, r2
 8001358:	602b      	str	r3, [r5, #0]
 800135a:	f7ff f859 	bl	8000410 <_fstat>
 800135e:	1c43      	adds	r3, r0, #1
 8001360:	d102      	bne.n	8001368 <_fstat_r+0x1c>
 8001362:	682b      	ldr	r3, [r5, #0]
 8001364:	b103      	cbz	r3, 8001368 <_fstat_r+0x1c>
 8001366:	6023      	str	r3, [r4, #0]
 8001368:	bd38      	pop	{r3, r4, r5, pc}
 800136a:	bf00      	nop
 800136c:	200001b8 	.word	0x200001b8

08001370 <_isatty_r>:
 8001370:	b538      	push	{r3, r4, r5, lr}
 8001372:	2300      	movs	r3, #0
 8001374:	4d05      	ldr	r5, [pc, #20]	@ (800138c <_isatty_r+0x1c>)
 8001376:	4604      	mov	r4, r0
 8001378:	4608      	mov	r0, r1
 800137a:	602b      	str	r3, [r5, #0]
 800137c:	f7ff f857 	bl	800042e <_isatty>
 8001380:	1c43      	adds	r3, r0, #1
 8001382:	d102      	bne.n	800138a <_isatty_r+0x1a>
 8001384:	682b      	ldr	r3, [r5, #0]
 8001386:	b103      	cbz	r3, 800138a <_isatty_r+0x1a>
 8001388:	6023      	str	r3, [r4, #0]
 800138a:	bd38      	pop	{r3, r4, r5, pc}
 800138c:	200001b8 	.word	0x200001b8

08001390 <_init>:
 8001390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001392:	bf00      	nop
 8001394:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001396:	bc08      	pop	{r3}
 8001398:	469e      	mov	lr, r3
 800139a:	4770      	bx	lr

0800139c <_fini>:
 800139c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800139e:	bf00      	nop
 80013a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013a2:	bc08      	pop	{r3}
 80013a4:	469e      	mov	lr, r3
 80013a6:	4770      	bx	lr
