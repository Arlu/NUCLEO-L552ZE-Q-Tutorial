
Ex05-GetStackSize.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000011ac  080001f0  080001f0  000011f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000074  0800139c  0800139c  0000239c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001410  08001410  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08001410  08001410  0000305c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08001410  08001410  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001410  08001410  00002410  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001414  08001414  00002414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001418  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  2000005c  08001474  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08001474  000031cc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001966  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000004e5  00000000  00000000  000049f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00004ed8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d7  00000000  00000000  00005018  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002e7c  00000000  00000000  000050ef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000018b2  00000000  00000000  00007f6b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000a223  00000000  00000000  0000981d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00013a40  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bb8  00000000  00000000  00013a84  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005e  00000000  00000000  0001463c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f0 <__do_global_dtors_aux>:
 80001f0:	b510      	push	{r4, lr}
 80001f2:	4c05      	ldr	r4, [pc, #20]	@ (8000208 <__do_global_dtors_aux+0x18>)
 80001f4:	7823      	ldrb	r3, [r4, #0]
 80001f6:	b933      	cbnz	r3, 8000206 <__do_global_dtors_aux+0x16>
 80001f8:	4b04      	ldr	r3, [pc, #16]	@ (800020c <__do_global_dtors_aux+0x1c>)
 80001fa:	b113      	cbz	r3, 8000202 <__do_global_dtors_aux+0x12>
 80001fc:	4804      	ldr	r0, [pc, #16]	@ (8000210 <__do_global_dtors_aux+0x20>)
 80001fe:	f3af 8000 	nop.w
 8000202:	2301      	movs	r3, #1
 8000204:	7023      	strb	r3, [r4, #0]
 8000206:	bd10      	pop	{r4, pc}
 8000208:	2000005c 	.word	0x2000005c
 800020c:	00000000 	.word	0x00000000
 8000210:	08001384 	.word	0x08001384

08000214 <frame_dummy>:
 8000214:	b508      	push	{r3, lr}
 8000216:	4b03      	ldr	r3, [pc, #12]	@ (8000224 <frame_dummy+0x10>)
 8000218:	b11b      	cbz	r3, 8000222 <frame_dummy+0xe>
 800021a:	4903      	ldr	r1, [pc, #12]	@ (8000228 <frame_dummy+0x14>)
 800021c:	4803      	ldr	r0, [pc, #12]	@ (800022c <frame_dummy+0x18>)
 800021e:	f3af 8000 	nop.w
 8000222:	bd08      	pop	{r3, pc}
 8000224:	00000000 	.word	0x00000000
 8000228:	20000060 	.word	0x20000060
 800022c:	08001384 	.word	0x08001384

08000230 <ITM_SendChar>:
#define ITM_STIMULUS_PORT0     *((volatile uint32_t*) 0xE0000000 )
/* ITM Trace Enable Register */
#define ITM_TRACE_EN           *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000230:	b480      	push	{r7}
 8000232:	b083      	sub	sp, #12
 8000234:	af00      	add	r7, sp, #0
 8000236:	4603      	mov	r3, r0
 8000238:	71fb      	strb	r3, [r7, #7]
    // Enable TRCENA (Trace Enable)
    DEMCR |= (1 << 24);
 800023a:	4b0e      	ldr	r3, [pc, #56]	@ (8000274 <ITM_SendChar+0x44>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4a0d      	ldr	r2, [pc, #52]	@ (8000274 <ITM_SendChar+0x44>)
 8000240:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000244:	6013      	str	r3, [r2, #0]

    // Enable stimulus port 0
    ITM_TRACE_EN |= (1 << 0);
 8000246:	4b0c      	ldr	r3, [pc, #48]	@ (8000278 <ITM_SendChar+0x48>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a0b      	ldr	r2, [pc, #44]	@ (8000278 <ITM_SendChar+0x48>)
 800024c:	f043 0301 	orr.w	r3, r3, #1
 8000250:	6013      	str	r3, [r2, #0]

    // Wait until FIFO is ready in bit [0]
    while (!(ITM_STIMULUS_PORT0 & 1));
 8000252:	bf00      	nop
 8000254:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	f003 0301 	and.w	r3, r3, #1
 800025e:	2b00      	cmp	r3, #0
 8000260:	d0f8      	beq.n	8000254 <ITM_SendChar+0x24>

    // Write to ITM stimulus port 0
    ITM_STIMULUS_PORT0 = ch;
 8000262:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000266:	79fb      	ldrb	r3, [r7, #7]
 8000268:	6013      	str	r3, [r2, #0]
}
 800026a:	bf00      	nop
 800026c:	370c      	adds	r7, #12
 800026e:	46bd      	mov	sp, r7
 8000270:	bc80      	pop	{r7}
 8000272:	4770      	bx	lr
 8000274:	e000edfc 	.word	0xe000edfc
 8000278:	e0000e00 	.word	0xe0000e00

0800027c <_write>:

int _write(int file, char *ptr, int len)
{
 800027c:	b580      	push	{r7, lr}
 800027e:	b086      	sub	sp, #24
 8000280:	af00      	add	r7, sp, #0
 8000282:	60f8      	str	r0, [r7, #12]
 8000284:	60b9      	str	r1, [r7, #8]
 8000286:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000288:	2300      	movs	r3, #0
 800028a:	617b      	str	r3, [r7, #20]
 800028c:	e009      	b.n	80002a2 <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 800028e:	68bb      	ldr	r3, [r7, #8]
 8000290:	1c5a      	adds	r2, r3, #1
 8000292:	60ba      	str	r2, [r7, #8]
 8000294:	781b      	ldrb	r3, [r3, #0]
 8000296:	4618      	mov	r0, r3
 8000298:	f7ff ffca 	bl	8000230 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800029c:	697b      	ldr	r3, [r7, #20]
 800029e:	3301      	adds	r3, #1
 80002a0:	617b      	str	r3, [r7, #20]
 80002a2:	697a      	ldr	r2, [r7, #20]
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	429a      	cmp	r2, r3
 80002a8:	dbf1      	blt.n	800028e <_write+0x12>
  }
  return len;
 80002aa:	687b      	ldr	r3, [r7, #4]
}
 80002ac:	4618      	mov	r0, r3
 80002ae:	3718      	adds	r7, #24
 80002b0:	46bd      	mov	sp, r7
 80002b2:	bd80      	pop	{r7, pc}

080002b4 <main>:
#endif

static uint32_t stack_size = 0;

int main(void)
{
 80002b4:	b480      	push	{r7}
 80002b6:	af00      	add	r7, sp, #0
	while (1)
	{
		__asm volatile ("POP {R0}");
 80002b8:	bc01      	pop	{r0}
		stack_size++;
 80002ba:	4b03      	ldr	r3, [pc, #12]	@ (80002c8 <main+0x14>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	3301      	adds	r3, #1
 80002c0:	4a01      	ldr	r2, [pc, #4]	@ (80002c8 <main+0x14>)
 80002c2:	6013      	str	r3, [r2, #0]
		__asm volatile ("POP {R0}");
 80002c4:	bf00      	nop
 80002c6:	e7f7      	b.n	80002b8 <main+0x4>
 80002c8:	20000078 	.word	0x20000078

080002cc <HardFault_Handler>:
	/* Loop forever */
	for (;;);
}

void HardFault_Handler(void)
{
 80002cc:	b580      	push	{r7, lr}
 80002ce:	af00      	add	r7, sp, #0
	printf("Hard fault detected\n");
 80002d0:	4806      	ldr	r0, [pc, #24]	@ (80002ec <HardFault_Handler+0x20>)
 80002d2:	f000 f9e9 	bl	80006a8 <puts>
	printf("The stack size was %lu words - %lu bytes.\n", stack_size, stack_size * 4);
 80002d6:	4b06      	ldr	r3, [pc, #24]	@ (80002f0 <HardFault_Handler+0x24>)
 80002d8:	6819      	ldr	r1, [r3, #0]
 80002da:	4b05      	ldr	r3, [pc, #20]	@ (80002f0 <HardFault_Handler+0x24>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	009b      	lsls	r3, r3, #2
 80002e0:	461a      	mov	r2, r3
 80002e2:	4804      	ldr	r0, [pc, #16]	@ (80002f4 <HardFault_Handler+0x28>)
 80002e4:	f000 f978 	bl	80005d8 <iprintf>
	while(1);
 80002e8:	bf00      	nop
 80002ea:	e7fd      	b.n	80002e8 <HardFault_Handler+0x1c>
 80002ec:	0800139c 	.word	0x0800139c
 80002f0:	20000078 	.word	0x20000078
 80002f4:	080013b0 	.word	0x080013b0

080002f8 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	b086      	sub	sp, #24
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	60f8      	str	r0, [r7, #12]
 8000300:	60b9      	str	r1, [r7, #8]
 8000302:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000304:	2300      	movs	r3, #0
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	e00a      	b.n	8000320 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800030a:	f3af 8000 	nop.w
 800030e:	4601      	mov	r1, r0
 8000310:	68bb      	ldr	r3, [r7, #8]
 8000312:	1c5a      	adds	r2, r3, #1
 8000314:	60ba      	str	r2, [r7, #8]
 8000316:	b2ca      	uxtb	r2, r1
 8000318:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031a:	697b      	ldr	r3, [r7, #20]
 800031c:	3301      	adds	r3, #1
 800031e:	617b      	str	r3, [r7, #20]
 8000320:	697a      	ldr	r2, [r7, #20]
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	429a      	cmp	r2, r3
 8000326:	dbf0      	blt.n	800030a <_read+0x12>
  }

  return len;
 8000328:	687b      	ldr	r3, [r7, #4]
}
 800032a:	4618      	mov	r0, r3
 800032c:	3718      	adds	r7, #24
 800032e:	46bd      	mov	sp, r7
 8000330:	bd80      	pop	{r7, pc}

08000332 <_close>:
  }
  return len;
}

int _close(int file)
{
 8000332:	b480      	push	{r7}
 8000334:	b083      	sub	sp, #12
 8000336:	af00      	add	r7, sp, #0
 8000338:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800033a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800033e:	4618      	mov	r0, r3
 8000340:	370c      	adds	r7, #12
 8000342:	46bd      	mov	sp, r7
 8000344:	bc80      	pop	{r7}
 8000346:	4770      	bx	lr

08000348 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000348:	b480      	push	{r7}
 800034a:	b083      	sub	sp, #12
 800034c:	af00      	add	r7, sp, #0
 800034e:	6078      	str	r0, [r7, #4]
 8000350:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000352:	683b      	ldr	r3, [r7, #0]
 8000354:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000358:	605a      	str	r2, [r3, #4]
  return 0;
 800035a:	2300      	movs	r3, #0
}
 800035c:	4618      	mov	r0, r3
 800035e:	370c      	adds	r7, #12
 8000360:	46bd      	mov	sp, r7
 8000362:	bc80      	pop	{r7}
 8000364:	4770      	bx	lr

08000366 <_isatty>:

int _isatty(int file)
{
 8000366:	b480      	push	{r7}
 8000368:	b083      	sub	sp, #12
 800036a:	af00      	add	r7, sp, #0
 800036c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800036e:	2301      	movs	r3, #1
}
 8000370:	4618      	mov	r0, r3
 8000372:	370c      	adds	r7, #12
 8000374:	46bd      	mov	sp, r7
 8000376:	bc80      	pop	{r7}
 8000378:	4770      	bx	lr

0800037a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800037a:	b480      	push	{r7}
 800037c:	b085      	sub	sp, #20
 800037e:	af00      	add	r7, sp, #0
 8000380:	60f8      	str	r0, [r7, #12]
 8000382:	60b9      	str	r1, [r7, #8]
 8000384:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000386:	2300      	movs	r3, #0
}
 8000388:	4618      	mov	r0, r3
 800038a:	3714      	adds	r7, #20
 800038c:	46bd      	mov	sp, r7
 800038e:	bc80      	pop	{r7}
 8000390:	4770      	bx	lr
	...

08000394 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	b086      	sub	sp, #24
 8000398:	af00      	add	r7, sp, #0
 800039a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800039c:	4a14      	ldr	r2, [pc, #80]	@ (80003f0 <_sbrk+0x5c>)
 800039e:	4b15      	ldr	r3, [pc, #84]	@ (80003f4 <_sbrk+0x60>)
 80003a0:	1ad3      	subs	r3, r2, r3
 80003a2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003a4:	697b      	ldr	r3, [r7, #20]
 80003a6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003a8:	4b13      	ldr	r3, [pc, #76]	@ (80003f8 <_sbrk+0x64>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	2b00      	cmp	r3, #0
 80003ae:	d102      	bne.n	80003b6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003b0:	4b11      	ldr	r3, [pc, #68]	@ (80003f8 <_sbrk+0x64>)
 80003b2:	4a12      	ldr	r2, [pc, #72]	@ (80003fc <_sbrk+0x68>)
 80003b4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003b6:	4b10      	ldr	r3, [pc, #64]	@ (80003f8 <_sbrk+0x64>)
 80003b8:	681a      	ldr	r2, [r3, #0]
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4413      	add	r3, r2
 80003be:	693a      	ldr	r2, [r7, #16]
 80003c0:	429a      	cmp	r2, r3
 80003c2:	d207      	bcs.n	80003d4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003c4:	f000 fa9e 	bl	8000904 <__errno>
 80003c8:	4603      	mov	r3, r0
 80003ca:	220c      	movs	r2, #12
 80003cc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ce:	f04f 33ff 	mov.w	r3, #4294967295
 80003d2:	e009      	b.n	80003e8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003d4:	4b08      	ldr	r3, [pc, #32]	@ (80003f8 <_sbrk+0x64>)
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003da:	4b07      	ldr	r3, [pc, #28]	@ (80003f8 <_sbrk+0x64>)
 80003dc:	681a      	ldr	r2, [r3, #0]
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	4413      	add	r3, r2
 80003e2:	4a05      	ldr	r2, [pc, #20]	@ (80003f8 <_sbrk+0x64>)
 80003e4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003e6:	68fb      	ldr	r3, [r7, #12]
}
 80003e8:	4618      	mov	r0, r3
 80003ea:	3718      	adds	r7, #24
 80003ec:	46bd      	mov	sp, r7
 80003ee:	bd80      	pop	{r7, pc}
 80003f0:	20030000 	.word	0x20030000
 80003f4:	00000400 	.word	0x00000400
 80003f8:	2000007c 	.word	0x2000007c
 80003fc:	200001d0 	.word	0x200001d0

08000400 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000400:	480d      	ldr	r0, [pc, #52]	@ (8000438 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000402:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000404:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000408:	480c      	ldr	r0, [pc, #48]	@ (800043c <LoopForever+0x6>)
  ldr r1, =_edata
 800040a:	490d      	ldr	r1, [pc, #52]	@ (8000440 <LoopForever+0xa>)
  ldr r2, =_sidata
 800040c:	4a0d      	ldr	r2, [pc, #52]	@ (8000444 <LoopForever+0xe>)
  movs r3, #0
 800040e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000410:	e002      	b.n	8000418 <LoopCopyDataInit>

08000412 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000412:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000414:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000416:	3304      	adds	r3, #4

08000418 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000418:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800041a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800041c:	d3f9      	bcc.n	8000412 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800041e:	4a0a      	ldr	r2, [pc, #40]	@ (8000448 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000420:	4c0a      	ldr	r4, [pc, #40]	@ (800044c <LoopForever+0x16>)
  movs r3, #0
 8000422:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000424:	e001      	b.n	800042a <LoopFillZerobss>

08000426 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000426:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000428:	3204      	adds	r2, #4

0800042a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800042a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800042c:	d3fb      	bcc.n	8000426 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800042e:	f000 fa6f 	bl	8000910 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000432:	f7ff ff3f 	bl	80002b4 <main>

08000436 <LoopForever>:

LoopForever:
  b LoopForever
 8000436:	e7fe      	b.n	8000436 <LoopForever>
  ldr   r0, =_estack
 8000438:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 800043c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000440:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000444:	08001418 	.word	0x08001418
  ldr r2, =_sbss
 8000448:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800044c:	200001cc 	.word	0x200001cc

08000450 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000450:	e7fe      	b.n	8000450 <ADC1_2_IRQHandler>
	...

08000454 <std>:
 8000454:	2300      	movs	r3, #0
 8000456:	b510      	push	{r4, lr}
 8000458:	4604      	mov	r4, r0
 800045a:	6083      	str	r3, [r0, #8]
 800045c:	8181      	strh	r1, [r0, #12]
 800045e:	4619      	mov	r1, r3
 8000460:	6643      	str	r3, [r0, #100]	@ 0x64
 8000462:	81c2      	strh	r2, [r0, #14]
 8000464:	2208      	movs	r2, #8
 8000466:	6183      	str	r3, [r0, #24]
 8000468:	e9c0 3300 	strd	r3, r3, [r0]
 800046c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000470:	305c      	adds	r0, #92	@ 0x5c
 8000472:	f000 f9f9 	bl	8000868 <memset>
 8000476:	4b0d      	ldr	r3, [pc, #52]	@ (80004ac <std+0x58>)
 8000478:	6224      	str	r4, [r4, #32]
 800047a:	6263      	str	r3, [r4, #36]	@ 0x24
 800047c:	4b0c      	ldr	r3, [pc, #48]	@ (80004b0 <std+0x5c>)
 800047e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000480:	4b0c      	ldr	r3, [pc, #48]	@ (80004b4 <std+0x60>)
 8000482:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000484:	4b0c      	ldr	r3, [pc, #48]	@ (80004b8 <std+0x64>)
 8000486:	6323      	str	r3, [r4, #48]	@ 0x30
 8000488:	4b0c      	ldr	r3, [pc, #48]	@ (80004bc <std+0x68>)
 800048a:	429c      	cmp	r4, r3
 800048c:	d006      	beq.n	800049c <std+0x48>
 800048e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000492:	4294      	cmp	r4, r2
 8000494:	d002      	beq.n	800049c <std+0x48>
 8000496:	33d0      	adds	r3, #208	@ 0xd0
 8000498:	429c      	cmp	r4, r3
 800049a:	d105      	bne.n	80004a8 <std+0x54>
 800049c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80004a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004a4:	f000 ba58 	b.w	8000958 <__retarget_lock_init_recursive>
 80004a8:	bd10      	pop	{r4, pc}
 80004aa:	bf00      	nop
 80004ac:	080006b9 	.word	0x080006b9
 80004b0:	080006db 	.word	0x080006db
 80004b4:	08000713 	.word	0x08000713
 80004b8:	08000737 	.word	0x08000737
 80004bc:	20000080 	.word	0x20000080

080004c0 <stdio_exit_handler>:
 80004c0:	4a02      	ldr	r2, [pc, #8]	@ (80004cc <stdio_exit_handler+0xc>)
 80004c2:	4903      	ldr	r1, [pc, #12]	@ (80004d0 <stdio_exit_handler+0x10>)
 80004c4:	4803      	ldr	r0, [pc, #12]	@ (80004d4 <stdio_exit_handler+0x14>)
 80004c6:	f000 b869 	b.w	800059c <_fwalk_sglue>
 80004ca:	bf00      	nop
 80004cc:	20000000 	.word	0x20000000
 80004d0:	080011f1 	.word	0x080011f1
 80004d4:	20000010 	.word	0x20000010

080004d8 <cleanup_stdio>:
 80004d8:	6841      	ldr	r1, [r0, #4]
 80004da:	4b0c      	ldr	r3, [pc, #48]	@ (800050c <cleanup_stdio+0x34>)
 80004dc:	4299      	cmp	r1, r3
 80004de:	b510      	push	{r4, lr}
 80004e0:	4604      	mov	r4, r0
 80004e2:	d001      	beq.n	80004e8 <cleanup_stdio+0x10>
 80004e4:	f000 fe84 	bl	80011f0 <_fflush_r>
 80004e8:	68a1      	ldr	r1, [r4, #8]
 80004ea:	4b09      	ldr	r3, [pc, #36]	@ (8000510 <cleanup_stdio+0x38>)
 80004ec:	4299      	cmp	r1, r3
 80004ee:	d002      	beq.n	80004f6 <cleanup_stdio+0x1e>
 80004f0:	4620      	mov	r0, r4
 80004f2:	f000 fe7d 	bl	80011f0 <_fflush_r>
 80004f6:	68e1      	ldr	r1, [r4, #12]
 80004f8:	4b06      	ldr	r3, [pc, #24]	@ (8000514 <cleanup_stdio+0x3c>)
 80004fa:	4299      	cmp	r1, r3
 80004fc:	d004      	beq.n	8000508 <cleanup_stdio+0x30>
 80004fe:	4620      	mov	r0, r4
 8000500:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000504:	f000 be74 	b.w	80011f0 <_fflush_r>
 8000508:	bd10      	pop	{r4, pc}
 800050a:	bf00      	nop
 800050c:	20000080 	.word	0x20000080
 8000510:	200000e8 	.word	0x200000e8
 8000514:	20000150 	.word	0x20000150

08000518 <global_stdio_init.part.0>:
 8000518:	b510      	push	{r4, lr}
 800051a:	4b0b      	ldr	r3, [pc, #44]	@ (8000548 <global_stdio_init.part.0+0x30>)
 800051c:	2104      	movs	r1, #4
 800051e:	4c0b      	ldr	r4, [pc, #44]	@ (800054c <global_stdio_init.part.0+0x34>)
 8000520:	4a0b      	ldr	r2, [pc, #44]	@ (8000550 <global_stdio_init.part.0+0x38>)
 8000522:	4620      	mov	r0, r4
 8000524:	601a      	str	r2, [r3, #0]
 8000526:	2200      	movs	r2, #0
 8000528:	f7ff ff94 	bl	8000454 <std>
 800052c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000530:	2201      	movs	r2, #1
 8000532:	2109      	movs	r1, #9
 8000534:	f7ff ff8e 	bl	8000454 <std>
 8000538:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800053c:	2202      	movs	r2, #2
 800053e:	2112      	movs	r1, #18
 8000540:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000544:	f7ff bf86 	b.w	8000454 <std>
 8000548:	200001b8 	.word	0x200001b8
 800054c:	20000080 	.word	0x20000080
 8000550:	080004c1 	.word	0x080004c1

08000554 <__sfp_lock_acquire>:
 8000554:	4801      	ldr	r0, [pc, #4]	@ (800055c <__sfp_lock_acquire+0x8>)
 8000556:	f000 ba00 	b.w	800095a <__retarget_lock_acquire_recursive>
 800055a:	bf00      	nop
 800055c:	200001c1 	.word	0x200001c1

08000560 <__sfp_lock_release>:
 8000560:	4801      	ldr	r0, [pc, #4]	@ (8000568 <__sfp_lock_release+0x8>)
 8000562:	f000 b9fb 	b.w	800095c <__retarget_lock_release_recursive>
 8000566:	bf00      	nop
 8000568:	200001c1 	.word	0x200001c1

0800056c <__sinit>:
 800056c:	b510      	push	{r4, lr}
 800056e:	4604      	mov	r4, r0
 8000570:	f7ff fff0 	bl	8000554 <__sfp_lock_acquire>
 8000574:	6a23      	ldr	r3, [r4, #32]
 8000576:	b11b      	cbz	r3, 8000580 <__sinit+0x14>
 8000578:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800057c:	f7ff bff0 	b.w	8000560 <__sfp_lock_release>
 8000580:	4b04      	ldr	r3, [pc, #16]	@ (8000594 <__sinit+0x28>)
 8000582:	6223      	str	r3, [r4, #32]
 8000584:	4b04      	ldr	r3, [pc, #16]	@ (8000598 <__sinit+0x2c>)
 8000586:	681b      	ldr	r3, [r3, #0]
 8000588:	2b00      	cmp	r3, #0
 800058a:	d1f5      	bne.n	8000578 <__sinit+0xc>
 800058c:	f7ff ffc4 	bl	8000518 <global_stdio_init.part.0>
 8000590:	e7f2      	b.n	8000578 <__sinit+0xc>
 8000592:	bf00      	nop
 8000594:	080004d9 	.word	0x080004d9
 8000598:	200001b8 	.word	0x200001b8

0800059c <_fwalk_sglue>:
 800059c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005a0:	4607      	mov	r7, r0
 80005a2:	4688      	mov	r8, r1
 80005a4:	4614      	mov	r4, r2
 80005a6:	2600      	movs	r6, #0
 80005a8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005ac:	f1b9 0901 	subs.w	r9, r9, #1
 80005b0:	d505      	bpl.n	80005be <_fwalk_sglue+0x22>
 80005b2:	6824      	ldr	r4, [r4, #0]
 80005b4:	2c00      	cmp	r4, #0
 80005b6:	d1f7      	bne.n	80005a8 <_fwalk_sglue+0xc>
 80005b8:	4630      	mov	r0, r6
 80005ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005be:	89ab      	ldrh	r3, [r5, #12]
 80005c0:	2b01      	cmp	r3, #1
 80005c2:	d907      	bls.n	80005d4 <_fwalk_sglue+0x38>
 80005c4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005c8:	3301      	adds	r3, #1
 80005ca:	d003      	beq.n	80005d4 <_fwalk_sglue+0x38>
 80005cc:	4629      	mov	r1, r5
 80005ce:	4638      	mov	r0, r7
 80005d0:	47c0      	blx	r8
 80005d2:	4306      	orrs	r6, r0
 80005d4:	3568      	adds	r5, #104	@ 0x68
 80005d6:	e7e9      	b.n	80005ac <_fwalk_sglue+0x10>

080005d8 <iprintf>:
 80005d8:	b40f      	push	{r0, r1, r2, r3}
 80005da:	b507      	push	{r0, r1, r2, lr}
 80005dc:	4906      	ldr	r1, [pc, #24]	@ (80005f8 <iprintf+0x20>)
 80005de:	ab04      	add	r3, sp, #16
 80005e0:	6808      	ldr	r0, [r1, #0]
 80005e2:	f853 2b04 	ldr.w	r2, [r3], #4
 80005e6:	6881      	ldr	r1, [r0, #8]
 80005e8:	9301      	str	r3, [sp, #4]
 80005ea:	f000 fad9 	bl	8000ba0 <_vfiprintf_r>
 80005ee:	b003      	add	sp, #12
 80005f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80005f4:	b004      	add	sp, #16
 80005f6:	4770      	bx	lr
 80005f8:	2000000c 	.word	0x2000000c

080005fc <_puts_r>:
 80005fc:	6a03      	ldr	r3, [r0, #32]
 80005fe:	b570      	push	{r4, r5, r6, lr}
 8000600:	4605      	mov	r5, r0
 8000602:	460e      	mov	r6, r1
 8000604:	6884      	ldr	r4, [r0, #8]
 8000606:	b90b      	cbnz	r3, 800060c <_puts_r+0x10>
 8000608:	f7ff ffb0 	bl	800056c <__sinit>
 800060c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800060e:	07db      	lsls	r3, r3, #31
 8000610:	d405      	bmi.n	800061e <_puts_r+0x22>
 8000612:	89a3      	ldrh	r3, [r4, #12]
 8000614:	0598      	lsls	r0, r3, #22
 8000616:	d402      	bmi.n	800061e <_puts_r+0x22>
 8000618:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800061a:	f000 f99e 	bl	800095a <__retarget_lock_acquire_recursive>
 800061e:	89a3      	ldrh	r3, [r4, #12]
 8000620:	0719      	lsls	r1, r3, #28
 8000622:	d502      	bpl.n	800062a <_puts_r+0x2e>
 8000624:	6923      	ldr	r3, [r4, #16]
 8000626:	2b00      	cmp	r3, #0
 8000628:	d135      	bne.n	8000696 <_puts_r+0x9a>
 800062a:	4621      	mov	r1, r4
 800062c:	4628      	mov	r0, r5
 800062e:	f000 f8c5 	bl	80007bc <__swsetup_r>
 8000632:	b380      	cbz	r0, 8000696 <_puts_r+0x9a>
 8000634:	f04f 35ff 	mov.w	r5, #4294967295
 8000638:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800063a:	07da      	lsls	r2, r3, #31
 800063c:	d405      	bmi.n	800064a <_puts_r+0x4e>
 800063e:	89a3      	ldrh	r3, [r4, #12]
 8000640:	059b      	lsls	r3, r3, #22
 8000642:	d402      	bmi.n	800064a <_puts_r+0x4e>
 8000644:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000646:	f000 f989 	bl	800095c <__retarget_lock_release_recursive>
 800064a:	4628      	mov	r0, r5
 800064c:	bd70      	pop	{r4, r5, r6, pc}
 800064e:	2b00      	cmp	r3, #0
 8000650:	da04      	bge.n	800065c <_puts_r+0x60>
 8000652:	69a2      	ldr	r2, [r4, #24]
 8000654:	429a      	cmp	r2, r3
 8000656:	dc17      	bgt.n	8000688 <_puts_r+0x8c>
 8000658:	290a      	cmp	r1, #10
 800065a:	d015      	beq.n	8000688 <_puts_r+0x8c>
 800065c:	6823      	ldr	r3, [r4, #0]
 800065e:	1c5a      	adds	r2, r3, #1
 8000660:	6022      	str	r2, [r4, #0]
 8000662:	7019      	strb	r1, [r3, #0]
 8000664:	68a3      	ldr	r3, [r4, #8]
 8000666:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800066a:	3b01      	subs	r3, #1
 800066c:	60a3      	str	r3, [r4, #8]
 800066e:	2900      	cmp	r1, #0
 8000670:	d1ed      	bne.n	800064e <_puts_r+0x52>
 8000672:	2b00      	cmp	r3, #0
 8000674:	da11      	bge.n	800069a <_puts_r+0x9e>
 8000676:	4622      	mov	r2, r4
 8000678:	210a      	movs	r1, #10
 800067a:	4628      	mov	r0, r5
 800067c:	f000 f85f 	bl	800073e <__swbuf_r>
 8000680:	3001      	adds	r0, #1
 8000682:	d0d7      	beq.n	8000634 <_puts_r+0x38>
 8000684:	250a      	movs	r5, #10
 8000686:	e7d7      	b.n	8000638 <_puts_r+0x3c>
 8000688:	4622      	mov	r2, r4
 800068a:	4628      	mov	r0, r5
 800068c:	f000 f857 	bl	800073e <__swbuf_r>
 8000690:	3001      	adds	r0, #1
 8000692:	d1e7      	bne.n	8000664 <_puts_r+0x68>
 8000694:	e7ce      	b.n	8000634 <_puts_r+0x38>
 8000696:	3e01      	subs	r6, #1
 8000698:	e7e4      	b.n	8000664 <_puts_r+0x68>
 800069a:	6823      	ldr	r3, [r4, #0]
 800069c:	1c5a      	adds	r2, r3, #1
 800069e:	6022      	str	r2, [r4, #0]
 80006a0:	220a      	movs	r2, #10
 80006a2:	701a      	strb	r2, [r3, #0]
 80006a4:	e7ee      	b.n	8000684 <_puts_r+0x88>
	...

080006a8 <puts>:
 80006a8:	4b02      	ldr	r3, [pc, #8]	@ (80006b4 <puts+0xc>)
 80006aa:	4601      	mov	r1, r0
 80006ac:	6818      	ldr	r0, [r3, #0]
 80006ae:	f7ff bfa5 	b.w	80005fc <_puts_r>
 80006b2:	bf00      	nop
 80006b4:	2000000c 	.word	0x2000000c

080006b8 <__sread>:
 80006b8:	b510      	push	{r4, lr}
 80006ba:	460c      	mov	r4, r1
 80006bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006c0:	f000 f8fc 	bl	80008bc <_read_r>
 80006c4:	2800      	cmp	r0, #0
 80006c6:	bfab      	itete	ge
 80006c8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80006ca:	89a3      	ldrhlt	r3, [r4, #12]
 80006cc:	181b      	addge	r3, r3, r0
 80006ce:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80006d2:	bfac      	ite	ge
 80006d4:	6563      	strge	r3, [r4, #84]	@ 0x54
 80006d6:	81a3      	strhlt	r3, [r4, #12]
 80006d8:	bd10      	pop	{r4, pc}

080006da <__swrite>:
 80006da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006de:	461f      	mov	r7, r3
 80006e0:	898b      	ldrh	r3, [r1, #12]
 80006e2:	4605      	mov	r5, r0
 80006e4:	460c      	mov	r4, r1
 80006e6:	05db      	lsls	r3, r3, #23
 80006e8:	4616      	mov	r6, r2
 80006ea:	d505      	bpl.n	80006f8 <__swrite+0x1e>
 80006ec:	2302      	movs	r3, #2
 80006ee:	2200      	movs	r2, #0
 80006f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006f4:	f000 f8d0 	bl	8000898 <_lseek_r>
 80006f8:	89a3      	ldrh	r3, [r4, #12]
 80006fa:	4632      	mov	r2, r6
 80006fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000700:	4628      	mov	r0, r5
 8000702:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000706:	81a3      	strh	r3, [r4, #12]
 8000708:	463b      	mov	r3, r7
 800070a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800070e:	f000 b8e7 	b.w	80008e0 <_write_r>

08000712 <__sseek>:
 8000712:	b510      	push	{r4, lr}
 8000714:	460c      	mov	r4, r1
 8000716:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800071a:	f000 f8bd 	bl	8000898 <_lseek_r>
 800071e:	1c43      	adds	r3, r0, #1
 8000720:	89a3      	ldrh	r3, [r4, #12]
 8000722:	bf15      	itete	ne
 8000724:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000726:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800072a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800072e:	81a3      	strheq	r3, [r4, #12]
 8000730:	bf18      	it	ne
 8000732:	81a3      	strhne	r3, [r4, #12]
 8000734:	bd10      	pop	{r4, pc}

08000736 <__sclose>:
 8000736:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800073a:	f000 b89d 	b.w	8000878 <_close_r>

0800073e <__swbuf_r>:
 800073e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000740:	460e      	mov	r6, r1
 8000742:	4614      	mov	r4, r2
 8000744:	4605      	mov	r5, r0
 8000746:	b118      	cbz	r0, 8000750 <__swbuf_r+0x12>
 8000748:	6a03      	ldr	r3, [r0, #32]
 800074a:	b90b      	cbnz	r3, 8000750 <__swbuf_r+0x12>
 800074c:	f7ff ff0e 	bl	800056c <__sinit>
 8000750:	69a3      	ldr	r3, [r4, #24]
 8000752:	60a3      	str	r3, [r4, #8]
 8000754:	89a3      	ldrh	r3, [r4, #12]
 8000756:	071a      	lsls	r2, r3, #28
 8000758:	d501      	bpl.n	800075e <__swbuf_r+0x20>
 800075a:	6923      	ldr	r3, [r4, #16]
 800075c:	b943      	cbnz	r3, 8000770 <__swbuf_r+0x32>
 800075e:	4621      	mov	r1, r4
 8000760:	4628      	mov	r0, r5
 8000762:	f000 f82b 	bl	80007bc <__swsetup_r>
 8000766:	b118      	cbz	r0, 8000770 <__swbuf_r+0x32>
 8000768:	f04f 37ff 	mov.w	r7, #4294967295
 800076c:	4638      	mov	r0, r7
 800076e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000770:	6823      	ldr	r3, [r4, #0]
 8000772:	b2f6      	uxtb	r6, r6
 8000774:	6922      	ldr	r2, [r4, #16]
 8000776:	4637      	mov	r7, r6
 8000778:	1a98      	subs	r0, r3, r2
 800077a:	6963      	ldr	r3, [r4, #20]
 800077c:	4283      	cmp	r3, r0
 800077e:	dc05      	bgt.n	800078c <__swbuf_r+0x4e>
 8000780:	4621      	mov	r1, r4
 8000782:	4628      	mov	r0, r5
 8000784:	f000 fd34 	bl	80011f0 <_fflush_r>
 8000788:	2800      	cmp	r0, #0
 800078a:	d1ed      	bne.n	8000768 <__swbuf_r+0x2a>
 800078c:	68a3      	ldr	r3, [r4, #8]
 800078e:	3b01      	subs	r3, #1
 8000790:	60a3      	str	r3, [r4, #8]
 8000792:	6823      	ldr	r3, [r4, #0]
 8000794:	1c5a      	adds	r2, r3, #1
 8000796:	6022      	str	r2, [r4, #0]
 8000798:	701e      	strb	r6, [r3, #0]
 800079a:	1c43      	adds	r3, r0, #1
 800079c:	6962      	ldr	r2, [r4, #20]
 800079e:	429a      	cmp	r2, r3
 80007a0:	d004      	beq.n	80007ac <__swbuf_r+0x6e>
 80007a2:	89a3      	ldrh	r3, [r4, #12]
 80007a4:	07db      	lsls	r3, r3, #31
 80007a6:	d5e1      	bpl.n	800076c <__swbuf_r+0x2e>
 80007a8:	2e0a      	cmp	r6, #10
 80007aa:	d1df      	bne.n	800076c <__swbuf_r+0x2e>
 80007ac:	4621      	mov	r1, r4
 80007ae:	4628      	mov	r0, r5
 80007b0:	f000 fd1e 	bl	80011f0 <_fflush_r>
 80007b4:	2800      	cmp	r0, #0
 80007b6:	d0d9      	beq.n	800076c <__swbuf_r+0x2e>
 80007b8:	e7d6      	b.n	8000768 <__swbuf_r+0x2a>
	...

080007bc <__swsetup_r>:
 80007bc:	b538      	push	{r3, r4, r5, lr}
 80007be:	4b29      	ldr	r3, [pc, #164]	@ (8000864 <__swsetup_r+0xa8>)
 80007c0:	4605      	mov	r5, r0
 80007c2:	460c      	mov	r4, r1
 80007c4:	6818      	ldr	r0, [r3, #0]
 80007c6:	b118      	cbz	r0, 80007d0 <__swsetup_r+0x14>
 80007c8:	6a03      	ldr	r3, [r0, #32]
 80007ca:	b90b      	cbnz	r3, 80007d0 <__swsetup_r+0x14>
 80007cc:	f7ff fece 	bl	800056c <__sinit>
 80007d0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007d4:	0719      	lsls	r1, r3, #28
 80007d6:	d422      	bmi.n	800081e <__swsetup_r+0x62>
 80007d8:	06da      	lsls	r2, r3, #27
 80007da:	d407      	bmi.n	80007ec <__swsetup_r+0x30>
 80007dc:	2209      	movs	r2, #9
 80007de:	602a      	str	r2, [r5, #0]
 80007e0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80007e4:	f04f 30ff 	mov.w	r0, #4294967295
 80007e8:	81a3      	strh	r3, [r4, #12]
 80007ea:	e033      	b.n	8000854 <__swsetup_r+0x98>
 80007ec:	0758      	lsls	r0, r3, #29
 80007ee:	d512      	bpl.n	8000816 <__swsetup_r+0x5a>
 80007f0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80007f2:	b141      	cbz	r1, 8000806 <__swsetup_r+0x4a>
 80007f4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80007f8:	4299      	cmp	r1, r3
 80007fa:	d002      	beq.n	8000802 <__swsetup_r+0x46>
 80007fc:	4628      	mov	r0, r5
 80007fe:	f000 f8af 	bl	8000960 <_free_r>
 8000802:	2300      	movs	r3, #0
 8000804:	6363      	str	r3, [r4, #52]	@ 0x34
 8000806:	89a3      	ldrh	r3, [r4, #12]
 8000808:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800080c:	81a3      	strh	r3, [r4, #12]
 800080e:	2300      	movs	r3, #0
 8000810:	6063      	str	r3, [r4, #4]
 8000812:	6923      	ldr	r3, [r4, #16]
 8000814:	6023      	str	r3, [r4, #0]
 8000816:	89a3      	ldrh	r3, [r4, #12]
 8000818:	f043 0308 	orr.w	r3, r3, #8
 800081c:	81a3      	strh	r3, [r4, #12]
 800081e:	6923      	ldr	r3, [r4, #16]
 8000820:	b94b      	cbnz	r3, 8000836 <__swsetup_r+0x7a>
 8000822:	89a3      	ldrh	r3, [r4, #12]
 8000824:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000828:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800082c:	d003      	beq.n	8000836 <__swsetup_r+0x7a>
 800082e:	4621      	mov	r1, r4
 8000830:	4628      	mov	r0, r5
 8000832:	f000 fd2a 	bl	800128a <__smakebuf_r>
 8000836:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800083a:	f013 0201 	ands.w	r2, r3, #1
 800083e:	d00a      	beq.n	8000856 <__swsetup_r+0x9a>
 8000840:	2200      	movs	r2, #0
 8000842:	60a2      	str	r2, [r4, #8]
 8000844:	6962      	ldr	r2, [r4, #20]
 8000846:	4252      	negs	r2, r2
 8000848:	61a2      	str	r2, [r4, #24]
 800084a:	6922      	ldr	r2, [r4, #16]
 800084c:	b942      	cbnz	r2, 8000860 <__swsetup_r+0xa4>
 800084e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000852:	d1c5      	bne.n	80007e0 <__swsetup_r+0x24>
 8000854:	bd38      	pop	{r3, r4, r5, pc}
 8000856:	0799      	lsls	r1, r3, #30
 8000858:	bf58      	it	pl
 800085a:	6962      	ldrpl	r2, [r4, #20]
 800085c:	60a2      	str	r2, [r4, #8]
 800085e:	e7f4      	b.n	800084a <__swsetup_r+0x8e>
 8000860:	2000      	movs	r0, #0
 8000862:	e7f7      	b.n	8000854 <__swsetup_r+0x98>
 8000864:	2000000c 	.word	0x2000000c

08000868 <memset>:
 8000868:	4402      	add	r2, r0
 800086a:	4603      	mov	r3, r0
 800086c:	4293      	cmp	r3, r2
 800086e:	d100      	bne.n	8000872 <memset+0xa>
 8000870:	4770      	bx	lr
 8000872:	f803 1b01 	strb.w	r1, [r3], #1
 8000876:	e7f9      	b.n	800086c <memset+0x4>

08000878 <_close_r>:
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	2300      	movs	r3, #0
 800087c:	4d05      	ldr	r5, [pc, #20]	@ (8000894 <_close_r+0x1c>)
 800087e:	4604      	mov	r4, r0
 8000880:	4608      	mov	r0, r1
 8000882:	602b      	str	r3, [r5, #0]
 8000884:	f7ff fd55 	bl	8000332 <_close>
 8000888:	1c43      	adds	r3, r0, #1
 800088a:	d102      	bne.n	8000892 <_close_r+0x1a>
 800088c:	682b      	ldr	r3, [r5, #0]
 800088e:	b103      	cbz	r3, 8000892 <_close_r+0x1a>
 8000890:	6023      	str	r3, [r4, #0]
 8000892:	bd38      	pop	{r3, r4, r5, pc}
 8000894:	200001bc 	.word	0x200001bc

08000898 <_lseek_r>:
 8000898:	b538      	push	{r3, r4, r5, lr}
 800089a:	4604      	mov	r4, r0
 800089c:	4d06      	ldr	r5, [pc, #24]	@ (80008b8 <_lseek_r+0x20>)
 800089e:	4608      	mov	r0, r1
 80008a0:	4611      	mov	r1, r2
 80008a2:	2200      	movs	r2, #0
 80008a4:	602a      	str	r2, [r5, #0]
 80008a6:	461a      	mov	r2, r3
 80008a8:	f7ff fd67 	bl	800037a <_lseek>
 80008ac:	1c43      	adds	r3, r0, #1
 80008ae:	d102      	bne.n	80008b6 <_lseek_r+0x1e>
 80008b0:	682b      	ldr	r3, [r5, #0]
 80008b2:	b103      	cbz	r3, 80008b6 <_lseek_r+0x1e>
 80008b4:	6023      	str	r3, [r4, #0]
 80008b6:	bd38      	pop	{r3, r4, r5, pc}
 80008b8:	200001bc 	.word	0x200001bc

080008bc <_read_r>:
 80008bc:	b538      	push	{r3, r4, r5, lr}
 80008be:	4604      	mov	r4, r0
 80008c0:	4d06      	ldr	r5, [pc, #24]	@ (80008dc <_read_r+0x20>)
 80008c2:	4608      	mov	r0, r1
 80008c4:	4611      	mov	r1, r2
 80008c6:	2200      	movs	r2, #0
 80008c8:	602a      	str	r2, [r5, #0]
 80008ca:	461a      	mov	r2, r3
 80008cc:	f7ff fd14 	bl	80002f8 <_read>
 80008d0:	1c43      	adds	r3, r0, #1
 80008d2:	d102      	bne.n	80008da <_read_r+0x1e>
 80008d4:	682b      	ldr	r3, [r5, #0]
 80008d6:	b103      	cbz	r3, 80008da <_read_r+0x1e>
 80008d8:	6023      	str	r3, [r4, #0]
 80008da:	bd38      	pop	{r3, r4, r5, pc}
 80008dc:	200001bc 	.word	0x200001bc

080008e0 <_write_r>:
 80008e0:	b538      	push	{r3, r4, r5, lr}
 80008e2:	4604      	mov	r4, r0
 80008e4:	4d06      	ldr	r5, [pc, #24]	@ (8000900 <_write_r+0x20>)
 80008e6:	4608      	mov	r0, r1
 80008e8:	4611      	mov	r1, r2
 80008ea:	2200      	movs	r2, #0
 80008ec:	602a      	str	r2, [r5, #0]
 80008ee:	461a      	mov	r2, r3
 80008f0:	f7ff fcc4 	bl	800027c <_write>
 80008f4:	1c43      	adds	r3, r0, #1
 80008f6:	d102      	bne.n	80008fe <_write_r+0x1e>
 80008f8:	682b      	ldr	r3, [r5, #0]
 80008fa:	b103      	cbz	r3, 80008fe <_write_r+0x1e>
 80008fc:	6023      	str	r3, [r4, #0]
 80008fe:	bd38      	pop	{r3, r4, r5, pc}
 8000900:	200001bc 	.word	0x200001bc

08000904 <__errno>:
 8000904:	4b01      	ldr	r3, [pc, #4]	@ (800090c <__errno+0x8>)
 8000906:	6818      	ldr	r0, [r3, #0]
 8000908:	4770      	bx	lr
 800090a:	bf00      	nop
 800090c:	2000000c 	.word	0x2000000c

08000910 <__libc_init_array>:
 8000910:	b570      	push	{r4, r5, r6, lr}
 8000912:	4d0d      	ldr	r5, [pc, #52]	@ (8000948 <__libc_init_array+0x38>)
 8000914:	2600      	movs	r6, #0
 8000916:	4c0d      	ldr	r4, [pc, #52]	@ (800094c <__libc_init_array+0x3c>)
 8000918:	1b64      	subs	r4, r4, r5
 800091a:	10a4      	asrs	r4, r4, #2
 800091c:	42a6      	cmp	r6, r4
 800091e:	d109      	bne.n	8000934 <__libc_init_array+0x24>
 8000920:	4d0b      	ldr	r5, [pc, #44]	@ (8000950 <__libc_init_array+0x40>)
 8000922:	2600      	movs	r6, #0
 8000924:	4c0b      	ldr	r4, [pc, #44]	@ (8000954 <__libc_init_array+0x44>)
 8000926:	f000 fd2d 	bl	8001384 <_init>
 800092a:	1b64      	subs	r4, r4, r5
 800092c:	10a4      	asrs	r4, r4, #2
 800092e:	42a6      	cmp	r6, r4
 8000930:	d105      	bne.n	800093e <__libc_init_array+0x2e>
 8000932:	bd70      	pop	{r4, r5, r6, pc}
 8000934:	f855 3b04 	ldr.w	r3, [r5], #4
 8000938:	3601      	adds	r6, #1
 800093a:	4798      	blx	r3
 800093c:	e7ee      	b.n	800091c <__libc_init_array+0xc>
 800093e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000942:	3601      	adds	r6, #1
 8000944:	4798      	blx	r3
 8000946:	e7f2      	b.n	800092e <__libc_init_array+0x1e>
 8000948:	08001410 	.word	0x08001410
 800094c:	08001410 	.word	0x08001410
 8000950:	08001410 	.word	0x08001410
 8000954:	08001414 	.word	0x08001414

08000958 <__retarget_lock_init_recursive>:
 8000958:	4770      	bx	lr

0800095a <__retarget_lock_acquire_recursive>:
 800095a:	4770      	bx	lr

0800095c <__retarget_lock_release_recursive>:
 800095c:	4770      	bx	lr
	...

08000960 <_free_r>:
 8000960:	b538      	push	{r3, r4, r5, lr}
 8000962:	4605      	mov	r5, r0
 8000964:	2900      	cmp	r1, #0
 8000966:	d041      	beq.n	80009ec <_free_r+0x8c>
 8000968:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800096c:	1f0c      	subs	r4, r1, #4
 800096e:	2b00      	cmp	r3, #0
 8000970:	bfb8      	it	lt
 8000972:	18e4      	addlt	r4, r4, r3
 8000974:	f000 f8e0 	bl	8000b38 <__malloc_lock>
 8000978:	4a1d      	ldr	r2, [pc, #116]	@ (80009f0 <_free_r+0x90>)
 800097a:	6813      	ldr	r3, [r2, #0]
 800097c:	b933      	cbnz	r3, 800098c <_free_r+0x2c>
 800097e:	6063      	str	r3, [r4, #4]
 8000980:	6014      	str	r4, [r2, #0]
 8000982:	4628      	mov	r0, r5
 8000984:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000988:	f000 b8dc 	b.w	8000b44 <__malloc_unlock>
 800098c:	42a3      	cmp	r3, r4
 800098e:	d908      	bls.n	80009a2 <_free_r+0x42>
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	1821      	adds	r1, r4, r0
 8000994:	428b      	cmp	r3, r1
 8000996:	bf01      	itttt	eq
 8000998:	6819      	ldreq	r1, [r3, #0]
 800099a:	685b      	ldreq	r3, [r3, #4]
 800099c:	1809      	addeq	r1, r1, r0
 800099e:	6021      	streq	r1, [r4, #0]
 80009a0:	e7ed      	b.n	800097e <_free_r+0x1e>
 80009a2:	461a      	mov	r2, r3
 80009a4:	685b      	ldr	r3, [r3, #4]
 80009a6:	b10b      	cbz	r3, 80009ac <_free_r+0x4c>
 80009a8:	42a3      	cmp	r3, r4
 80009aa:	d9fa      	bls.n	80009a2 <_free_r+0x42>
 80009ac:	6811      	ldr	r1, [r2, #0]
 80009ae:	1850      	adds	r0, r2, r1
 80009b0:	42a0      	cmp	r0, r4
 80009b2:	d10b      	bne.n	80009cc <_free_r+0x6c>
 80009b4:	6820      	ldr	r0, [r4, #0]
 80009b6:	4401      	add	r1, r0
 80009b8:	1850      	adds	r0, r2, r1
 80009ba:	6011      	str	r1, [r2, #0]
 80009bc:	4283      	cmp	r3, r0
 80009be:	d1e0      	bne.n	8000982 <_free_r+0x22>
 80009c0:	6818      	ldr	r0, [r3, #0]
 80009c2:	685b      	ldr	r3, [r3, #4]
 80009c4:	4408      	add	r0, r1
 80009c6:	6053      	str	r3, [r2, #4]
 80009c8:	6010      	str	r0, [r2, #0]
 80009ca:	e7da      	b.n	8000982 <_free_r+0x22>
 80009cc:	d902      	bls.n	80009d4 <_free_r+0x74>
 80009ce:	230c      	movs	r3, #12
 80009d0:	602b      	str	r3, [r5, #0]
 80009d2:	e7d6      	b.n	8000982 <_free_r+0x22>
 80009d4:	6820      	ldr	r0, [r4, #0]
 80009d6:	1821      	adds	r1, r4, r0
 80009d8:	428b      	cmp	r3, r1
 80009da:	bf02      	ittt	eq
 80009dc:	6819      	ldreq	r1, [r3, #0]
 80009de:	685b      	ldreq	r3, [r3, #4]
 80009e0:	1809      	addeq	r1, r1, r0
 80009e2:	6063      	str	r3, [r4, #4]
 80009e4:	bf08      	it	eq
 80009e6:	6021      	streq	r1, [r4, #0]
 80009e8:	6054      	str	r4, [r2, #4]
 80009ea:	e7ca      	b.n	8000982 <_free_r+0x22>
 80009ec:	bd38      	pop	{r3, r4, r5, pc}
 80009ee:	bf00      	nop
 80009f0:	200001c8 	.word	0x200001c8

080009f4 <sbrk_aligned>:
 80009f4:	b570      	push	{r4, r5, r6, lr}
 80009f6:	4e0f      	ldr	r6, [pc, #60]	@ (8000a34 <sbrk_aligned+0x40>)
 80009f8:	460c      	mov	r4, r1
 80009fa:	4605      	mov	r5, r0
 80009fc:	6831      	ldr	r1, [r6, #0]
 80009fe:	b911      	cbnz	r1, 8000a06 <sbrk_aligned+0x12>
 8000a00:	f000 fca2 	bl	8001348 <_sbrk_r>
 8000a04:	6030      	str	r0, [r6, #0]
 8000a06:	4621      	mov	r1, r4
 8000a08:	4628      	mov	r0, r5
 8000a0a:	f000 fc9d 	bl	8001348 <_sbrk_r>
 8000a0e:	1c43      	adds	r3, r0, #1
 8000a10:	d103      	bne.n	8000a1a <sbrk_aligned+0x26>
 8000a12:	f04f 34ff 	mov.w	r4, #4294967295
 8000a16:	4620      	mov	r0, r4
 8000a18:	bd70      	pop	{r4, r5, r6, pc}
 8000a1a:	1cc4      	adds	r4, r0, #3
 8000a1c:	f024 0403 	bic.w	r4, r4, #3
 8000a20:	42a0      	cmp	r0, r4
 8000a22:	d0f8      	beq.n	8000a16 <sbrk_aligned+0x22>
 8000a24:	1a21      	subs	r1, r4, r0
 8000a26:	4628      	mov	r0, r5
 8000a28:	f000 fc8e 	bl	8001348 <_sbrk_r>
 8000a2c:	3001      	adds	r0, #1
 8000a2e:	d1f2      	bne.n	8000a16 <sbrk_aligned+0x22>
 8000a30:	e7ef      	b.n	8000a12 <sbrk_aligned+0x1e>
 8000a32:	bf00      	nop
 8000a34:	200001c4 	.word	0x200001c4

08000a38 <_malloc_r>:
 8000a38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a3c:	1ccd      	adds	r5, r1, #3
 8000a3e:	4606      	mov	r6, r0
 8000a40:	f025 0503 	bic.w	r5, r5, #3
 8000a44:	3508      	adds	r5, #8
 8000a46:	2d0c      	cmp	r5, #12
 8000a48:	bf38      	it	cc
 8000a4a:	250c      	movcc	r5, #12
 8000a4c:	2d00      	cmp	r5, #0
 8000a4e:	db01      	blt.n	8000a54 <_malloc_r+0x1c>
 8000a50:	42a9      	cmp	r1, r5
 8000a52:	d904      	bls.n	8000a5e <_malloc_r+0x26>
 8000a54:	230c      	movs	r3, #12
 8000a56:	6033      	str	r3, [r6, #0]
 8000a58:	2000      	movs	r0, #0
 8000a5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a5e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b34 <_malloc_r+0xfc>
 8000a62:	f000 f869 	bl	8000b38 <__malloc_lock>
 8000a66:	f8d8 3000 	ldr.w	r3, [r8]
 8000a6a:	461c      	mov	r4, r3
 8000a6c:	bb44      	cbnz	r4, 8000ac0 <_malloc_r+0x88>
 8000a6e:	4629      	mov	r1, r5
 8000a70:	4630      	mov	r0, r6
 8000a72:	f7ff ffbf 	bl	80009f4 <sbrk_aligned>
 8000a76:	1c43      	adds	r3, r0, #1
 8000a78:	4604      	mov	r4, r0
 8000a7a:	d158      	bne.n	8000b2e <_malloc_r+0xf6>
 8000a7c:	f8d8 4000 	ldr.w	r4, [r8]
 8000a80:	4627      	mov	r7, r4
 8000a82:	2f00      	cmp	r7, #0
 8000a84:	d143      	bne.n	8000b0e <_malloc_r+0xd6>
 8000a86:	2c00      	cmp	r4, #0
 8000a88:	d04b      	beq.n	8000b22 <_malloc_r+0xea>
 8000a8a:	6823      	ldr	r3, [r4, #0]
 8000a8c:	4639      	mov	r1, r7
 8000a8e:	4630      	mov	r0, r6
 8000a90:	eb04 0903 	add.w	r9, r4, r3
 8000a94:	f000 fc58 	bl	8001348 <_sbrk_r>
 8000a98:	4581      	cmp	r9, r0
 8000a9a:	d142      	bne.n	8000b22 <_malloc_r+0xea>
 8000a9c:	6821      	ldr	r1, [r4, #0]
 8000a9e:	4630      	mov	r0, r6
 8000aa0:	1a6d      	subs	r5, r5, r1
 8000aa2:	4629      	mov	r1, r5
 8000aa4:	f7ff ffa6 	bl	80009f4 <sbrk_aligned>
 8000aa8:	3001      	adds	r0, #1
 8000aaa:	d03a      	beq.n	8000b22 <_malloc_r+0xea>
 8000aac:	6823      	ldr	r3, [r4, #0]
 8000aae:	442b      	add	r3, r5
 8000ab0:	6023      	str	r3, [r4, #0]
 8000ab2:	f8d8 3000 	ldr.w	r3, [r8]
 8000ab6:	685a      	ldr	r2, [r3, #4]
 8000ab8:	bb62      	cbnz	r2, 8000b14 <_malloc_r+0xdc>
 8000aba:	f8c8 7000 	str.w	r7, [r8]
 8000abe:	e00f      	b.n	8000ae0 <_malloc_r+0xa8>
 8000ac0:	6822      	ldr	r2, [r4, #0]
 8000ac2:	1b52      	subs	r2, r2, r5
 8000ac4:	d420      	bmi.n	8000b08 <_malloc_r+0xd0>
 8000ac6:	2a0b      	cmp	r2, #11
 8000ac8:	d917      	bls.n	8000afa <_malloc_r+0xc2>
 8000aca:	1961      	adds	r1, r4, r5
 8000acc:	42a3      	cmp	r3, r4
 8000ace:	6025      	str	r5, [r4, #0]
 8000ad0:	bf18      	it	ne
 8000ad2:	6059      	strne	r1, [r3, #4]
 8000ad4:	6863      	ldr	r3, [r4, #4]
 8000ad6:	bf08      	it	eq
 8000ad8:	f8c8 1000 	streq.w	r1, [r8]
 8000adc:	5162      	str	r2, [r4, r5]
 8000ade:	604b      	str	r3, [r1, #4]
 8000ae0:	4630      	mov	r0, r6
 8000ae2:	f000 f82f 	bl	8000b44 <__malloc_unlock>
 8000ae6:	f104 000b 	add.w	r0, r4, #11
 8000aea:	1d23      	adds	r3, r4, #4
 8000aec:	f020 0007 	bic.w	r0, r0, #7
 8000af0:	1ac2      	subs	r2, r0, r3
 8000af2:	bf1c      	itt	ne
 8000af4:	1a1b      	subne	r3, r3, r0
 8000af6:	50a3      	strne	r3, [r4, r2]
 8000af8:	e7af      	b.n	8000a5a <_malloc_r+0x22>
 8000afa:	6862      	ldr	r2, [r4, #4]
 8000afc:	42a3      	cmp	r3, r4
 8000afe:	bf0c      	ite	eq
 8000b00:	f8c8 2000 	streq.w	r2, [r8]
 8000b04:	605a      	strne	r2, [r3, #4]
 8000b06:	e7eb      	b.n	8000ae0 <_malloc_r+0xa8>
 8000b08:	4623      	mov	r3, r4
 8000b0a:	6864      	ldr	r4, [r4, #4]
 8000b0c:	e7ae      	b.n	8000a6c <_malloc_r+0x34>
 8000b0e:	463c      	mov	r4, r7
 8000b10:	687f      	ldr	r7, [r7, #4]
 8000b12:	e7b6      	b.n	8000a82 <_malloc_r+0x4a>
 8000b14:	461a      	mov	r2, r3
 8000b16:	685b      	ldr	r3, [r3, #4]
 8000b18:	42a3      	cmp	r3, r4
 8000b1a:	d1fb      	bne.n	8000b14 <_malloc_r+0xdc>
 8000b1c:	2300      	movs	r3, #0
 8000b1e:	6053      	str	r3, [r2, #4]
 8000b20:	e7de      	b.n	8000ae0 <_malloc_r+0xa8>
 8000b22:	230c      	movs	r3, #12
 8000b24:	4630      	mov	r0, r6
 8000b26:	6033      	str	r3, [r6, #0]
 8000b28:	f000 f80c 	bl	8000b44 <__malloc_unlock>
 8000b2c:	e794      	b.n	8000a58 <_malloc_r+0x20>
 8000b2e:	6005      	str	r5, [r0, #0]
 8000b30:	e7d6      	b.n	8000ae0 <_malloc_r+0xa8>
 8000b32:	bf00      	nop
 8000b34:	200001c8 	.word	0x200001c8

08000b38 <__malloc_lock>:
 8000b38:	4801      	ldr	r0, [pc, #4]	@ (8000b40 <__malloc_lock+0x8>)
 8000b3a:	f7ff bf0e 	b.w	800095a <__retarget_lock_acquire_recursive>
 8000b3e:	bf00      	nop
 8000b40:	200001c0 	.word	0x200001c0

08000b44 <__malloc_unlock>:
 8000b44:	4801      	ldr	r0, [pc, #4]	@ (8000b4c <__malloc_unlock+0x8>)
 8000b46:	f7ff bf09 	b.w	800095c <__retarget_lock_release_recursive>
 8000b4a:	bf00      	nop
 8000b4c:	200001c0 	.word	0x200001c0

08000b50 <__sfputc_r>:
 8000b50:	6893      	ldr	r3, [r2, #8]
 8000b52:	3b01      	subs	r3, #1
 8000b54:	2b00      	cmp	r3, #0
 8000b56:	b410      	push	{r4}
 8000b58:	6093      	str	r3, [r2, #8]
 8000b5a:	da07      	bge.n	8000b6c <__sfputc_r+0x1c>
 8000b5c:	6994      	ldr	r4, [r2, #24]
 8000b5e:	42a3      	cmp	r3, r4
 8000b60:	db01      	blt.n	8000b66 <__sfputc_r+0x16>
 8000b62:	290a      	cmp	r1, #10
 8000b64:	d102      	bne.n	8000b6c <__sfputc_r+0x1c>
 8000b66:	bc10      	pop	{r4}
 8000b68:	f7ff bde9 	b.w	800073e <__swbuf_r>
 8000b6c:	6813      	ldr	r3, [r2, #0]
 8000b6e:	1c58      	adds	r0, r3, #1
 8000b70:	6010      	str	r0, [r2, #0]
 8000b72:	4608      	mov	r0, r1
 8000b74:	7019      	strb	r1, [r3, #0]
 8000b76:	bc10      	pop	{r4}
 8000b78:	4770      	bx	lr

08000b7a <__sfputs_r>:
 8000b7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b7c:	4606      	mov	r6, r0
 8000b7e:	460f      	mov	r7, r1
 8000b80:	4614      	mov	r4, r2
 8000b82:	18d5      	adds	r5, r2, r3
 8000b84:	42ac      	cmp	r4, r5
 8000b86:	d101      	bne.n	8000b8c <__sfputs_r+0x12>
 8000b88:	2000      	movs	r0, #0
 8000b8a:	e007      	b.n	8000b9c <__sfputs_r+0x22>
 8000b8c:	463a      	mov	r2, r7
 8000b8e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b92:	4630      	mov	r0, r6
 8000b94:	f7ff ffdc 	bl	8000b50 <__sfputc_r>
 8000b98:	1c43      	adds	r3, r0, #1
 8000b9a:	d1f3      	bne.n	8000b84 <__sfputs_r+0xa>
 8000b9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ba0 <_vfiprintf_r>:
 8000ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ba4:	460d      	mov	r5, r1
 8000ba6:	b09d      	sub	sp, #116	@ 0x74
 8000ba8:	4614      	mov	r4, r2
 8000baa:	4698      	mov	r8, r3
 8000bac:	4606      	mov	r6, r0
 8000bae:	b118      	cbz	r0, 8000bb8 <_vfiprintf_r+0x18>
 8000bb0:	6a03      	ldr	r3, [r0, #32]
 8000bb2:	b90b      	cbnz	r3, 8000bb8 <_vfiprintf_r+0x18>
 8000bb4:	f7ff fcda 	bl	800056c <__sinit>
 8000bb8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000bba:	07d9      	lsls	r1, r3, #31
 8000bbc:	d405      	bmi.n	8000bca <_vfiprintf_r+0x2a>
 8000bbe:	89ab      	ldrh	r3, [r5, #12]
 8000bc0:	059a      	lsls	r2, r3, #22
 8000bc2:	d402      	bmi.n	8000bca <_vfiprintf_r+0x2a>
 8000bc4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000bc6:	f7ff fec8 	bl	800095a <__retarget_lock_acquire_recursive>
 8000bca:	89ab      	ldrh	r3, [r5, #12]
 8000bcc:	071b      	lsls	r3, r3, #28
 8000bce:	d501      	bpl.n	8000bd4 <_vfiprintf_r+0x34>
 8000bd0:	692b      	ldr	r3, [r5, #16]
 8000bd2:	b99b      	cbnz	r3, 8000bfc <_vfiprintf_r+0x5c>
 8000bd4:	4629      	mov	r1, r5
 8000bd6:	4630      	mov	r0, r6
 8000bd8:	f7ff fdf0 	bl	80007bc <__swsetup_r>
 8000bdc:	b170      	cbz	r0, 8000bfc <_vfiprintf_r+0x5c>
 8000bde:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000be0:	07dc      	lsls	r4, r3, #31
 8000be2:	d504      	bpl.n	8000bee <_vfiprintf_r+0x4e>
 8000be4:	f04f 30ff 	mov.w	r0, #4294967295
 8000be8:	b01d      	add	sp, #116	@ 0x74
 8000bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000bee:	89ab      	ldrh	r3, [r5, #12]
 8000bf0:	0598      	lsls	r0, r3, #22
 8000bf2:	d4f7      	bmi.n	8000be4 <_vfiprintf_r+0x44>
 8000bf4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000bf6:	f7ff feb1 	bl	800095c <__retarget_lock_release_recursive>
 8000bfa:	e7f3      	b.n	8000be4 <_vfiprintf_r+0x44>
 8000bfc:	2300      	movs	r3, #0
 8000bfe:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c02:	f04f 0901 	mov.w	r9, #1
 8000c06:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8000dbc <_vfiprintf_r+0x21c>
 8000c0a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c0c:	2320      	movs	r3, #32
 8000c0e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000c12:	2330      	movs	r3, #48	@ 0x30
 8000c14:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000c18:	4623      	mov	r3, r4
 8000c1a:	469a      	mov	sl, r3
 8000c1c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c20:	b10a      	cbz	r2, 8000c26 <_vfiprintf_r+0x86>
 8000c22:	2a25      	cmp	r2, #37	@ 0x25
 8000c24:	d1f9      	bne.n	8000c1a <_vfiprintf_r+0x7a>
 8000c26:	ebba 0b04 	subs.w	fp, sl, r4
 8000c2a:	d00b      	beq.n	8000c44 <_vfiprintf_r+0xa4>
 8000c2c:	465b      	mov	r3, fp
 8000c2e:	4622      	mov	r2, r4
 8000c30:	4629      	mov	r1, r5
 8000c32:	4630      	mov	r0, r6
 8000c34:	f7ff ffa1 	bl	8000b7a <__sfputs_r>
 8000c38:	3001      	adds	r0, #1
 8000c3a:	f000 80a7 	beq.w	8000d8c <_vfiprintf_r+0x1ec>
 8000c3e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000c40:	445a      	add	r2, fp
 8000c42:	9209      	str	r2, [sp, #36]	@ 0x24
 8000c44:	f89a 3000 	ldrb.w	r3, [sl]
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	f000 809f 	beq.w	8000d8c <_vfiprintf_r+0x1ec>
 8000c4e:	2300      	movs	r3, #0
 8000c50:	f04f 32ff 	mov.w	r2, #4294967295
 8000c54:	f10a 0a01 	add.w	sl, sl, #1
 8000c58:	9304      	str	r3, [sp, #16]
 8000c5a:	9307      	str	r3, [sp, #28]
 8000c5c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000c60:	931a      	str	r3, [sp, #104]	@ 0x68
 8000c62:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000c66:	4654      	mov	r4, sl
 8000c68:	2205      	movs	r2, #5
 8000c6a:	4854      	ldr	r0, [pc, #336]	@ (8000dbc <_vfiprintf_r+0x21c>)
 8000c6c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c70:	f000 fb7a 	bl	8001368 <memchr>
 8000c74:	9a04      	ldr	r2, [sp, #16]
 8000c76:	b9d8      	cbnz	r0, 8000cb0 <_vfiprintf_r+0x110>
 8000c78:	06d1      	lsls	r1, r2, #27
 8000c7a:	bf44      	itt	mi
 8000c7c:	2320      	movmi	r3, #32
 8000c7e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000c82:	0713      	lsls	r3, r2, #28
 8000c84:	bf44      	itt	mi
 8000c86:	232b      	movmi	r3, #43	@ 0x2b
 8000c88:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000c8c:	f89a 3000 	ldrb.w	r3, [sl]
 8000c90:	2b2a      	cmp	r3, #42	@ 0x2a
 8000c92:	d015      	beq.n	8000cc0 <_vfiprintf_r+0x120>
 8000c94:	9a07      	ldr	r2, [sp, #28]
 8000c96:	4654      	mov	r4, sl
 8000c98:	2000      	movs	r0, #0
 8000c9a:	f04f 0c0a 	mov.w	ip, #10
 8000c9e:	4621      	mov	r1, r4
 8000ca0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ca4:	3b30      	subs	r3, #48	@ 0x30
 8000ca6:	2b09      	cmp	r3, #9
 8000ca8:	d94b      	bls.n	8000d42 <_vfiprintf_r+0x1a2>
 8000caa:	b1b0      	cbz	r0, 8000cda <_vfiprintf_r+0x13a>
 8000cac:	9207      	str	r2, [sp, #28]
 8000cae:	e014      	b.n	8000cda <_vfiprintf_r+0x13a>
 8000cb0:	eba0 0308 	sub.w	r3, r0, r8
 8000cb4:	46a2      	mov	sl, r4
 8000cb6:	fa09 f303 	lsl.w	r3, r9, r3
 8000cba:	4313      	orrs	r3, r2
 8000cbc:	9304      	str	r3, [sp, #16]
 8000cbe:	e7d2      	b.n	8000c66 <_vfiprintf_r+0xc6>
 8000cc0:	9b03      	ldr	r3, [sp, #12]
 8000cc2:	1d19      	adds	r1, r3, #4
 8000cc4:	681b      	ldr	r3, [r3, #0]
 8000cc6:	2b00      	cmp	r3, #0
 8000cc8:	9103      	str	r1, [sp, #12]
 8000cca:	bfbb      	ittet	lt
 8000ccc:	425b      	neglt	r3, r3
 8000cce:	f042 0202 	orrlt.w	r2, r2, #2
 8000cd2:	9307      	strge	r3, [sp, #28]
 8000cd4:	9307      	strlt	r3, [sp, #28]
 8000cd6:	bfb8      	it	lt
 8000cd8:	9204      	strlt	r2, [sp, #16]
 8000cda:	7823      	ldrb	r3, [r4, #0]
 8000cdc:	2b2e      	cmp	r3, #46	@ 0x2e
 8000cde:	d10a      	bne.n	8000cf6 <_vfiprintf_r+0x156>
 8000ce0:	7863      	ldrb	r3, [r4, #1]
 8000ce2:	2b2a      	cmp	r3, #42	@ 0x2a
 8000ce4:	d132      	bne.n	8000d4c <_vfiprintf_r+0x1ac>
 8000ce6:	9b03      	ldr	r3, [sp, #12]
 8000ce8:	3402      	adds	r4, #2
 8000cea:	1d1a      	adds	r2, r3, #4
 8000cec:	681b      	ldr	r3, [r3, #0]
 8000cee:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000cf2:	9203      	str	r2, [sp, #12]
 8000cf4:	9305      	str	r3, [sp, #20]
 8000cf6:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000dc0 <_vfiprintf_r+0x220>
 8000cfa:	2203      	movs	r2, #3
 8000cfc:	7821      	ldrb	r1, [r4, #0]
 8000cfe:	4650      	mov	r0, sl
 8000d00:	f000 fb32 	bl	8001368 <memchr>
 8000d04:	b138      	cbz	r0, 8000d16 <_vfiprintf_r+0x176>
 8000d06:	eba0 000a 	sub.w	r0, r0, sl
 8000d0a:	2240      	movs	r2, #64	@ 0x40
 8000d0c:	9b04      	ldr	r3, [sp, #16]
 8000d0e:	3401      	adds	r4, #1
 8000d10:	4082      	lsls	r2, r0
 8000d12:	4313      	orrs	r3, r2
 8000d14:	9304      	str	r3, [sp, #16]
 8000d16:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d1a:	2206      	movs	r2, #6
 8000d1c:	4829      	ldr	r0, [pc, #164]	@ (8000dc4 <_vfiprintf_r+0x224>)
 8000d1e:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000d22:	f000 fb21 	bl	8001368 <memchr>
 8000d26:	2800      	cmp	r0, #0
 8000d28:	d03f      	beq.n	8000daa <_vfiprintf_r+0x20a>
 8000d2a:	4b27      	ldr	r3, [pc, #156]	@ (8000dc8 <_vfiprintf_r+0x228>)
 8000d2c:	bb1b      	cbnz	r3, 8000d76 <_vfiprintf_r+0x1d6>
 8000d2e:	9b03      	ldr	r3, [sp, #12]
 8000d30:	3307      	adds	r3, #7
 8000d32:	f023 0307 	bic.w	r3, r3, #7
 8000d36:	3308      	adds	r3, #8
 8000d38:	9303      	str	r3, [sp, #12]
 8000d3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000d3c:	443b      	add	r3, r7
 8000d3e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d40:	e76a      	b.n	8000c18 <_vfiprintf_r+0x78>
 8000d42:	fb0c 3202 	mla	r2, ip, r2, r3
 8000d46:	460c      	mov	r4, r1
 8000d48:	2001      	movs	r0, #1
 8000d4a:	e7a8      	b.n	8000c9e <_vfiprintf_r+0xfe>
 8000d4c:	2300      	movs	r3, #0
 8000d4e:	3401      	adds	r4, #1
 8000d50:	f04f 0c0a 	mov.w	ip, #10
 8000d54:	4619      	mov	r1, r3
 8000d56:	9305      	str	r3, [sp, #20]
 8000d58:	4620      	mov	r0, r4
 8000d5a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000d5e:	3a30      	subs	r2, #48	@ 0x30
 8000d60:	2a09      	cmp	r2, #9
 8000d62:	d903      	bls.n	8000d6c <_vfiprintf_r+0x1cc>
 8000d64:	2b00      	cmp	r3, #0
 8000d66:	d0c6      	beq.n	8000cf6 <_vfiprintf_r+0x156>
 8000d68:	9105      	str	r1, [sp, #20]
 8000d6a:	e7c4      	b.n	8000cf6 <_vfiprintf_r+0x156>
 8000d6c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000d70:	4604      	mov	r4, r0
 8000d72:	2301      	movs	r3, #1
 8000d74:	e7f0      	b.n	8000d58 <_vfiprintf_r+0x1b8>
 8000d76:	ab03      	add	r3, sp, #12
 8000d78:	462a      	mov	r2, r5
 8000d7a:	a904      	add	r1, sp, #16
 8000d7c:	4630      	mov	r0, r6
 8000d7e:	9300      	str	r3, [sp, #0]
 8000d80:	4b12      	ldr	r3, [pc, #72]	@ (8000dcc <_vfiprintf_r+0x22c>)
 8000d82:	f3af 8000 	nop.w
 8000d86:	4607      	mov	r7, r0
 8000d88:	1c78      	adds	r0, r7, #1
 8000d8a:	d1d6      	bne.n	8000d3a <_vfiprintf_r+0x19a>
 8000d8c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d8e:	07d9      	lsls	r1, r3, #31
 8000d90:	d405      	bmi.n	8000d9e <_vfiprintf_r+0x1fe>
 8000d92:	89ab      	ldrh	r3, [r5, #12]
 8000d94:	059a      	lsls	r2, r3, #22
 8000d96:	d402      	bmi.n	8000d9e <_vfiprintf_r+0x1fe>
 8000d98:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d9a:	f7ff fddf 	bl	800095c <__retarget_lock_release_recursive>
 8000d9e:	89ab      	ldrh	r3, [r5, #12]
 8000da0:	065b      	lsls	r3, r3, #25
 8000da2:	f53f af1f 	bmi.w	8000be4 <_vfiprintf_r+0x44>
 8000da6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000da8:	e71e      	b.n	8000be8 <_vfiprintf_r+0x48>
 8000daa:	ab03      	add	r3, sp, #12
 8000dac:	462a      	mov	r2, r5
 8000dae:	a904      	add	r1, sp, #16
 8000db0:	4630      	mov	r0, r6
 8000db2:	9300      	str	r3, [sp, #0]
 8000db4:	4b05      	ldr	r3, [pc, #20]	@ (8000dcc <_vfiprintf_r+0x22c>)
 8000db6:	f000 f87d 	bl	8000eb4 <_printf_i>
 8000dba:	e7e4      	b.n	8000d86 <_vfiprintf_r+0x1e6>
 8000dbc:	080013db 	.word	0x080013db
 8000dc0:	080013e1 	.word	0x080013e1
 8000dc4:	080013e5 	.word	0x080013e5
 8000dc8:	00000000 	.word	0x00000000
 8000dcc:	08000b7b 	.word	0x08000b7b

08000dd0 <_printf_common>:
 8000dd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000dd4:	4616      	mov	r6, r2
 8000dd6:	4698      	mov	r8, r3
 8000dd8:	688a      	ldr	r2, [r1, #8]
 8000dda:	4607      	mov	r7, r0
 8000ddc:	690b      	ldr	r3, [r1, #16]
 8000dde:	460c      	mov	r4, r1
 8000de0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000de4:	4293      	cmp	r3, r2
 8000de6:	bfb8      	it	lt
 8000de8:	4613      	movlt	r3, r2
 8000dea:	6033      	str	r3, [r6, #0]
 8000dec:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000df0:	b10a      	cbz	r2, 8000df6 <_printf_common+0x26>
 8000df2:	3301      	adds	r3, #1
 8000df4:	6033      	str	r3, [r6, #0]
 8000df6:	6823      	ldr	r3, [r4, #0]
 8000df8:	0699      	lsls	r1, r3, #26
 8000dfa:	bf42      	ittt	mi
 8000dfc:	6833      	ldrmi	r3, [r6, #0]
 8000dfe:	3302      	addmi	r3, #2
 8000e00:	6033      	strmi	r3, [r6, #0]
 8000e02:	6825      	ldr	r5, [r4, #0]
 8000e04:	f015 0506 	ands.w	r5, r5, #6
 8000e08:	d106      	bne.n	8000e18 <_printf_common+0x48>
 8000e0a:	f104 0a19 	add.w	sl, r4, #25
 8000e0e:	68e3      	ldr	r3, [r4, #12]
 8000e10:	6832      	ldr	r2, [r6, #0]
 8000e12:	1a9b      	subs	r3, r3, r2
 8000e14:	42ab      	cmp	r3, r5
 8000e16:	dc2b      	bgt.n	8000e70 <_printf_common+0xa0>
 8000e18:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000e1c:	6822      	ldr	r2, [r4, #0]
 8000e1e:	3b00      	subs	r3, #0
 8000e20:	bf18      	it	ne
 8000e22:	2301      	movne	r3, #1
 8000e24:	0692      	lsls	r2, r2, #26
 8000e26:	d430      	bmi.n	8000e8a <_printf_common+0xba>
 8000e28:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000e2c:	4641      	mov	r1, r8
 8000e2e:	4638      	mov	r0, r7
 8000e30:	47c8      	blx	r9
 8000e32:	3001      	adds	r0, #1
 8000e34:	d023      	beq.n	8000e7e <_printf_common+0xae>
 8000e36:	6823      	ldr	r3, [r4, #0]
 8000e38:	341a      	adds	r4, #26
 8000e3a:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8000e3e:	f003 0306 	and.w	r3, r3, #6
 8000e42:	2b04      	cmp	r3, #4
 8000e44:	bf0a      	itet	eq
 8000e46:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 8000e4a:	2500      	movne	r5, #0
 8000e4c:	6833      	ldreq	r3, [r6, #0]
 8000e4e:	f04f 0600 	mov.w	r6, #0
 8000e52:	bf08      	it	eq
 8000e54:	1aed      	subeq	r5, r5, r3
 8000e56:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000e5a:	bf08      	it	eq
 8000e5c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000e60:	4293      	cmp	r3, r2
 8000e62:	bfc4      	itt	gt
 8000e64:	1a9b      	subgt	r3, r3, r2
 8000e66:	18ed      	addgt	r5, r5, r3
 8000e68:	42b5      	cmp	r5, r6
 8000e6a:	d11a      	bne.n	8000ea2 <_printf_common+0xd2>
 8000e6c:	2000      	movs	r0, #0
 8000e6e:	e008      	b.n	8000e82 <_printf_common+0xb2>
 8000e70:	2301      	movs	r3, #1
 8000e72:	4652      	mov	r2, sl
 8000e74:	4641      	mov	r1, r8
 8000e76:	4638      	mov	r0, r7
 8000e78:	47c8      	blx	r9
 8000e7a:	3001      	adds	r0, #1
 8000e7c:	d103      	bne.n	8000e86 <_printf_common+0xb6>
 8000e7e:	f04f 30ff 	mov.w	r0, #4294967295
 8000e82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e86:	3501      	adds	r5, #1
 8000e88:	e7c1      	b.n	8000e0e <_printf_common+0x3e>
 8000e8a:	18e1      	adds	r1, r4, r3
 8000e8c:	1c5a      	adds	r2, r3, #1
 8000e8e:	2030      	movs	r0, #48	@ 0x30
 8000e90:	3302      	adds	r3, #2
 8000e92:	4422      	add	r2, r4
 8000e94:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000e98:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000e9c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000ea0:	e7c2      	b.n	8000e28 <_printf_common+0x58>
 8000ea2:	2301      	movs	r3, #1
 8000ea4:	4622      	mov	r2, r4
 8000ea6:	4641      	mov	r1, r8
 8000ea8:	4638      	mov	r0, r7
 8000eaa:	47c8      	blx	r9
 8000eac:	3001      	adds	r0, #1
 8000eae:	d0e6      	beq.n	8000e7e <_printf_common+0xae>
 8000eb0:	3601      	adds	r6, #1
 8000eb2:	e7d9      	b.n	8000e68 <_printf_common+0x98>

08000eb4 <_printf_i>:
 8000eb4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000eb8:	7e0f      	ldrb	r7, [r1, #24]
 8000eba:	4691      	mov	r9, r2
 8000ebc:	4680      	mov	r8, r0
 8000ebe:	460c      	mov	r4, r1
 8000ec0:	2f78      	cmp	r7, #120	@ 0x78
 8000ec2:	469a      	mov	sl, r3
 8000ec4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000ec6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000eca:	d807      	bhi.n	8000edc <_printf_i+0x28>
 8000ecc:	2f62      	cmp	r7, #98	@ 0x62
 8000ece:	d80a      	bhi.n	8000ee6 <_printf_i+0x32>
 8000ed0:	2f00      	cmp	r7, #0
 8000ed2:	f000 80d1 	beq.w	8001078 <_printf_i+0x1c4>
 8000ed6:	2f58      	cmp	r7, #88	@ 0x58
 8000ed8:	f000 80b8 	beq.w	800104c <_printf_i+0x198>
 8000edc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000ee0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000ee4:	e03a      	b.n	8000f5c <_printf_i+0xa8>
 8000ee6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000eea:	2b15      	cmp	r3, #21
 8000eec:	d8f6      	bhi.n	8000edc <_printf_i+0x28>
 8000eee:	a101      	add	r1, pc, #4	@ (adr r1, 8000ef4 <_printf_i+0x40>)
 8000ef0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000ef4:	08000f4d 	.word	0x08000f4d
 8000ef8:	08000f61 	.word	0x08000f61
 8000efc:	08000edd 	.word	0x08000edd
 8000f00:	08000edd 	.word	0x08000edd
 8000f04:	08000edd 	.word	0x08000edd
 8000f08:	08000edd 	.word	0x08000edd
 8000f0c:	08000f61 	.word	0x08000f61
 8000f10:	08000edd 	.word	0x08000edd
 8000f14:	08000edd 	.word	0x08000edd
 8000f18:	08000edd 	.word	0x08000edd
 8000f1c:	08000edd 	.word	0x08000edd
 8000f20:	0800105f 	.word	0x0800105f
 8000f24:	08000f8b 	.word	0x08000f8b
 8000f28:	08001019 	.word	0x08001019
 8000f2c:	08000edd 	.word	0x08000edd
 8000f30:	08000edd 	.word	0x08000edd
 8000f34:	08001081 	.word	0x08001081
 8000f38:	08000edd 	.word	0x08000edd
 8000f3c:	08000f8b 	.word	0x08000f8b
 8000f40:	08000edd 	.word	0x08000edd
 8000f44:	08000edd 	.word	0x08000edd
 8000f48:	08001021 	.word	0x08001021
 8000f4c:	6833      	ldr	r3, [r6, #0]
 8000f4e:	1d1a      	adds	r2, r3, #4
 8000f50:	681b      	ldr	r3, [r3, #0]
 8000f52:	6032      	str	r2, [r6, #0]
 8000f54:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f58:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000f5c:	2301      	movs	r3, #1
 8000f5e:	e09c      	b.n	800109a <_printf_i+0x1e6>
 8000f60:	6833      	ldr	r3, [r6, #0]
 8000f62:	6820      	ldr	r0, [r4, #0]
 8000f64:	1d19      	adds	r1, r3, #4
 8000f66:	6031      	str	r1, [r6, #0]
 8000f68:	0606      	lsls	r6, r0, #24
 8000f6a:	d501      	bpl.n	8000f70 <_printf_i+0xbc>
 8000f6c:	681d      	ldr	r5, [r3, #0]
 8000f6e:	e003      	b.n	8000f78 <_printf_i+0xc4>
 8000f70:	0645      	lsls	r5, r0, #25
 8000f72:	d5fb      	bpl.n	8000f6c <_printf_i+0xb8>
 8000f74:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000f78:	2d00      	cmp	r5, #0
 8000f7a:	da03      	bge.n	8000f84 <_printf_i+0xd0>
 8000f7c:	232d      	movs	r3, #45	@ 0x2d
 8000f7e:	426d      	negs	r5, r5
 8000f80:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000f84:	4858      	ldr	r0, [pc, #352]	@ (80010e8 <_printf_i+0x234>)
 8000f86:	230a      	movs	r3, #10
 8000f88:	e011      	b.n	8000fae <_printf_i+0xfa>
 8000f8a:	6821      	ldr	r1, [r4, #0]
 8000f8c:	6833      	ldr	r3, [r6, #0]
 8000f8e:	0608      	lsls	r0, r1, #24
 8000f90:	f853 5b04 	ldr.w	r5, [r3], #4
 8000f94:	d402      	bmi.n	8000f9c <_printf_i+0xe8>
 8000f96:	0649      	lsls	r1, r1, #25
 8000f98:	bf48      	it	mi
 8000f9a:	b2ad      	uxthmi	r5, r5
 8000f9c:	2f6f      	cmp	r7, #111	@ 0x6f
 8000f9e:	6033      	str	r3, [r6, #0]
 8000fa0:	4851      	ldr	r0, [pc, #324]	@ (80010e8 <_printf_i+0x234>)
 8000fa2:	bf14      	ite	ne
 8000fa4:	230a      	movne	r3, #10
 8000fa6:	2308      	moveq	r3, #8
 8000fa8:	2100      	movs	r1, #0
 8000faa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000fae:	6866      	ldr	r6, [r4, #4]
 8000fb0:	2e00      	cmp	r6, #0
 8000fb2:	60a6      	str	r6, [r4, #8]
 8000fb4:	db05      	blt.n	8000fc2 <_printf_i+0x10e>
 8000fb6:	6821      	ldr	r1, [r4, #0]
 8000fb8:	432e      	orrs	r6, r5
 8000fba:	f021 0104 	bic.w	r1, r1, #4
 8000fbe:	6021      	str	r1, [r4, #0]
 8000fc0:	d04b      	beq.n	800105a <_printf_i+0x1a6>
 8000fc2:	4616      	mov	r6, r2
 8000fc4:	fbb5 f1f3 	udiv	r1, r5, r3
 8000fc8:	fb03 5711 	mls	r7, r3, r1, r5
 8000fcc:	5dc7      	ldrb	r7, [r0, r7]
 8000fce:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000fd2:	462f      	mov	r7, r5
 8000fd4:	460d      	mov	r5, r1
 8000fd6:	42bb      	cmp	r3, r7
 8000fd8:	d9f4      	bls.n	8000fc4 <_printf_i+0x110>
 8000fda:	2b08      	cmp	r3, #8
 8000fdc:	d10b      	bne.n	8000ff6 <_printf_i+0x142>
 8000fde:	6823      	ldr	r3, [r4, #0]
 8000fe0:	07df      	lsls	r7, r3, #31
 8000fe2:	d508      	bpl.n	8000ff6 <_printf_i+0x142>
 8000fe4:	6923      	ldr	r3, [r4, #16]
 8000fe6:	6861      	ldr	r1, [r4, #4]
 8000fe8:	4299      	cmp	r1, r3
 8000fea:	bfde      	ittt	le
 8000fec:	2330      	movle	r3, #48	@ 0x30
 8000fee:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000ff2:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000ff6:	1b92      	subs	r2, r2, r6
 8000ff8:	6122      	str	r2, [r4, #16]
 8000ffa:	464b      	mov	r3, r9
 8000ffc:	aa03      	add	r2, sp, #12
 8000ffe:	4621      	mov	r1, r4
 8001000:	4640      	mov	r0, r8
 8001002:	f8cd a000 	str.w	sl, [sp]
 8001006:	f7ff fee3 	bl	8000dd0 <_printf_common>
 800100a:	3001      	adds	r0, #1
 800100c:	d14a      	bne.n	80010a4 <_printf_i+0x1f0>
 800100e:	f04f 30ff 	mov.w	r0, #4294967295
 8001012:	b004      	add	sp, #16
 8001014:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001018:	6823      	ldr	r3, [r4, #0]
 800101a:	f043 0320 	orr.w	r3, r3, #32
 800101e:	6023      	str	r3, [r4, #0]
 8001020:	2778      	movs	r7, #120	@ 0x78
 8001022:	4832      	ldr	r0, [pc, #200]	@ (80010ec <_printf_i+0x238>)
 8001024:	6823      	ldr	r3, [r4, #0]
 8001026:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800102a:	061f      	lsls	r7, r3, #24
 800102c:	6831      	ldr	r1, [r6, #0]
 800102e:	f851 5b04 	ldr.w	r5, [r1], #4
 8001032:	d402      	bmi.n	800103a <_printf_i+0x186>
 8001034:	065f      	lsls	r7, r3, #25
 8001036:	bf48      	it	mi
 8001038:	b2ad      	uxthmi	r5, r5
 800103a:	6031      	str	r1, [r6, #0]
 800103c:	07d9      	lsls	r1, r3, #31
 800103e:	bf44      	itt	mi
 8001040:	f043 0320 	orrmi.w	r3, r3, #32
 8001044:	6023      	strmi	r3, [r4, #0]
 8001046:	b11d      	cbz	r5, 8001050 <_printf_i+0x19c>
 8001048:	2310      	movs	r3, #16
 800104a:	e7ad      	b.n	8000fa8 <_printf_i+0xf4>
 800104c:	4826      	ldr	r0, [pc, #152]	@ (80010e8 <_printf_i+0x234>)
 800104e:	e7e9      	b.n	8001024 <_printf_i+0x170>
 8001050:	6823      	ldr	r3, [r4, #0]
 8001052:	f023 0320 	bic.w	r3, r3, #32
 8001056:	6023      	str	r3, [r4, #0]
 8001058:	e7f6      	b.n	8001048 <_printf_i+0x194>
 800105a:	4616      	mov	r6, r2
 800105c:	e7bd      	b.n	8000fda <_printf_i+0x126>
 800105e:	6833      	ldr	r3, [r6, #0]
 8001060:	6825      	ldr	r5, [r4, #0]
 8001062:	1d18      	adds	r0, r3, #4
 8001064:	6961      	ldr	r1, [r4, #20]
 8001066:	6030      	str	r0, [r6, #0]
 8001068:	062e      	lsls	r6, r5, #24
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	d501      	bpl.n	8001072 <_printf_i+0x1be>
 800106e:	6019      	str	r1, [r3, #0]
 8001070:	e002      	b.n	8001078 <_printf_i+0x1c4>
 8001072:	0668      	lsls	r0, r5, #25
 8001074:	d5fb      	bpl.n	800106e <_printf_i+0x1ba>
 8001076:	8019      	strh	r1, [r3, #0]
 8001078:	2300      	movs	r3, #0
 800107a:	4616      	mov	r6, r2
 800107c:	6123      	str	r3, [r4, #16]
 800107e:	e7bc      	b.n	8000ffa <_printf_i+0x146>
 8001080:	6833      	ldr	r3, [r6, #0]
 8001082:	2100      	movs	r1, #0
 8001084:	1d1a      	adds	r2, r3, #4
 8001086:	6032      	str	r2, [r6, #0]
 8001088:	681e      	ldr	r6, [r3, #0]
 800108a:	6862      	ldr	r2, [r4, #4]
 800108c:	4630      	mov	r0, r6
 800108e:	f000 f96b 	bl	8001368 <memchr>
 8001092:	b108      	cbz	r0, 8001098 <_printf_i+0x1e4>
 8001094:	1b80      	subs	r0, r0, r6
 8001096:	6060      	str	r0, [r4, #4]
 8001098:	6863      	ldr	r3, [r4, #4]
 800109a:	6123      	str	r3, [r4, #16]
 800109c:	2300      	movs	r3, #0
 800109e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80010a2:	e7aa      	b.n	8000ffa <_printf_i+0x146>
 80010a4:	6923      	ldr	r3, [r4, #16]
 80010a6:	4632      	mov	r2, r6
 80010a8:	4649      	mov	r1, r9
 80010aa:	4640      	mov	r0, r8
 80010ac:	47d0      	blx	sl
 80010ae:	3001      	adds	r0, #1
 80010b0:	d0ad      	beq.n	800100e <_printf_i+0x15a>
 80010b2:	6823      	ldr	r3, [r4, #0]
 80010b4:	079b      	lsls	r3, r3, #30
 80010b6:	d413      	bmi.n	80010e0 <_printf_i+0x22c>
 80010b8:	68e0      	ldr	r0, [r4, #12]
 80010ba:	9b03      	ldr	r3, [sp, #12]
 80010bc:	4298      	cmp	r0, r3
 80010be:	bfb8      	it	lt
 80010c0:	4618      	movlt	r0, r3
 80010c2:	e7a6      	b.n	8001012 <_printf_i+0x15e>
 80010c4:	2301      	movs	r3, #1
 80010c6:	4632      	mov	r2, r6
 80010c8:	4649      	mov	r1, r9
 80010ca:	4640      	mov	r0, r8
 80010cc:	47d0      	blx	sl
 80010ce:	3001      	adds	r0, #1
 80010d0:	d09d      	beq.n	800100e <_printf_i+0x15a>
 80010d2:	3501      	adds	r5, #1
 80010d4:	68e3      	ldr	r3, [r4, #12]
 80010d6:	9903      	ldr	r1, [sp, #12]
 80010d8:	1a5b      	subs	r3, r3, r1
 80010da:	42ab      	cmp	r3, r5
 80010dc:	dcf2      	bgt.n	80010c4 <_printf_i+0x210>
 80010de:	e7eb      	b.n	80010b8 <_printf_i+0x204>
 80010e0:	2500      	movs	r5, #0
 80010e2:	f104 0619 	add.w	r6, r4, #25
 80010e6:	e7f5      	b.n	80010d4 <_printf_i+0x220>
 80010e8:	080013ec 	.word	0x080013ec
 80010ec:	080013fd 	.word	0x080013fd

080010f0 <__sflush_r>:
 80010f0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80010f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010f6:	0716      	lsls	r6, r2, #28
 80010f8:	4605      	mov	r5, r0
 80010fa:	460c      	mov	r4, r1
 80010fc:	d454      	bmi.n	80011a8 <__sflush_r+0xb8>
 80010fe:	684b      	ldr	r3, [r1, #4]
 8001100:	2b00      	cmp	r3, #0
 8001102:	dc02      	bgt.n	800110a <__sflush_r+0x1a>
 8001104:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001106:	2b00      	cmp	r3, #0
 8001108:	dd48      	ble.n	800119c <__sflush_r+0xac>
 800110a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800110c:	2e00      	cmp	r6, #0
 800110e:	d045      	beq.n	800119c <__sflush_r+0xac>
 8001110:	2300      	movs	r3, #0
 8001112:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001116:	682f      	ldr	r7, [r5, #0]
 8001118:	6a21      	ldr	r1, [r4, #32]
 800111a:	602b      	str	r3, [r5, #0]
 800111c:	d030      	beq.n	8001180 <__sflush_r+0x90>
 800111e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001120:	89a3      	ldrh	r3, [r4, #12]
 8001122:	0759      	lsls	r1, r3, #29
 8001124:	d505      	bpl.n	8001132 <__sflush_r+0x42>
 8001126:	6863      	ldr	r3, [r4, #4]
 8001128:	1ad2      	subs	r2, r2, r3
 800112a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800112c:	b10b      	cbz	r3, 8001132 <__sflush_r+0x42>
 800112e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001130:	1ad2      	subs	r2, r2, r3
 8001132:	2300      	movs	r3, #0
 8001134:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001136:	6a21      	ldr	r1, [r4, #32]
 8001138:	4628      	mov	r0, r5
 800113a:	47b0      	blx	r6
 800113c:	1c43      	adds	r3, r0, #1
 800113e:	89a3      	ldrh	r3, [r4, #12]
 8001140:	d106      	bne.n	8001150 <__sflush_r+0x60>
 8001142:	6829      	ldr	r1, [r5, #0]
 8001144:	291d      	cmp	r1, #29
 8001146:	d82b      	bhi.n	80011a0 <__sflush_r+0xb0>
 8001148:	4a28      	ldr	r2, [pc, #160]	@ (80011ec <__sflush_r+0xfc>)
 800114a:	40ca      	lsrs	r2, r1
 800114c:	07d6      	lsls	r6, r2, #31
 800114e:	d527      	bpl.n	80011a0 <__sflush_r+0xb0>
 8001150:	2200      	movs	r2, #0
 8001152:	04d9      	lsls	r1, r3, #19
 8001154:	6062      	str	r2, [r4, #4]
 8001156:	6922      	ldr	r2, [r4, #16]
 8001158:	6022      	str	r2, [r4, #0]
 800115a:	d504      	bpl.n	8001166 <__sflush_r+0x76>
 800115c:	1c42      	adds	r2, r0, #1
 800115e:	d101      	bne.n	8001164 <__sflush_r+0x74>
 8001160:	682b      	ldr	r3, [r5, #0]
 8001162:	b903      	cbnz	r3, 8001166 <__sflush_r+0x76>
 8001164:	6560      	str	r0, [r4, #84]	@ 0x54
 8001166:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001168:	602f      	str	r7, [r5, #0]
 800116a:	b1b9      	cbz	r1, 800119c <__sflush_r+0xac>
 800116c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001170:	4299      	cmp	r1, r3
 8001172:	d002      	beq.n	800117a <__sflush_r+0x8a>
 8001174:	4628      	mov	r0, r5
 8001176:	f7ff fbf3 	bl	8000960 <_free_r>
 800117a:	2300      	movs	r3, #0
 800117c:	6363      	str	r3, [r4, #52]	@ 0x34
 800117e:	e00d      	b.n	800119c <__sflush_r+0xac>
 8001180:	2301      	movs	r3, #1
 8001182:	4628      	mov	r0, r5
 8001184:	47b0      	blx	r6
 8001186:	4602      	mov	r2, r0
 8001188:	1c50      	adds	r0, r2, #1
 800118a:	d1c9      	bne.n	8001120 <__sflush_r+0x30>
 800118c:	682b      	ldr	r3, [r5, #0]
 800118e:	2b00      	cmp	r3, #0
 8001190:	d0c6      	beq.n	8001120 <__sflush_r+0x30>
 8001192:	2b1d      	cmp	r3, #29
 8001194:	d001      	beq.n	800119a <__sflush_r+0xaa>
 8001196:	2b16      	cmp	r3, #22
 8001198:	d11c      	bne.n	80011d4 <__sflush_r+0xe4>
 800119a:	602f      	str	r7, [r5, #0]
 800119c:	2000      	movs	r0, #0
 800119e:	e020      	b.n	80011e2 <__sflush_r+0xf2>
 80011a0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011a4:	b21b      	sxth	r3, r3
 80011a6:	e019      	b.n	80011dc <__sflush_r+0xec>
 80011a8:	690f      	ldr	r7, [r1, #16]
 80011aa:	2f00      	cmp	r7, #0
 80011ac:	d0f6      	beq.n	800119c <__sflush_r+0xac>
 80011ae:	0793      	lsls	r3, r2, #30
 80011b0:	680e      	ldr	r6, [r1, #0]
 80011b2:	600f      	str	r7, [r1, #0]
 80011b4:	bf0c      	ite	eq
 80011b6:	694b      	ldreq	r3, [r1, #20]
 80011b8:	2300      	movne	r3, #0
 80011ba:	1bf6      	subs	r6, r6, r7
 80011bc:	608b      	str	r3, [r1, #8]
 80011be:	2e00      	cmp	r6, #0
 80011c0:	ddec      	ble.n	800119c <__sflush_r+0xac>
 80011c2:	4633      	mov	r3, r6
 80011c4:	463a      	mov	r2, r7
 80011c6:	6a21      	ldr	r1, [r4, #32]
 80011c8:	4628      	mov	r0, r5
 80011ca:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80011ce:	47e0      	blx	ip
 80011d0:	2800      	cmp	r0, #0
 80011d2:	dc07      	bgt.n	80011e4 <__sflush_r+0xf4>
 80011d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011d8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011dc:	f04f 30ff 	mov.w	r0, #4294967295
 80011e0:	81a3      	strh	r3, [r4, #12]
 80011e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011e4:	4407      	add	r7, r0
 80011e6:	1a36      	subs	r6, r6, r0
 80011e8:	e7e9      	b.n	80011be <__sflush_r+0xce>
 80011ea:	bf00      	nop
 80011ec:	20400001 	.word	0x20400001

080011f0 <_fflush_r>:
 80011f0:	b538      	push	{r3, r4, r5, lr}
 80011f2:	690b      	ldr	r3, [r1, #16]
 80011f4:	4605      	mov	r5, r0
 80011f6:	460c      	mov	r4, r1
 80011f8:	b913      	cbnz	r3, 8001200 <_fflush_r+0x10>
 80011fa:	2500      	movs	r5, #0
 80011fc:	4628      	mov	r0, r5
 80011fe:	bd38      	pop	{r3, r4, r5, pc}
 8001200:	b118      	cbz	r0, 800120a <_fflush_r+0x1a>
 8001202:	6a03      	ldr	r3, [r0, #32]
 8001204:	b90b      	cbnz	r3, 800120a <_fflush_r+0x1a>
 8001206:	f7ff f9b1 	bl	800056c <__sinit>
 800120a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800120e:	2b00      	cmp	r3, #0
 8001210:	d0f3      	beq.n	80011fa <_fflush_r+0xa>
 8001212:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001214:	07d0      	lsls	r0, r2, #31
 8001216:	d404      	bmi.n	8001222 <_fflush_r+0x32>
 8001218:	0599      	lsls	r1, r3, #22
 800121a:	d402      	bmi.n	8001222 <_fflush_r+0x32>
 800121c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800121e:	f7ff fb9c 	bl	800095a <__retarget_lock_acquire_recursive>
 8001222:	4628      	mov	r0, r5
 8001224:	4621      	mov	r1, r4
 8001226:	f7ff ff63 	bl	80010f0 <__sflush_r>
 800122a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800122c:	4605      	mov	r5, r0
 800122e:	07da      	lsls	r2, r3, #31
 8001230:	d4e4      	bmi.n	80011fc <_fflush_r+0xc>
 8001232:	89a3      	ldrh	r3, [r4, #12]
 8001234:	059b      	lsls	r3, r3, #22
 8001236:	d4e1      	bmi.n	80011fc <_fflush_r+0xc>
 8001238:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800123a:	f7ff fb8f 	bl	800095c <__retarget_lock_release_recursive>
 800123e:	e7dd      	b.n	80011fc <_fflush_r+0xc>

08001240 <__swhatbuf_r>:
 8001240:	b570      	push	{r4, r5, r6, lr}
 8001242:	460c      	mov	r4, r1
 8001244:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001248:	b096      	sub	sp, #88	@ 0x58
 800124a:	4615      	mov	r5, r2
 800124c:	2900      	cmp	r1, #0
 800124e:	461e      	mov	r6, r3
 8001250:	da0c      	bge.n	800126c <__swhatbuf_r+0x2c>
 8001252:	89a3      	ldrh	r3, [r4, #12]
 8001254:	2100      	movs	r1, #0
 8001256:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800125a:	bf14      	ite	ne
 800125c:	2340      	movne	r3, #64	@ 0x40
 800125e:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001262:	2000      	movs	r0, #0
 8001264:	6031      	str	r1, [r6, #0]
 8001266:	602b      	str	r3, [r5, #0]
 8001268:	b016      	add	sp, #88	@ 0x58
 800126a:	bd70      	pop	{r4, r5, r6, pc}
 800126c:	466a      	mov	r2, sp
 800126e:	f000 f849 	bl	8001304 <_fstat_r>
 8001272:	2800      	cmp	r0, #0
 8001274:	dbed      	blt.n	8001252 <__swhatbuf_r+0x12>
 8001276:	9901      	ldr	r1, [sp, #4]
 8001278:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800127c:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001280:	4259      	negs	r1, r3
 8001282:	4159      	adcs	r1, r3
 8001284:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001288:	e7eb      	b.n	8001262 <__swhatbuf_r+0x22>

0800128a <__smakebuf_r>:
 800128a:	898b      	ldrh	r3, [r1, #12]
 800128c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800128e:	079d      	lsls	r5, r3, #30
 8001290:	4606      	mov	r6, r0
 8001292:	460c      	mov	r4, r1
 8001294:	d507      	bpl.n	80012a6 <__smakebuf_r+0x1c>
 8001296:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800129a:	6023      	str	r3, [r4, #0]
 800129c:	6123      	str	r3, [r4, #16]
 800129e:	2301      	movs	r3, #1
 80012a0:	6163      	str	r3, [r4, #20]
 80012a2:	b003      	add	sp, #12
 80012a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012a6:	ab01      	add	r3, sp, #4
 80012a8:	466a      	mov	r2, sp
 80012aa:	f7ff ffc9 	bl	8001240 <__swhatbuf_r>
 80012ae:	9f00      	ldr	r7, [sp, #0]
 80012b0:	4605      	mov	r5, r0
 80012b2:	4630      	mov	r0, r6
 80012b4:	4639      	mov	r1, r7
 80012b6:	f7ff fbbf 	bl	8000a38 <_malloc_r>
 80012ba:	b948      	cbnz	r0, 80012d0 <__smakebuf_r+0x46>
 80012bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012c0:	059a      	lsls	r2, r3, #22
 80012c2:	d4ee      	bmi.n	80012a2 <__smakebuf_r+0x18>
 80012c4:	f023 0303 	bic.w	r3, r3, #3
 80012c8:	f043 0302 	orr.w	r3, r3, #2
 80012cc:	81a3      	strh	r3, [r4, #12]
 80012ce:	e7e2      	b.n	8001296 <__smakebuf_r+0xc>
 80012d0:	89a3      	ldrh	r3, [r4, #12]
 80012d2:	6020      	str	r0, [r4, #0]
 80012d4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80012d8:	81a3      	strh	r3, [r4, #12]
 80012da:	9b01      	ldr	r3, [sp, #4]
 80012dc:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80012e0:	b15b      	cbz	r3, 80012fa <__smakebuf_r+0x70>
 80012e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012e6:	4630      	mov	r0, r6
 80012e8:	f000 f81e 	bl	8001328 <_isatty_r>
 80012ec:	b128      	cbz	r0, 80012fa <__smakebuf_r+0x70>
 80012ee:	89a3      	ldrh	r3, [r4, #12]
 80012f0:	f023 0303 	bic.w	r3, r3, #3
 80012f4:	f043 0301 	orr.w	r3, r3, #1
 80012f8:	81a3      	strh	r3, [r4, #12]
 80012fa:	89a3      	ldrh	r3, [r4, #12]
 80012fc:	431d      	orrs	r5, r3
 80012fe:	81a5      	strh	r5, [r4, #12]
 8001300:	e7cf      	b.n	80012a2 <__smakebuf_r+0x18>
	...

08001304 <_fstat_r>:
 8001304:	b538      	push	{r3, r4, r5, lr}
 8001306:	2300      	movs	r3, #0
 8001308:	4d06      	ldr	r5, [pc, #24]	@ (8001324 <_fstat_r+0x20>)
 800130a:	4604      	mov	r4, r0
 800130c:	4608      	mov	r0, r1
 800130e:	4611      	mov	r1, r2
 8001310:	602b      	str	r3, [r5, #0]
 8001312:	f7ff f819 	bl	8000348 <_fstat>
 8001316:	1c43      	adds	r3, r0, #1
 8001318:	d102      	bne.n	8001320 <_fstat_r+0x1c>
 800131a:	682b      	ldr	r3, [r5, #0]
 800131c:	b103      	cbz	r3, 8001320 <_fstat_r+0x1c>
 800131e:	6023      	str	r3, [r4, #0]
 8001320:	bd38      	pop	{r3, r4, r5, pc}
 8001322:	bf00      	nop
 8001324:	200001bc 	.word	0x200001bc

08001328 <_isatty_r>:
 8001328:	b538      	push	{r3, r4, r5, lr}
 800132a:	2300      	movs	r3, #0
 800132c:	4d05      	ldr	r5, [pc, #20]	@ (8001344 <_isatty_r+0x1c>)
 800132e:	4604      	mov	r4, r0
 8001330:	4608      	mov	r0, r1
 8001332:	602b      	str	r3, [r5, #0]
 8001334:	f7ff f817 	bl	8000366 <_isatty>
 8001338:	1c43      	adds	r3, r0, #1
 800133a:	d102      	bne.n	8001342 <_isatty_r+0x1a>
 800133c:	682b      	ldr	r3, [r5, #0]
 800133e:	b103      	cbz	r3, 8001342 <_isatty_r+0x1a>
 8001340:	6023      	str	r3, [r4, #0]
 8001342:	bd38      	pop	{r3, r4, r5, pc}
 8001344:	200001bc 	.word	0x200001bc

08001348 <_sbrk_r>:
 8001348:	b538      	push	{r3, r4, r5, lr}
 800134a:	2300      	movs	r3, #0
 800134c:	4d05      	ldr	r5, [pc, #20]	@ (8001364 <_sbrk_r+0x1c>)
 800134e:	4604      	mov	r4, r0
 8001350:	4608      	mov	r0, r1
 8001352:	602b      	str	r3, [r5, #0]
 8001354:	f7ff f81e 	bl	8000394 <_sbrk>
 8001358:	1c43      	adds	r3, r0, #1
 800135a:	d102      	bne.n	8001362 <_sbrk_r+0x1a>
 800135c:	682b      	ldr	r3, [r5, #0]
 800135e:	b103      	cbz	r3, 8001362 <_sbrk_r+0x1a>
 8001360:	6023      	str	r3, [r4, #0]
 8001362:	bd38      	pop	{r3, r4, r5, pc}
 8001364:	200001bc 	.word	0x200001bc

08001368 <memchr>:
 8001368:	b2c9      	uxtb	r1, r1
 800136a:	4603      	mov	r3, r0
 800136c:	4402      	add	r2, r0
 800136e:	b510      	push	{r4, lr}
 8001370:	4293      	cmp	r3, r2
 8001372:	4618      	mov	r0, r3
 8001374:	d101      	bne.n	800137a <memchr+0x12>
 8001376:	2000      	movs	r0, #0
 8001378:	e003      	b.n	8001382 <memchr+0x1a>
 800137a:	7804      	ldrb	r4, [r0, #0]
 800137c:	3301      	adds	r3, #1
 800137e:	428c      	cmp	r4, r1
 8001380:	d1f6      	bne.n	8001370 <memchr+0x8>
 8001382:	bd10      	pop	{r4, pc}

08001384 <_init>:
 8001384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001386:	bf00      	nop
 8001388:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800138a:	bc08      	pop	{r3}
 800138c:	469e      	mov	lr, r3
 800138e:	4770      	bx	lr

08001390 <_fini>:
 8001390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001392:	bf00      	nop
 8001394:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001396:	bc08      	pop	{r3}
 8001398:	469e      	mov	lr, r3
 800139a:	4770      	bx	lr
